<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>初探xxljob</title>
    <url>/2022/02/13/0.0.1%E5%88%9D%E6%8E%A2xxljob/</url>
    <content><![CDATA[<p><a href="http://gitee.com/xuxueli0323/xxl-job/releases">下载地址</a></p>
<p>搭建xxljob需要提前准备好</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">maven3+</span><br><span class="line">jdk8+</span><br><span class="line">mysql5.7+</span><br></pre></td></tr></table></figure>

<h3 id="1-首先初始化SQL脚本建立必须的库和表"><a href="#1-首先初始化SQL脚本建立必须的库和表" class="headerlink" title="1.首先初始化SQL脚本建立必须的库和表"></a>1.首先初始化SQL脚本建立必须的库和表</h3><p><img src="https://img-blog.csdnimg.cn/41e36ffb828147959d17e4668e4fcde1.png#pic_center" alt="在这里插入图片描述"></p>
<h3 id="2-对于解压的文件分为三个模块"><a href="#2-对于解压的文件分为三个模块" class="headerlink" title="2.对于解压的文件分为三个模块"></a>2.对于解压的文件分为三个模块</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xxl-job-admin：调度中心</span><br><span class="line">xxl-job-core：公共依赖</span><br><span class="line">xxl-job-executor-samples：执行器Sample示例（选择合适的版本执行器，可直接使用，也可以参考其并将现有项目改造成执行器）</span><br><span class="line">    ：xxl-job-executor-sample-springboot：Springboot版本，通过Springboot管理执行器，推荐这种方式；</span><br><span class="line">    ：xxl-job-executor-sample-frameless：无框架版本；</span><br></pre></td></tr></table></figure>

<p>其中：xxl-job-core是需要引入的源码包后续我们可以用以下形式引入</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xuxueli<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xxl-job-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>xxl-job-admin是我们的调度中心，我们只需要把这个项目单独拿出来运行就行了，下面是运行结果</p>
<p><img src="https://img-blog.csdnimg.cn/aa9e342bd215486daaa05d8783dd5f35.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARm9hbeeVquiMhA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>xxl-job-executor-sample-springboot是我们后续用boot可以参照的模板，当然也可以直接用来使用</p>
<h3 id="3-xxl-job-admin配置"><a href="#3-xxl-job-admin配置" class="headerlink" title="3.xxl-job-admin配置"></a>3.xxl-job-admin配置</h3><p>先修改数据库的地址，也就是上面初始化的地址</p>
<p><label style="color:#843900">注意在数据库地址哪里加上时区属性，否则乱码</label></p>
<p><img src="https://img-blog.csdnimg.cn/5f6ad4958e8940e19977bdfbd74a6d56.png#pic_center" alt="在这里插入图片描述"></p>
<p>然后修改警报邮箱配置</p>
<p><img src="https://img-blog.csdnimg.cn/fdce9d1b4aa744269bdfcd5706c83abc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARm9hbeeVquiMhA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<h3 id="4-警报邮箱配置"><a href="#4-警报邮箱配置" class="headerlink" title="4.警报邮箱配置"></a>4.警报邮箱配置</h3><p><img src="https://img-blog.csdnimg.cn/f59f8bc6828343909ba1c178b8ed6e72.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARm9hbeeVquiMhA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>去自己对应邮箱的设置里面找到smtp并开启</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注意：spring.mail.password的密码是QQ邮箱开启SMTP的授权码而非QQ密码</span><br></pre></td></tr></table></figure>

<p><label style="color:#843900">这里需要注意不同邮箱有不同的收发件host</label></p>
<p>比如新浪</p>
<p>发件:POP3服务器为：pop3.sina.com.cn<br>收件:SMTP服务器为：smtp.sina.com.cn</p>
<p>qq</p>
<p>发件:POP3服务器为：pop.qq.com<br>收件:SMTP服务器为：smtp.qq.com</p>
<p>注意 不能自己邮箱发自己邮箱，否则收不到</p>
<p><img src="https://img-blog.csdnimg.cn/e0947d401d0f4f0d8bb6a64063f3d866.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARm9hbeeVquiMhA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>上面就是收件的内容</p>
<h3 id="5-boot整合xxljob"><a href="#5-boot整合xxljob" class="headerlink" title="5.boot整合xxljob"></a>5.boot整合xxljob</h3><p>引入依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xuxueli<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xxl-job-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>配置文件整合</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxl.job.core.executor.impl.XxlJobSpringExecutor;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">xxlConfig</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(xxlConfig.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;xxl.job.admin.addresses&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String adminAddresses;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;xxl.job.accessToken&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String accessToken;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;xxl.job.executor.appname&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String appname;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;xxl.job.executor.address&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;xxl.job.executor.ip&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String ip;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;xxl.job.executor.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> port;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;xxl.job.executor.logpath&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String logPath;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;xxl.job.executor.logretentiondays&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> logRetentionDays;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> XxlJobSpringExecutor <span class="title">xxlJobExecutor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job config init.&quot;</span>);</span><br><span class="line">        XxlJobSpringExecutor xxlJobSpringExecutor = <span class="keyword">new</span> XxlJobSpringExecutor();</span><br><span class="line">        xxlJobSpringExecutor.setAdminAddresses(adminAddresses);</span><br><span class="line">        xxlJobSpringExecutor.setAppname(appname);</span><br><span class="line">        xxlJobSpringExecutor.setAddress(address);</span><br><span class="line">        xxlJobSpringExecutor.setIp(ip);</span><br><span class="line">        xxlJobSpringExecutor.setPort(port);</span><br><span class="line">        xxlJobSpringExecutor.setAccessToken(accessToken);</span><br><span class="line">        xxlJobSpringExecutor.setLogPath(logPath);</span><br><span class="line">        xxlJobSpringExecutor.setLogRetentionDays(logRetentionDays);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> xxlJobSpringExecutor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>application.properties</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动端口和访问路径</span></span><br><span class="line"><span class="meta">server.port</span>=<span class="string">8089</span></span><br><span class="line"><span class="meta">server.servlet.context-path</span>=<span class="string">/todo</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 调度中心（xxl-job-admin）的部署地址，如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行&quot;执行器心跳注册&quot;和&quot;任务结果回调&quot;；</span></span><br><span class="line"><span class="comment"># 为空则关闭自动注册；则需要手动注册</span></span><br><span class="line"><span class="meta">xxl.job.admin.addresses</span>=<span class="string">http://127.0.0.1:8080/xxl-job-admin</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### 执行器通讯TOKEN [选填]：非空时启用；</span></span><br><span class="line"><span class="meta">xxl.job.accessToken</span>=<span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册</span></span><br><span class="line"><span class="meta">xxl.job.executor.appname</span>=<span class="string">job-to-do</span></span><br><span class="line"><span class="comment">### 执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。</span></span><br><span class="line"><span class="meta">xxl.job.executor.address</span>=<span class="string"></span></span><br><span class="line"><span class="comment">### 执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 &quot;执行器注册&quot; 和 &quot;调度中心请求并触发任务&quot;；</span></span><br><span class="line"><span class="meta">xxl.job.executor.ip</span>=<span class="string"></span></span><br><span class="line"><span class="meta">xxl.job.executor.port</span>=<span class="string">9998</span></span><br><span class="line"><span class="comment">### 执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；</span></span><br><span class="line"><span class="meta">xxl.job.executor.logpath</span>=<span class="string">/data/applogs/xxl-job/jobhandler</span></span><br><span class="line"><span class="comment">### 执行器日志文件保存天数 [选填] ： 过期日志自动清理, 限制值大于等于3时生效; 否则, 如-1, 关闭自动清理功能；</span></span><br><span class="line"><span class="meta">xxl.job.executor.logretentiondays</span>=<span class="string">30</span></span><br></pre></td></tr></table></figure>

<h3 id="6-定时任务的创建方式"><a href="#6-定时任务的创建方式" class="headerlink" title="6.定时任务的创建方式"></a>6.定时任务的创建方式</h3><p><img src="https://img-blog.csdnimg.cn/20210107153914491.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3ajc3NjE5OTg0NQ==,size_16,color_FFFFFF,t_70" alt="img"></p>
<p>@XxlJob注解是新版本提供的方式，不需要继承</p>
<p>旧版方式是继承IJobHander然后重写execute方法</p>
<h3 id="7-界面介绍"><a href="#7-界面介绍" class="headerlink" title="7.界面介绍"></a>7.界面介绍</h3><p><img src="https://img-blog.csdnimg.cn/1d7d97d8e07041649fe41609182ff877.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARm9hbeeVquiMhA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/64509e90b93641e38373b498c1f68392.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARm9hbeeVquiMhA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p><label style="color:#843900"> 注意  当删除任务时，任务日志也会跟着删除 </label></p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>中间件</tag>
      </tags>
  </entry>
  <entry>
    <title>分段执行</title>
    <url>/2022/05/01/0.0.3%E5%88%86%E6%AE%B5%E6%89%A7%E8%A1%8C/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> batchSize = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">if</span>(dataList.size() &lt;= batchSize)&#123;</span><br><span class="line">    insertByStocks(dataList,type);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; dataList.size();i+=batchSize)&#123;</span><br><span class="line">        <span class="keyword">if</span>((i + batchSize)&gt; dataList.size())&#123;</span><br><span class="line">            batchSize = dataList.size()-i;</span><br><span class="line">        &#125;</span><br><span class="line">        insertByStocks(dataList.subList(i,i+batchSize),type);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>batchSize: 每次执行多少条</p>
<p>dataList:  数据列表</p>
<p>insertByStocks：需要执行的方法</p>
]]></content>
      <tags>
        <tag>工具类</tag>
        <tag>算法公式</tag>
      </tags>
  </entry>
  <entry>
    <title>定时任务使用总结</title>
    <url>/2022/04/04/0.0.2%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>相信定时任务大家都不陌生，可能在个人项目中使用定时任务会比较少，但是在业务复杂的公司中，定时任务是不可或缺的一部分，有时候也可以贯穿整个项目的流程运转。</p>
<h1 id="什么是定时任务"><a href="#什么是定时任务" class="headerlink" title="什么是定时任务"></a>什么是定时任务</h1><p>crond类似于我们平时生活中的闹钟，可以定时叫你起床，而在项目中就是定时执行一段指定的代码</p>
<p><strong>为什么要使用crond呢</strong></p>
<p>1.如果对于一些数据实时性要求没那么高，我们可以把数据提前丢到缓存中，这个时候就需要使用定时任务去跑了，比如每天凌晨3点定时把数据同步到缓存，错峰同步避开白天人流量大的时候消耗资源</p>
<p>2.比如凌晨2点有抢购接口/或者业务开关需要进行变更开启，我们可以使用定时任务去进行变更，不用人为去守着变更，而且执行时间更准确（可以滚去睡大觉.jpg）</p>
<p>3.还可以进行数据的定时备份，比如备份配置文件，防止宕机的时候配置文件的恢复等等</p>
<h1 id="定时任务实现方式"><a href="#定时任务实现方式" class="headerlink" title="定时任务实现方式"></a>定时任务实现方式</h1><h2 id="1-Thread"><a href="#1-Thread" class="headerlink" title="1.Thread"></a>1.Thread</h2><p>各位亲爱的朋友，没错，Thread真的可以做定时任务.</p>
<p>如果你去看过一些定时任务框架的源码，它们的底层也会使用Thread类（需要注意用try……catch捕获异常，否则出现异常，就直接退出循环）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;doSameThing&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">1000</span> * <span class="number">60</span> * <span class="number">5</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                log.error(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用场景：比如项目中有时需要每隔10分钟去下载某个文件，或者每隔5分钟去读取模板文件生成静态html页面等等，一些简单的周期性任务场景。</p>
<p>优缺点：</p>
<ul>
<li>优点：这种定时任务非常简单，学习成本低，容易入手，对于那些简单的周期性任务，是个不错的选择。</li>
<li>缺点：不支持指定某个时间点执行任务，不支持延迟执行等操作，功能过于单一，无法应对一些较为复杂的场景。</li>
</ul>
<h2 id="2-Timer"><a href="#2-Timer" class="headerlink" title="2.Timer"></a>2.Timer</h2><p>Timer 类是jdk专门提供的定时器工具，用来在后台线程计划执行指定任务，在 java.util 包下，要跟 TimerTask 一起配合使用。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Timer</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Timer timer = <span class="keyword">new</span> Timer();</span><br><span class="line">    <span class="comment">// 1.需要执行的内容</span></span><br><span class="line">    <span class="comment">// 2.延时多久执行</span></span><br><span class="line">    <span class="comment">// 3.执行周期</span></span><br><span class="line">    timer.schedule(<span class="keyword">new</span> TimerTask() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="number">123</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,<span class="number">200</span>,<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>优缺点：</p>
<ul>
<li>优点：非常方便实现多个周期性的定时任务，并且支持延迟执行，还支持在指定时间之后支持，功能还算强大。</li>
<li>缺点：如果其中一个任务耗时非常长，会影响其他任务的执行。并且如果 TimerTask 抛出 RuntimeException ， Timer 会停止所有任务的运行，所以<code>阿里巴巴开发者规范中不建议使用它</code></li>
</ul>
<h2 id="3-Scheduled-注解（常用）"><a href="#3-Scheduled-注解（常用）" class="headerlink" title="3.Scheduled 注解（常用）"></a>3.Scheduled 注解（常用）</h2><p>由于xml方式太古老了，我们以springboot项目中注解方式为例</p>
<p>1.引入依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.在springboot启动类上加上 @EnableScheduling 注解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    ……</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>3.使用 @Scheduled 注解定义定时规则</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CronJob</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Scheduled(cron = &quot;0/5 * * * * ?&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">autoGetMessage</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;当期执行时间：&quot;</span> + <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy年MM月dd日 HH:mm:ss&quot;</span>).format(<span class="keyword">new</span> Date()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>优缺点：</p>
<ul>
<li>优点：<code>采用cron表达式，比较方便</code>，spring框架自带的定时功能，springboot做了非常好的封装，开启和定义定时任务非常容易，可以满足绝大多数单机版的业务场景。单个任务时，当前次的调度完成后，再执行下一次任务调度。</li>
<li>默认单线程，如果前面的任务执行时间太长，对后面任务的执行有影响。不支持集群方式部署，不能做数据存储型定时任务。</li>
</ul>
<h2 id="5-spring-quartz（常用）"><a href="#5-spring-quartz（常用）" class="headerlink" title="5.spring quartz（常用）"></a>5.spring quartz（常用）</h2><p>quartz 是 OpenSymphony 开源组织在 Job scheduling 领域的开源项目，是由java开发的一个开源的任务日程管理系统。</p>
<p>quartz能做什么？</p>
<ul>
<li>作业调度：调用各种框架的作业脚本，例如shell,hive等。</li>
<li>定时任务：在某一预定的时刻，执行你想要执行的任务</li>
</ul>
<p>1.引入相关依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.定时任务执行类继承QuartzJobBean</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateTimeJob</span> <span class="keyword">extends</span> <span class="title">QuartzJobBean</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">executeInternal</span><span class="params">(JobExecutionContext jobExecutionContext)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</span><br><span class="line">        <span class="comment">//获取JobDetail中关联的数据</span></span><br><span class="line">        String msg = (String) jobExecutionContext.getJobDetail().getJobDataMap().get(<span class="string">&quot;msg&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;current time :&quot;</span>+<span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(<span class="keyword">new</span> Date()) + <span class="string">&quot;---&quot;</span> + msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.调度配置</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuartzConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JobDetail <span class="title">printTimeJobDetail</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> JobBuilder.newJob(DateTimeJob.class)<span class="comment">//PrintTimeJob我们的业务类</span></span><br><span class="line">                .withIdentity(<span class="string">&quot;DateTimeJob&quot;</span>)<span class="comment">//可以给该JobDetail起一个id</span></span><br><span class="line">                <span class="comment">//每个JobDetail内都有一个Map，包含了关联到这个Job的数据，在Job类中可以通过context获取</span></span><br><span class="line">                .usingJobData(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;Hello Quartz&quot;</span>)<span class="comment">//关联键值对</span></span><br><span class="line">                .storeDurably()<span class="comment">//即使没有Trigger关联时，也不需要删除该JobDetail</span></span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Trigger <span class="title">printTimeJobTrigger</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        CronScheduleBuilder cronScheduleBuilder = CronScheduleBuilder.cronSchedule(<span class="string">&quot;0/1 * * * * ?&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> TriggerBuilder.newTrigger()</span><br><span class="line">                .forJob(printTimeJobDetail())<span class="comment">//关联上述的JobDetail</span></span><br><span class="line">                .withIdentity(<span class="string">&quot;quartzTaskService&quot;</span>)<span class="comment">//给Trigger起个名字</span></span><br><span class="line">                .withSchedule(cronScheduleBuilder)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>优缺点：</p>
<ul>
<li>优点：默认是多线程异步执行，单个任务时，在上一个调度未完成时，下一个调度时间到时，会另起一个线程开始新的调度，多个任务之间互不影响。支持复杂的 cron 表达式，它能被集群实例化，支持分布式部署</li>
<li>缺点：相对于spring task实现定时任务成本更高，需要手动配置 QuartzJobBean 、 JobDetail和 Trigger 等。需要引入了第三方的 quartz 包，有一定的学习成本。不支持并行调度，不支持失败处理策略和动态分片的策略等。</li>
</ul>
<p>以下两种配置参考方式</p>
<p><a href="https://blog.csdn.net/userlhj/article/details/89510837">springXML配置方式</a></p>
<p><a href="https://blog.csdn.net/chenmingxu438521/article/details/94485695">SpringBoot配置方式</a></p>
<h2 id="6-xxl-job（常用：分布式定时任务主流）"><a href="#6-xxl-job（常用：分布式定时任务主流）" class="headerlink" title="6.xxl-job（常用：分布式定时任务主流）"></a>6.xxl-job（常用：分布式定时任务主流）</h2><p>xxl-job 是大众点评（许雪里）开发的一个分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，<code>开箱即用</code>。</p>
<p>xxl-job 框架对 quartz 进行了扩展，使用 mysql 数据库存储数据，并且内置jetty作为 RPC服务调用。</p>
<p>具体配置可以参考之前本人写的【<a href="https://foamtomato.github.io/2022/02/13/%E5%88%9D%E6%8E%A2xxljob/">初探xxljob</a>】</p>
<p>优缺点：</p>
<ul>
<li>优点：有界面管理定时任务，支持弹性扩容缩容、动态分片、故障转移、失败报警等功能。它的功能非常强大，很多大厂在用，可以满足绝大多数业务场景。</li>
<li>缺点：和 quartz 一样，通过数据库分布式锁，来控制任务不能重复执行。在任务非常多的情况下，有一些性能问题。</li>
</ul>
<h1 id="分布式定时任务"><a href="#分布式定时任务" class="headerlink" title="分布式定时任务"></a>分布式定时任务</h1><p>在前面提到<code>Timer</code>/<code>ScheduledExecutorService</code>/<code>SpringTask(@Schedule)</code>都是单机的，但我们一旦上了生产环境，应用部署<strong>往往</strong>都是集群模式的。</p>
<p>在集群下，我们一般是希望<strong>某个定时任务</strong>只在某台机器上执行，那这时候，单机实现的定时任务就不太好处理了。</p>
<p><code>Quartz</code>是有<strong>集群部署</strong>方案的，所以有的人会利用<strong>数据库行锁</strong>或者使用<strong>Redis分布式锁</strong>来自己实现定时任务跑在某一台<strong>应用机器</strong>上；做肯定是能做的，包括有些挺出名的分布式定时任务框架也是这样做的，能解决问题。</p>
<p>但我们遇到的问题不单单只有这些，比如我想要支持<strong>容错</strong>功能（失败重试）、<strong>分片</strong>功能、<strong>手动触发</strong>一次任务、有一个比较好的管理定时任务的<strong>后台界面</strong>、<strong>路由</strong>负载均衡等等。这些功能，就是作为「<strong>分布式定时任务框架</strong>」所具备的。</p>
<p>分布式定时任务框架又可以分成了<strong>两个流派</strong>：中心化和去中心化</p>
<ul>
<li>所谓的「中心化」指的是：调度器和执行器<strong>分离</strong>，调度器统一进行调度，通知执行器去执行定时任务</li>
<li>所谓的「去中心化」指的是：调度器和执行器<strong>耦合</strong>，自己调度自己执行</li>
</ul>
<p>对于「中心化」流派来说，存储相关的信息很可能是在<strong>数据库</strong>（DataBase），而我们引入的<code>client</code>包实际上就是<strong>执行器</strong>相关的代码。调度器<strong>实现了任务调度</strong>的逻辑，<strong>远程调用</strong>执行器触发对应的逻辑。</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/83ab16a6eb9d4e3aaa342834ba0caf5e~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp" alt="img"></p>
<h1 id="谈谈定时任务使用场景"><a href="#谈谈定时任务使用场景" class="headerlink" title="谈谈定时任务使用场景"></a>谈谈定时任务使用场景</h1><p>我现在公司对于定时任务的主要使用场景是更新缓存，清洗数据，定时推送，定时拉单等等</p>
<p>先说说更新缓存：就是每隔一段时间去执行操作，可能一天只需要更新一次当天的缓存数据，一般会选择放在凌晨人流量少的时候执行。</p>
<p>清洗数据和定时拉单就比较像，会比如每间隔15分钟去进行一次扫表，看看有没有需要进行执行的流程</p>
<p>定时推送就是你想的那样，定时推送消息或者定时执行代码的开关</p>
<p>对于以上的操作，我们可以分为两种，全量更新和增量更新</p>
<p><code>全量更新</code>：这个比较常用，就是一次性全部查询出来，然后一次性更新到缓存里面去</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">zxMachineBuild</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">// 1.查询需要缓存的数据</span></span><br><span class="line">    List&lt;Tax&gt; taxs = tConfigPolicyMapper.getTConfigTax();</span><br><span class="line">    <span class="comment">// 2.拼接存储格式</span></span><br><span class="line">    Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(Tax tax:taxs)&#123;</span><br><span class="line">        ……</span><br><span class="line">        map.put(tax.getPindex(),tax);</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">// 3.更新到redis</span></span><br><span class="line">    redisService.batchPutInPipelined(map,<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意：因为以上使用的是有过期时间的，如果正常跑的话一般会先删后增，如果是redis的话可以直接全部覆盖（使用场景一般是初始化的时候或者数据重跑）</p>
<p><code>增量更新</code>：增量的基础就是全量，先全量更新后，再用增量方式同步更新，一般利用节点或者状态去进行更新</p>
<p>我们常用的更新方式</p>
<p><code>根据状态更新</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">zxMachineBuild</span><span class="params">(String type)</span></span>&#123;</span><br><span class="line">	<span class="comment">// 1.查询需要增量的数据</span></span><br><span class="line">    List&lt;Tax&gt; taxs = tConfigPolicyMapper.getTConfigTax(type);</span><br><span class="line">    <span class="comment">// 2.拼接存储格式</span></span><br><span class="line">    Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(Tax tax:taxs)&#123;</span><br><span class="line">        ……</span><br><span class="line">        map.put(tax.getPindex(),tax);</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">// 3.更新到redis，根据数据判断使用过期还是精准删除</span></span><br><span class="line">    redisService.batchPutInPipelined(map,<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>);</span><br><span class="line">    <span class="comment">// 4.更新状态</span></span><br><span class="line">    tConfigPolicyMapper.updateTConfigType(taxs);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>根据节点更新</code>:假设我使用redis来存储我的节点（一般会使用id作为节点，以下例子使用时间节点）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">zxMachineBuild</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 获取上次更新的时间节点</span></span><br><span class="line">    <span class="keyword">long</span> nodeTime = redisService.getNodeTime();</span><br><span class="line">	<span class="comment">// 获取在该时间节点之后的数据（根据时间排序）</span></span><br><span class="line">    List&lt;Tax&gt; taxs = tConfigPolicyMapper.getTConfigTax(nodeTime);</span><br><span class="line">    <span class="comment">// 拼接存储格式</span></span><br><span class="line">    Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(Tax tax:taxs)&#123;</span><br><span class="line">        ……</span><br><span class="line">        map.put(tax.getPindex(),tax);</span><br><span class="line">        <span class="comment">// 如果不根据时间排序就比较获取</span></span><br><span class="line">        <span class="keyword">if</span>(tax.getCreateTime() != <span class="keyword">null</span> &amp;&amp; tax.getCreateTime() &gt; nodeTime)&#123;</span><br><span class="line">			nodeTime = tax.getCreateTime();</span><br><span class="line">        &#125;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">// 3.更新到redis，根据数据判断使用过期还是精准删除</span></span><br><span class="line">    redisService.batchPutInPipelined(map,<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>);</span><br><span class="line">    <span class="comment">// 4.更新时间节点到redis（获取最后一个的时间节点）</span></span><br><span class="line">    redisService.updateNodeTime(nodeTime);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>进阶</code>（推荐）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">zxMachineBuild</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 随机一个uuid</span></span><br><span class="line">    String uuid = UUID.randomUUID().toString().replaceAll(<span class="string">&quot;-&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="comment">// 锁定</span></span><br><span class="line">    tConfigPolicyMapper.Lock(uuid);</span><br><span class="line">	<span class="comment">// 查询提前锁定好的数据</span></span><br><span class="line">    List&lt;Tax&gt; taxs = tConfigPolicyMapper.getTConfigTax(uuid);</span><br><span class="line">    <span class="comment">// 拼接存储格式</span></span><br><span class="line">    Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(Tax tax:taxs)&#123;</span><br><span class="line">        ……</span><br><span class="line">        map.put(tax.getPindex(),tax);</span><br><span class="line">        <span class="comment">// 如果不根据时间排序就比较获取</span></span><br><span class="line">        <span class="keyword">if</span>(tax.getCreateTime() != <span class="keyword">null</span> &amp;&amp; tax.getCreateTime() &gt; nodeTime)&#123;</span><br><span class="line">			nodeTime = tax.getCreateTime();</span><br><span class="line">        &#125;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">// 更新到redis，根据数据判断使用过期还是精准删除</span></span><br><span class="line">    redisService.batchPutInPipelined(map,<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>);</span><br><span class="line">    <span class="comment">// 更新锁定状态为已跑</span></span><br><span class="line">    tConfigPolicyMapper.updateNodeTime(taxs);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用以上方式的好处就是可以直接先锁定自己需要跑的部分，防止其他的定时任务抢占</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">## 取t_pao_lowprice_taobao数据出来，设置state<span class="operator">=</span>‘L’ 锁住</span><br><span class="line">update [t_pao_lowprice_taobao] <span class="keyword">set</span> lockname<span class="operator">=</span><span class="string">&#x27;guid&#x27;</span>,locktime<span class="operator">=</span>GETDATE(),state<span class="operator">=</span><span class="string">&#x27;L&#x27;</span> </span><br><span class="line"><span class="keyword">from</span> [t_pao_lowprice_taobao] a <span class="keyword">join</span> </span><br><span class="line">(<span class="keyword">select</span> top <span class="number">2</span> id <span class="keyword">from</span> [t_pao_lowprice_taobao] <span class="keyword">where</span> lockname <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">and</span> state<span class="operator">=</span><span class="string">&#x27;N&#x27;</span> <span class="keyword">order</span> <span class="keyword">by</span> createtime <span class="keyword">asc</span>) </span><br><span class="line">b <span class="keyword">on</span> a.id<span class="operator">=</span>b.id</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">## lockname【对应代码的uuid】 状态为state<span class="operator">=</span>‘L’ 获取需要跑的数据，开线程去跑</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> [t_pao_lowprice_taobao] <span class="keyword">where</span> lockname<span class="operator">=</span><span class="string">&#x27;guid&#x27;</span> <span class="keyword">and</span> state<span class="operator">=</span><span class="string">&#x27;L&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>可能在个人项目中，对于定时任务的需求没有那么多，不会去重视这一块，但是在实际工作中，定时任务往往扮演着重要的角色</p>
<p>不同的定时任务有不同的优缺点，往往我们去选择适合自己的那种方式，就需要对于其种类有一定的了解，怎样才能更高效的去进行开发，尽量避免使用到一半因为其底层设计的原因导致BUG。</p>
<p>现在基本也使用<code>E-Job(ElasticJob)</code>或者<code>X-Job(XXLJob)</code>这种分布式定时任务，它们都有广泛的用户基础和完整的技术文档</p>
<ul>
<li>X-Job 侧重的业务实现的简单和管理的方便，学习成本简单，失败策略和路由策略丰富。推荐使用在“用户基数相对少，服务器数量在一定范围内”的情景下使用</li>
<li>E-Job 关注的是数据，增加了弹性扩容和数据分片的思路，以便于更大限度的利用分布式服务器的资源。但是学习成本相对高些，推荐在“数据量庞大，且部署服务器数量较多”时使用</li>
</ul>
<p>单机的定时任务现在基本不推荐使用了，维护起来比较麻烦</p>
<p>对于定时任务，个人理解程度有限，使用的场景往往更加复杂不能每点都考虑到，欢迎大家能提出自己的想法</p>
<p>比如分布式定时任务下如何去保证事务的一致性，单机定时任务又如何去保证数据不重复等等场景都需要去挖掘……</p>
<p>参考指南：</p>
<ul>
<li><a href="https://www.jianshu.com/p/4385a2df73f3">什么是定时任务</a></li>
<li><a href="https://blog.csdn.net/Java_Pluto/article/details/117352506">十种常用定时任务</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/313595122">Springboot定时任务以及优缺点</a></li>
<li><a href="https://blog.csdn.net/userlhj/article/details/89510837">Spring集成Quartz定时器</a></li>
<li><a href="https://juejin.cn/post/7078829903558213639">为什么要用分布式定时任务</a></li>
<li><a href="https://juejin.cn/post/6987191113689858084">分布式定时任务框架选型</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>缓存双写不一致</title>
    <url>/2022/03/07/0.0.5%E7%BC%93%E5%AD%98%E5%8F%8C%E5%86%99%E4%B8%8D%E4%B8%80%E8%87%B4/</url>
    <content><![CDATA[<h1 id="缓存数据库双写不一致"><a href="#缓存数据库双写不一致" class="headerlink" title="缓存数据库双写不一致"></a>缓存数据库双写不一致</h1><blockquote>
<p>高并发下缓存与数据库双写不一致解决方案</p>
</blockquote>
<p>正常的缓存数据库更新的时候应该是先执行线程1，然后执行线程2</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220307203941385.png" alt="image-20220307203941385"></p>
<p>如果线程1卡顿了一下，这时就会造成数据库和缓存不一致的情况<code>线程1把线程2更新的缓存数据给覆盖了</code></p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220307204214243.png" alt="image-20220307204214243"></p>
<h2 id="最开始的缓存不一致问题以及解决方案"><a href="#最开始的缓存不一致问题以及解决方案" class="headerlink" title="最开始的缓存不一致问题以及解决方案"></a>最开始的缓存不一致问题以及解决方案</h2><blockquote>
<p>问题：先修改数据库，再删除缓存，如果删除缓存失败了，那么会导致数据库中是新数据，缓存中是旧数据，数据出现不一致。</p>
</blockquote>
<p>解决思路：<br>　　先删除缓存，再修改数据库，如果删除缓存成功了修改数据库失败了，那么数据库中是旧数据，缓存中是空的，那么数据不会不一致，因为读的时候缓存没有，则读数据库中旧数据，然后更新到缓存中。</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220307205922621.png" alt="image-20220307205922621"></p>
<h2 id="2、并发下数据缓存不一致问题分析"><a href="#2、并发下数据缓存不一致问题分析" class="headerlink" title="2、并发下数据缓存不一致问题分析"></a><strong>2、并发下数据缓存不一致问题分析</strong></h2><p>问题：<br>　　第一个请求数据发生变更，先删除了缓存，然后要去修改数据库，此时还没来得及去修改；<br>　　第二个请求过来去读缓存，发现缓存空了，去查询数据库，查到了修改前的旧数据，放到了缓存中；<br>　　第三个请求读取缓存中的数据 (此时第一个请求已经完成了数据库修改的操作)。<br>　　完了，数据库和缓存中的数据不一样了。。。。</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220307210140337.png" alt="image-20220307210140337"></p>
<p>分析原因：</p>
<p>只有在对同一条数据并发读写的时候，才可能会出现这种问题。其实如果说你的并发量很低的话，特别是读并发很低，每天访问量就1万次，那么很少的情况下，会出现刚才描述的那种不一致的场景;但如果每天的是上亿的流量，每秒并发读是几万，每秒只要有数据更新的请求，就可能会出现上述的数据库+缓存不一致的情况。</p>
<h3 id="内存队列"><a href="#内存队列" class="headerlink" title="内存队列"></a>内存队列</h3><p>数据库的缓存更新与读取操作进行串行化，一个队列对应一个工作线程，每个工作线程串行拿到对应的操作，然后一条一条的执行。</p>
<p>  　　1. 首先我们的项目里维护一组线程池和内存队列。<br>  　　2. 更新数据的时候，根据数据的唯一标识将请求路由到一个jvm队列中，去更新数据库,然后请求结束。<br>  　　3. 读取数据的时候，先查缓存，如果发现数据不在缓存中，那么将根据唯一标识路由之后，也发送同一个jvm内部的队列中，重新读取数据库后更新缓存,最后请求结束。</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/1363214-20190929191217957-1916614649.png" alt="img"></p>
<p>缺点：</p>
<p>1.实现起来麻烦，不同的key可能需要搞不同的队列</p>
<p>2.如果系统挂了，还得还原这些数据，如果出现了异常，还会造成脏数据</p>
<h3 id="延时双删"><a href="#延时双删" class="headerlink" title="延时双删"></a>延时双删</h3><p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220307214115094.png" alt="image-20220307214115094"></p>
<p>延时双删方案执行步骤<br>1.删除redis<br>2.更新数据库<br>3.延时50毫秒<br>4.删除redis</p>
<ul>
<li>问题一：为何要延时50毫秒？<br>这是为了我们在第二次删除redis之前能完成数据库的更新操作。<br>假象一下，如果没有第三步操作时，有很大概率，在两次删除redis操作执行完毕之后，数据库的数据还没有更新，此时若有请求访问数据，便会出现我们一开始提到的那个问题。</li>
<li>问题二: 为何要两次删除redis?<br>如果我们没有第二次删除操作，此时有请求访问数据，有可能是访问的之前未做修改的redis数据，删除操作执行后，redis为空，有请求进来时，便会去访问数据库，此时数据库中的数据已是更新后的数据，保证了数据的一致性。</li>
</ul>
<p>缺点：</p>
<p>1.没有从根本上面去解决问题，如果更新缓存时间超过50ms，那么还是失败的，如果要一直保证休眠时间大于更新时间，这样会不会造成阻塞</p>
<p>2.如果一个接口请求有限制时间，这休眠时间会影响用户体验，影响接口的响应速度</p>
<h3 id="分布式锁"><a href="#分布式锁" class="headerlink" title="分布式锁"></a>分布式锁</h3><p>如果加分布式锁可以直接保证每个线程的执行顺序，也是一种串行操作</p>
<p>这个还是比较推荐使用的，比内存串行实现简单，而且稳定</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220307215417929.png" alt="image-20220307215417929"></p>
<p>缺点：</p>
<p>1.分布式锁会有性能问题，会导致并发量很低（<code>加锁永远不是最优的方案</code>）</p>
<h3 id="读写锁"><a href="#读写锁" class="headerlink" title="读写锁"></a>读写锁</h3><p>redisson中间里面实现了读写锁，读锁与读锁之间是不会互斥的和没加锁一样，写锁与写锁会互斥</p>
<p>一般都是读多写少</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220307220011598.png" alt="image-20220307220011598"></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>一般来说，就是如果你的系统<strong>不是严格要求</strong>缓存+数据库必须<strong>一致性</strong>的话，缓存可以稍微的跟数据库偶尔有不一致的情况，那最好<strong>不要</strong>上述的<strong>串行化</strong>的这个方案，因为读请求和写请求串行化，串到一个内存队列里去，这样是可以保证一定不会出现不一致的情况。但是，串行化之后，就会导致系统的<strong>吞吐量会大幅度的降低</strong>，你就需要用比正常情况下多几倍的机器去支撑线上的一个请求。</p>
<p>以上是本人对缓存数据库不一致情况的了解，本人能力有限，如有问题还望包含，也欢迎指正。谢谢！</p>
]]></content>
      <tags>
        <tag>redis</tag>
        <tag>数据库</tag>
        <tag>缓存</tag>
      </tags>
  </entry>
  <entry>
    <title>简单吐槽一下xml</title>
    <url>/2022/01/08/0.0.6%E7%AE%80%E5%8D%95%E5%90%90%E6%A7%BD%E4%B8%80%E4%B8%8Bxml/</url>
    <content><![CDATA[<blockquote>
<p>描述</p>
</blockquote>
<p>近期与供应商对接的时候，对方的接口还是比较稳定的xml接口，与当下流行的json的便捷性相比还是不太方便，中间我也使用了几种工具类，很难有完全适配的，下文我将讲述我解析xml的历程</p>
<blockquote>
<p>初次接触</p>
</blockquote>
<p>第一次接触xml接口是在对接物流渠道商的时候，当时他们使用的对接方式为soap格式，刚接触解析起来简直要了老命，什么是soap呢？是基于xml的简易协议，常用于webservie，它有自己的一套编码规则，如下</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/20161106222250124.png" alt="在这里插入图片描述"></p>
<p>这种请求网上解析方式就很少，很多只有解析没有构造，文本也不太全，目前见过写的比较好的解析如下：<a href="https://blog.csdn.net/RUANJIAOXIAOZI/article/details/90770534">https://blog.csdn.net/RUANJIAOXIAOZI/article/details/90770534</a></p>
<p>当然还有xsd模式的xml<br><img src="https://img-blog.csdnimg.cn/03da286e53754f9cba71647d703c0c3b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARm9hbeeVquiMhA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>因为这次讲的是xml解析，上面只是举个栗子，让你们体会一下xml的变种有多难😭</p>
<p>这种接口不过分的说，至少十年往上的架构了</p>
<blockquote>
<p>使用dom4j/jsoup解析</p>
</blockquote>
<p>dom4j应该是最经典解析xml的api了，性能优异，功能强大。但是使用起来还是略为麻烦，有点像用java的jsoup去爬取网页，需要一个一个节点的去找</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Dom4j获取xml的三种方式</span><br><span class="line"><span class="number">1.</span>读取xml文件，获得document对象</span><br><span class="line">    SAXReader reader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">    Document document = reader.read(<span class="keyword">new</span> File(<span class="string">&quot;test.xml&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>直接解析xml形式的文本</span><br><span class="line">    String text = <span class="string">&quot;&lt;tag&gt;&lt;/tag&gt;&quot;</span>;</span><br><span class="line">	Document document = DocumentHelper.parseText(text);</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>主动创建document对象</span><br><span class="line">    Document document = DocumentHelper.createDocument();</span><br><span class="line">	Element root = document.addElement(<span class="string">&quot;tag&quot;</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jsoup解析html方式</span><br><span class="line">Document document = Jsoup.parse(html);</span><br><span class="line">Element postList = document.getElementById(<span class="string">&quot;post_list&quot;</span>);</span><br><span class="line">Elements titleEle = postItem.select(<span class="string">&quot;.post_item_body a[class=&#x27;titlelnk&#x27;]&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>以上这种解析方式，属于所见即所得随时可取，但是往往可读性比较差，如图<br><img src="https://img-blog.csdnimg.cn/eabec9e14b4b4fa3b1ffb5459f8c3ca9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARm9hbeeVquiMhA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>当然如果你不嫌麻烦，jsoup也可以解析xml的😎</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JosupTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1. 获取Document对象，根据xml文档获取</span></span><br><span class="line">        <span class="comment">//2. 获取user.xml的path</span></span><br><span class="line">        String path = Objects.requireNonNull(JosupTest.class.getClassLoader().getResource(<span class="string">&quot;User.xml&quot;</span>)).getPath();</span><br><span class="line">        <span class="comment">//3. 解析xml文档，加载文档进内存，获取dom树-----&gt;Document</span></span><br><span class="line">        Document document = Jsoup.parse(<span class="keyword">new</span> File(path),<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="comment">//4. 获取元素对象Elements(类型为ArrayList)</span></span><br><span class="line">        Elements elements = document.getElementsByTag(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="comment">//5. 测试获取元素的个数是否符合，xml文件中的个数</span></span><br><span class="line">        System.out.println(elements.size());</span><br><span class="line">        <span class="comment">//5. 测试获取第一个元素</span></span><br><span class="line">        Element element = elements.get(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">//5. 测试获取第一个元素的文本内容</span></span><br><span class="line">        String name = element.text();</span><br><span class="line">        <span class="comment">//5. 测试获取第一个元素的名字是否正确</span></span><br><span class="line">        System.out.println(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>利用fastjson进行转换</p>
</blockquote>
<p>fastjson和gson这两种解析方式是我使用最多的两种解析方式</p>
<p>gson：快速，高效，代码量少，面向对象，但是相对fastjson和jackjson，它的各方面性能都被碾压</p>
<p>fastjson：性能最高，支持多种类型解析，由于fastjson太侧重性能，对于部分高级特性支持不够，有一部分自定义特性完全偏离了json和js规范，可能导致与其他框架不兼容的bug，并且文档缺失较多，而且代码缺少注释较为晦涩，近几年也出现过一些高危漏洞</p>
<p>如果要使用fastjson解析xml为json格式就需要使用工具类的形式进行转换</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.service.zl.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.dom4j.Attribute;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.Document;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.DocumentException;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.DocumentHelper;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.Element;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONArray;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * xml工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> sleep</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2016-09-13</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XmlTools</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * String 转 org.dom4j.Document</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> xml</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> DocumentException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Document <span class="title">strToDocument</span><span class="params">(String xml)</span> <span class="keyword">throws</span> DocumentException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DocumentHelper.parseText(xml);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * org.dom4j.Document 转  com.alibaba.fastjson.JSONObject</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> xml</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> DocumentException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JSONObject <span class="title">documentToJSONObject</span><span class="params">(String xml)</span> <span class="keyword">throws</span> DocumentException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> elementToJSONObject(strToDocument(xml).getRootElement());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * org.dom4j.Element 转  com.alibaba.fastjson.JSONObject</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> node</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JSONObject <span class="title">elementToJSONObject</span><span class="params">(Element node)</span> </span>&#123;</span><br><span class="line">        JSONObject result = <span class="keyword">new</span> JSONObject();</span><br><span class="line">        <span class="comment">// 当前节点的名称、文本内容和属性</span></span><br><span class="line">        List&lt;Attribute&gt; listAttr = node.attributes();<span class="comment">// 当前节点的所有属性的list</span></span><br><span class="line">        <span class="keyword">for</span> (Attribute attr : listAttr) &#123;<span class="comment">// 遍历当前节点的所有属性</span></span><br><span class="line">            result.put(attr.getName(), attr.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 递归遍历当前节点所有的子节点</span></span><br><span class="line">        List&lt;Element&gt; listElement = node.elements();<span class="comment">// 所有一级子节点的list</span></span><br><span class="line">        <span class="keyword">if</span> (!listElement.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Element e : listElement) &#123;<span class="comment">// 遍历所有一级子节点</span></span><br><span class="line">                <span class="keyword">if</span> (e.attributes().isEmpty() &amp;&amp; e.elements().isEmpty()) <span class="comment">// 判断一级节点是否有属性和子节点</span></span><br><span class="line">                    result.put(e.getName(), e.getTextTrim());<span class="comment">// 沒有则将当前节点作为上级节点的属性对待</span></span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!result.containsKey(e.getName())) <span class="comment">// 判断父节点是否存在该一级节点名称的属性</span></span><br><span class="line">                        result.put(e.getName(), <span class="keyword">new</span> JSONArray());<span class="comment">// 没有则创建</span></span><br><span class="line">                    ((JSONArray) result.get(e.getName())).add(elementToJSONObject(e));<span class="comment">// 将该一级节点放入该节点名称的属性对应的值中</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上面工具类可以直接把xml转为json格式，非常方便，但是局限性太大   只能单向解析，所以最好的方式还是建立实体类的方式</p>
<blockquote>
<p>jaxb和jackson</p>
</blockquote>
<p>jaxb：它是一个业界的标准，是一项可以根据xml生成java类的技术。也可以根据xml实例文档反向生成java对象树的方法，与sax和dom不同，不需要了解xml解析技术，就两种操作<code>java对象转xml</code>和<code>xml转java对象</code></p>
<p>jackson：它性能介于fastjson和gson之间，但是它是目前最流行的api，规范性高，漏洞也没有fastjson多，还支持json和xml转换，目前市场上最好用的api之一</p>
<p>先来看看jaxb的解析xml方式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@XmlRootElement(name = &quot;ServicesError&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TaoBaoBaseRequest</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String errorCode;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String errorMessage;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@XmlElement(name = &quot;ErrorCode&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getErrorCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> errorCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrorCode</span><span class="params">(String errorCode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.errorCode = errorCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@XmlElement(name = &quot;ErrorMessage&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getErrorMessage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> errorMessage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrorMessage</span><span class="params">(String errorMessage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.errorMessage = errorMessage;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>jaxb的解析可以参考这篇文章：<a href="https://blog.csdn.net/wn084/article/details/80853587">https://blog.csdn.net/wn084/article/details/80853587</a></p>
<p>以下是jackjson的解析</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.model.taobao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonInclude;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.MapperFeature;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.dataformat.xml.XmlMapper;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.bind.annotation.XmlRootElement;</span><br><span class="line"><span class="keyword">import</span> javax.xml.stream.XMLStreamException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ClassName: test &lt;br/&gt;</span></span><br><span class="line"><span class="comment"> * Description: &lt;br/&gt;</span></span><br><span class="line"><span class="comment"> * date: 2022/1/30 9:08&lt;br/&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Administrator&lt;br /&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, XMLStreamException </span>&#123;</span><br><span class="line">        String xml = <span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot; standalone=\&quot;no\&quot; ?&gt;&lt;DataList Airlines=\&quot;ALL\&quot; Dpt=\&quot;KMG\&quot; Arr=\&quot;JJN\&quot; Date=\&quot;20220301\&quot; Carrier=\&quot;SC\&quot; Cabin = \&quot;U\&quot; Code=\&quot;SC9260\&quot;&gt;&lt;/DataList&gt;&quot;</span>;</span><br><span class="line">        DataList dataList1 = xmlToObject(xml, DataList.class);</span><br><span class="line">        System.out.println(JSON.toJSONString(dataList1));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">objectToXml</span><span class="params">(Object object)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        XmlMapper xmlMapper= <span class="keyword">new</span> XmlMapper();</span><br><span class="line">        xmlMapper.setDefaultUseWrapper(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">/* 字段为null，自动忽略，不再序列化 */</span></span><br><span class="line">        xmlMapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);</span><br><span class="line">        <span class="comment">/* 设置转换模式 */</span></span><br><span class="line">        xmlMapper.enable(MapperFeature.USE_STD_BEAN_NAMING);</span><br><span class="line">        String resultXml = xmlMapper.writeValueAsString(object);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> resultXml;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">xmlToObject</span><span class="params">(String xml,Class&lt;T&gt; clazz)</span> <span class="keyword">throws</span> IOException, XMLStreamException </span>&#123;</span><br><span class="line">        XmlMapper xmlMapper= <span class="keyword">new</span> XmlMapper();</span><br><span class="line">        xmlMapper.setDefaultUseWrapper(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">/* 字段为null，自动忽略，不再序列化 */</span></span><br><span class="line">        xmlMapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);</span><br><span class="line">        <span class="comment">/* 设置转换模式 */</span></span><br><span class="line">        xmlMapper.enable(MapperFeature.USE_STD_BEAN_NAMING);</span><br><span class="line">        <span class="keyword">return</span> xmlMapper.readValue(xml, clazz);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@JacksonXmlRootElement</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DataList</span></span>&#123;</span><br><span class="line">    <span class="meta">@JacksonXmlProperty(isAttribute = true)</span></span><br><span class="line">    <span class="keyword">private</span> String Airlines;</span><br><span class="line">    <span class="meta">@JacksonXmlProperty(isAttribute = true)</span></span><br><span class="line">    <span class="keyword">private</span> String Dpt;</span><br><span class="line">    <span class="meta">@JacksonXmlProperty(isAttribute = true)</span></span><br><span class="line">    <span class="keyword">private</span> String Arr;</span><br><span class="line">    <span class="meta">@JacksonXmlProperty(isAttribute = true)</span></span><br><span class="line">    <span class="keyword">private</span> String Date;</span><br><span class="line">    <span class="meta">@JacksonXmlProperty(isAttribute = true)</span></span><br><span class="line">    <span class="keyword">private</span> String Carrier;</span><br><span class="line">    <span class="meta">@JacksonXmlProperty(isAttribute = true)</span></span><br><span class="line">    <span class="keyword">private</span> String Cabin;</span><br><span class="line">    <span class="meta">@JacksonXmlProperty(isAttribute = true)</span></span><br><span class="line">    <span class="keyword">private</span> String Code;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAirlines</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Airlines;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAirlines</span><span class="params">(String airlines)</span> </span>&#123;</span><br><span class="line">        Airlines = airlines;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDpt</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Dpt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDpt</span><span class="params">(String dpt)</span> </span>&#123;</span><br><span class="line">        Dpt = dpt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getArr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setArr</span><span class="params">(String arr)</span> </span>&#123;</span><br><span class="line">        Arr = arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Date;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDate</span><span class="params">(String date)</span> </span>&#123;</span><br><span class="line">        Date = date;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCarrier</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Carrier;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCarrier</span><span class="params">(String carrier)</span> </span>&#123;</span><br><span class="line">        Carrier = carrier;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCabin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Cabin;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCabin</span><span class="params">(String cabin)</span> </span>&#123;</span><br><span class="line">        Cabin = cabin;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(String code)</span> </span>&#123;</span><br><span class="line">        Code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DataList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>里面写了一个工具类：<code>objectToXml</code>和<code>xmlToObject</code>可以转换xml和实体类<br>==注意踩坑==</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">坑一：大小写问题</span><br><span class="line"></span><br><span class="line"><span class="meta">@JacksonXmlProperty(localName = &quot;Apid&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Integer Apid;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> Integer <span class="title">getApid</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.Apid</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">把注解放在成员变量上面，会解析出两个apid字段，一个是&lt;Apid&gt;&lt;/Apid&gt;,另一个是&lt;apid&gt;&lt;apid&gt;</span><br><span class="line"></span><br><span class="line">这是因为Jackson的处理机制会自动从属性方法上获取成员变量名，然而在java中，要么以驼峰命名，要么前两个字母都大写，才能用get方法正确地获取属性，所以使用getApid获取的成员名称就是apid，被jackson解析了出来。又因为成员变量上也加了注解，所以也会被解析。这就造成了xml文件生成了两个apid标签。正确的做法是把注解写到get方法上面</span><br><span class="line"></span><br><span class="line">正确写法：</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Integer Apid;</span><br><span class="line"></span><br><span class="line"><span class="meta">@JacksonXmlProperty(localName = &quot;Apid&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> Integer <span class="title">getApid</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.Apid</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">坑二：Jackson封装list问题</span><br><span class="line"></span><br><span class="line">这个问题排查的时候异常困难……开始以为是封装的问题…………(吐槽一下，这个外包项目使用大量xml交互，但是又用不了webservice就得按照固定格式解析封装xml.....改动也贼困难。。。)……最后还是确定了是jackson的问题</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> List&lt;Integer&gt; APID;</span><br><span class="line"></span><br><span class="line"><span class="meta">@JacksonXmlProperty(localName = &quot;APID&quot;)</span></span><br><span class="line"><span class="meta">@JacksonXmlElementWrapper(useWrapping = false)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">getAPID</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> APID;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">开始APID这个list一直被包装了两层！正确结果应该是&lt;APID&gt;<span class="number">111</span>&lt;/APID&gt;</span><br><span class="line"></span><br><span class="line">但是得到的是&lt;APID&gt;&lt;APID&gt;<span class="number">111</span>&lt;/APID&gt;&lt;/APID&gt;</span><br><span class="line"></span><br><span class="line">问题出在JacksonXmlElementWrapper</span><br><span class="line">如果不指定的话这个值默认是<span class="keyword">true</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>总结</p>
</blockquote>
<p>目前感觉解析xml的api还是比较多的，针对xml的各种奇奇怪怪的格式，并不是都能兼容到，目前感觉最好用的还是jackson+Lombok能比较好的快速解决问题，当然要注意lombok的侵入性和jdk的版本选择最好的方式去解决，有些方式虽然不方便，但是它就是能解决问题……</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>xml</tag>
      </tags>
  </entry>
  <entry>
    <title>解决微信小程序键盘上移</title>
    <url>/2022/02/16/0.0.7%E8%A7%A3%E5%86%B3%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%94%AE%E7%9B%98%E4%B8%8A%E7%A7%BB/</url>
    <content><![CDATA[<p>在微信开发者工具没有出现上移的情况，但是一到真机调试就出现了，把页面设置固定布局也不管用<br><img src="https://img-blog.csdnimg.cn/ee256319d57f47979e4671c18a10ffc1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARm9hbeeVquiMhA==,size_14,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>然后查询微信官方文档，是这样解释的<br>小程序在input框输入时，默认会开启自动上推的功能，但是有的时候会出现卡顿的现象，想关闭自动上推，把<br><label style="color:#843900">adjust-position设置为false</label>就可以了</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">van-row</span>  <span class="attr">gutter</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-col</span> <span class="attr">span</span>=<span class="string">&quot;24&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">van-field</span></span></span><br><span class="line"><span class="tag">          <span class="attr">left-icon</span>=<span class="string">&quot;eye-o&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">adjust-position</span>=<span class="string">&quot;false&quot;</span> </span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">&quot;input&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>  <span class="attr">model:value</span>=<span class="string">&quot;&#123;&#123;password&#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">       /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">van-col</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">van-row</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>按道理应该就不会出现了，结果就是不生效，经过几轮瞎搞后才发现需要加<code>&#123;&#123;&#125;&#125;</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">van-row</span>  <span class="attr">gutter</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">van-col</span> <span class="attr">span</span>=<span class="string">&quot;24&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">van-field</span></span></span><br><span class="line"><span class="tag">         <span class="attr">left-icon</span>=<span class="string">&quot;eye-o&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">adjust-position</span>=<span class="string">&quot;&#123;&#123; false &#125;&#125;&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">name</span>=<span class="string">&quot;input&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>  <span class="attr">model:value</span>=<span class="string">&quot;&#123;&#123;password&#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">van-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">van-row</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>请大家谨慎踩坑</p>
]]></content>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>分库分表思想</title>
    <url>/2022/04/10/0.0.4%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E6%80%9D%E6%83%B3/</url>
    <content><![CDATA[<blockquote>
<p>随着单库中的数据量越来越大、数据库的查询QPS越来越高，相应的，对数据库的读写所需要的时间也越来越多。数据库的读写性能可能会成为业务发展的瓶颈。对应的，就需要做数据库性能方面的优化。</p>
</blockquote>
<p>场景一：<code>如果数据库的查询QPS【连接数】过高，就需要考虑拆库</code>，通过分库来分担单个数据库的连接压力。比如，如果查询QPS为3500，假设单库可以支撑1000个QPS的话，那么就可以考虑拆分成4个库，来分散查询连接压力。</p>
<p>场景二：<code>如果单表数据量过大，就需要考虑分表</code>，当数据量超过一定量级后，无论是对于数据查询还是数据更新，在经过索引优化等纯数据库层面的传统优化手段之后，还是可能存在性能问题。这是量变产生了质变，这时候就需要去换个思路来解决问题，比如：从数据生产源头、数据处理源头来解决问题，既然数据量很大，那我们就来个分而治之，化整为零。这就产生了分表，把数据按照一定的规则拆分成多张表，来解决单表环境下无法解决的存取性能问题。</p>
<p>场景三：<code>如果单数据库宕机，可能所有数据都会丢失，就需要考虑数据拆分</code></p>
<ul>
<li>单库部署情况下，如果数据库宕机，那么故障影响就是100%，而且恢复可能耗时很长。</li>
<li>如果我们拆分成2个库，分别部署在不同的机器上，此时其中1个库宕机，那么故障影响就是50%，还有50%的数据可以继续服务。</li>
<li>如果我们拆分成4个库，分别部署在不同的机器上，此时其中1个库宕机，那么故障影响就是25%，还有75%的数据可以继续服务，恢复耗时也会很短。</li>
</ul>
<p>当然，我们也不能无限制的拆库，这也是牺牲存储资源来提升性能、可用性的方式，毕竟资源总是有限的。</p>
<h2 id="分库分表是什么"><a href="#分库分表是什么" class="headerlink" title="分库分表是什么"></a>分库分表是什么</h2><p><code>分库分表就是为了解决由于数据量过大而导致数据库性能降低的问题</code>，将原来独立的数据库拆分成若干数据库组成 ，将数据大表拆分成若干数据表组成，使得单一数据库、单一数据表的数据量变小，从而达到提升数据库性能的目的。</p>
<h2 id="分库分表有哪些"><a href="#分库分表有哪些" class="headerlink" title="分库分表有哪些"></a>分库分表有哪些</h2><p>分库分表包括分库和分表两个部分，在生产中通常包括：垂直分表、垂直分库、水平分库、水平分表四种方式</p>
<h3 id="垂直分表"><a href="#垂直分表" class="headerlink" title="垂直分表"></a>垂直分表</h3><p>在电商的场景中，商品往往只会在用户感兴趣的时候才会查看该商品的详细描述，因此，商品信息中商品详情访问的频率没有那么高，而且一般占用的内存空间会较大，访问单个数据IO时间较长</p>
<p>反之，商品名称，图片和价格等这些关键性字段的访问频率较高。</p>
<p>针对这两种数据的特性，我们可以考虑进行垂直分表，访问频率低的商品详情单独拆分为一张表，访问频率高的字段放在一张表，通过商品的id进行关联</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220409012707355.png" alt="image-20220409012707355"></p>
<p><strong>垂直分表定义：将一个表按照字段分成多表，每个表存储其中一部分字段</strong></p>
<p>优点：</p>
<ul>
<li>为了避免IO争抢并减少锁表的几率，查看详情的用户与商品信息浏览互不影响 </li>
<li>充分发挥热门数据的操作效率，商品信息的操作的高效率不会被商品描述的低效率所拖累</li>
</ul>
<p>一般来说，某业务实体中的各个数据项的访问频次是不一样的，部分数据项可能是占用存储空间比较大的BLOB或是TEXT。例如上例中的<strong>商品描述</strong>。所以，当表数据量很大时，可以<strong>将表按字段切开，将热门字段、冷门字段分开放置在不同库中</strong>，这些库可以放在不同的存储设备上，避免IO争抢。</p>
<p>垂直切分带来的性能提升主要集中在热门数据的操作效率上，而且磁盘争用情况减少。</p>
<p>通常我们按以下原则进行垂直拆分：</p>
<ul>
<li>把不常用的字段单独放在一张表</li>
<li>把text，blob等大字段拆分出来放在附表中</li>
<li>经常组合查询的列放在一张表中</li>
</ul>
<h3 id="垂直分库"><a href="#垂直分库" class="headerlink" title="垂直分库"></a>垂直分库</h3><p>通过垂直分表性能得到了一定程度的提升，但是还没有达到要求，并且磁盘空间也快不够了，因为数据还是始终限制在一台服务器，<code>库内垂直分表只解决了单一表数据量过大的问题</code>，但没有将表分布到不同的服务器上，因此每个表还是竞争同一个物理机的CPU、内存、网络IO、磁盘。 </p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220410141146891.png" alt="image-20220410141146891"></p>
<p><strong>垂直分库定义：按照业务将表进行分类，分布到不同的数据库上面，每个库可以放在不同的服务器上，它的核心理念是专库专用</strong></p>
<p>优点：</p>
<ul>
<li>解决业务层面的耦合，业务清晰</li>
<li>能对不同业务的数据进行分级管理、维护、监控、扩展等</li>
<li>高并发场景下，垂直分库一定程度的提升IO、数据库连接数、降低单机硬件资源的瓶颈 </li>
</ul>
<p>垂直分库通过将表按业务分类，然后分布在不同数据库，并且可以将这些数据库部署在不同服务器上，从而达到<code>多个服务器共同分摊压力</code>的效果，但是依然没有解决单表数据量过大的问题</p>
<h3 id="水平分库"><a href="#水平分库" class="headerlink" title="水平分库"></a>水平分库</h3><p>经过<strong>垂直分库</strong>后，数据库性能问题得到一定程度的解决，但是随着业务量的增长，PRODUCT_DB(商品库)单库存储数据已经超出预估。粗略估计，目前有8w店铺，每个店铺平均150个不同规格的商品，再算上增长，那商品数量得往1500w+上预估，并且PRODUCT_DB(商品库)属于访问非常频繁的资源，单台服务器已经无法支撑。此时该如何优化？</p>
<p>这时候我们需要考虑使用水平分库，通过分库规则将商品信息分别放在两个库中</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220410141729502.png" alt="image-20220410141729502"></p>
<p>也就是说，要操作某条数据，先分析这条数据所属的店铺ID。如果店铺ID为双数，将此操作映射至RRODUCT_DB1(商品库1)；如果店铺ID为单数，将操作映射至RRODUCT_DB2(商品库2)。此操作要访问数据库名称的表达式为<strong>RRODUCT_DB[店铺ID%2 + 1]</strong> 。</p>
<p> <strong>水平分库定义：是把同一个表的数据按一定规则拆到不同的数据库中，每个库可以放在不同的服务器上</strong></p>
<p>优点：</p>
<ul>
<li>解决了单库大数据，高并发的性能瓶颈</li>
<li>提高了系统的稳定性及可用性</li>
</ul>
<p>当一个应用难以再细粒度的垂直切分，或切分后数据量行数巨大，存在单库读写、存储性能瓶颈，这时候就需要进行<strong>水平分库</strong>了，经过水平切分的优化，往往能解决单库存储量及性能瓶颈。但由于同一个表被分配在不同的数据库，需要额外进行数据操作的路由工作，因此大大提升了系统复杂度</p>
<h3 id="水平分表"><a href="#水平分表" class="headerlink" title="水平分表"></a>水平分表</h3><p>按照水平分库的思路对他把PRODUCT_DB_X(商品库)内的表也可以进行水平拆分，其目的也是为解决单表数据量大的问题</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220410142038513.png" alt="image-20220410142038513"></p>
<p>与水平分库的思路类似，不过这次操作的目标是表，商品信息及商品描述被分成了两套表。</p>
<p>如果商品ID为双数，将此操作映射至商品信息1表；如果商品ID为单数，将操作映射至商品信息2表。此操作要访问表名称的表达式为<strong>商品信息[商品ID%2 + 1]</strong> </p>
<p> <strong>水平分表定义：在同一个数据库内，把同一个表的数据按一定规则拆到多个表中</strong></p>
<p>优点：</p>
<ul>
<li>优化单一表数据量过大而产生的性能问题 </li>
<li>避免IO争抢并减少锁表的几率</li>
</ul>
<p>库内的水平分表，解决了单一表数据量过大的问题，分出来的小表中只包含一部分数据，从而使得单个表的数据量变小，提高检索性能</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>一般来说，在系统设计阶段就应该根据业务耦合松紧来确定垂直分库，垂直分表方案，在数据量及访问压力不是特别大的情况，首先考虑缓存、读写分离、索引技术等方案。若数据量极大，且持续增长，再考虑水平分库水平分表方案，因为它也会带来一些问题：</p>
<ul>
<li><p>事务一致性问题</p>
<blockquote>
<p>由于分库分表把数据分布在不同库甚至不同服务器，不可避免会带来<strong>分布式事务</strong>问题</p>
</blockquote>
</li>
<li><p>跨节点关联查询</p>
<blockquote>
<p>在没有分库前，我们检索商品时可以通过以下SQL对店铺信息进行关联查询： </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> p.<span class="operator">*</span>,r.[地理区域名称],s.[店铺名称],s.[信誉] <span class="keyword">FROM</span> [商品信息] p <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> [地理区域] r <span class="keyword">ON</span> p.[产地] <span class="operator">=</span> r.[地理区域编码] <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> [店铺信息] s <span class="keyword">ON</span> p.id <span class="operator">=</span> s.[所属店铺] WHERE...ORDER BY...LIMIT...</span><br></pre></td></tr></table></figure>

<p>但垂直分库后**[商品信息]和[店铺信息]**不在一个数据库，甚至不在一台服务器，无法进行关联查询。 </p>
<p>可将原关联查询分为两次查询，第一次查询的结果集中找出关联数据id，然后根据id发起第二次请求得到关联数据，最后将获得到的数据进行拼装（归并）</p>
</blockquote>
</li>
<li><p>跨节点分页，排序函数</p>
<blockquote>
<p>跨节点多库进行查询时limit分页、order by排序等问题，就变得比较复杂了。需要先在不同的分片节点中将数据进行排序并返回，然后将不同分片返回的结果集进行汇总和再次排序</p>
<p>所以请求页数越大，系统的性能也会越差</p>
<p><code>在使用Max、Min、Sum、Count之类的函数进行计算的时候，与排序分页同理，也需要先在每个分片上执行相应的函数，然后将各个分片的结果集进行汇总和再次计算，最终将结果返回</code></p>
</blockquote>
</li>
<li><p>主键避重</p>
<blockquote>
<p>在分库分表环境中，由于表中数据同时存在不同数据库中，主键值平时使用的自增长将无用武之地，某个分区数据库生成的ID无法保证全局唯一。因此需要单独设计全局主键，以避免跨库主键重复问题</p>
</blockquote>
</li>
<li><p>公共表</p>
<blockquote>
<p>实际的应用场景中，参数表、数据字典表等都是数据量较小，变动少，而且属于高频联合查询的依赖表</p>
<p><code>可以将这类表在每个数据库都保存一份，所有对公共表的更新操作都同时发送到所有分库执行</code></p>
</blockquote>
</li>
</ul>
<p>由于分库分表之后，数据被分散在不同的数据库、服务器。因此，对数据的操作也就无法通过常规方式完成，并且它还带来了一系列的问题。所以使用之前需要把以上会带来的问题仔细考虑进去</p>
]]></content>
      <tags>
        <tag>数据库</tag>
        <tag>分库分表</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库中间件</title>
    <url>/2022/04/17/0.0.9%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E9%97%B4%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="数据库中间件"><a href="#数据库中间件" class="headerlink" title="数据库中间件"></a>数据库中间件</h1><p>Cobar：阿里团队开发，已经多年没有维护更新</p>
<p>MyCat：基于Cobar二次开发，开源社区维护</p>
<p>OneProxy：不开源的商业中间件<code>专注性能和稳定性</code></p>
<p>KingShard：GO语言开发，在不断完善</p>
<p>Vitess：youtobe生产在使用，不支持MySql原生协议</p>
<p>Atlas：360团队基于MySqlProxy改写，高并发下不稳定</p>
<p>MaxScale：MaxScale是mariadb研发的中间件</p>
<p>MysqlRoute：MySql官方Oracle公司发布的中间件</p>
<p>ShardingJDBC：现在比较主流的中间件</p>
<p>SQL解析&gt;查询优化&gt;SQL路由&gt;SQL改写&gt;SQL执行&gt;结果归并</p>
]]></content>
      <tags>
        <tag>分库分表</tag>
        <tag>多数据源</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>使用redis实现分布式锁</title>
    <url>/2022/03/02/0.0.8%E4%BD%BF%E7%94%A8redis%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</url>
    <content><![CDATA[<blockquote>
<p>Java中提供了种类丰富的锁，每种锁因其特性的不同，在适当的场景下合理选择能展现非常高的效率</p>
</blockquote>
<p>分布式锁一般有三种实现方式：<code>数据库乐观锁</code>，<code>Redis分布式锁</code>，<code>Zookeeper分布式锁</code></p>
<p>本篇博客主要详细介绍redis分布式锁的进化，进化所解决的场景问题</p>
<h2 id="可靠性"><a href="#可靠性" class="headerlink" title="可靠性"></a>可靠性</h2><p>首先，为了确保分布式锁的可用性，我们需要确保锁能同时满足以下四个条件</p>
<ol>
<li><code>互斥性</code>:在任意时刻，只有一个客户端能持有锁。</li>
<li><code>不会发生死锁</code>:即使有一个客户端在持有锁的期间崩溃而没有主动解锁，也能保证后续其他客户端能加锁。</li>
<li><code>具有容错性</code>:只要大部分的Redis节点正常运行，客户端就可以加锁和解锁。</li>
<li><code>解铃还须系铃人</code>:加锁和解锁必须是同一个客户端，客户端自己不能把别人加的锁给解了。</li>
</ol>
<h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><p>在单机下可以用synchronized同步代码块加锁</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StringRedisTemplate redisTemplate;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deductStock</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (<span class="keyword">this</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> stock = Integer.parseInt(redisTemplate.opsForValue().get(<span class="string">&quot;stock&quot;</span>));</span><br><span class="line">        <span class="keyword">if</span>(stock &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> realStock = stock - <span class="number">1</span>;</span><br><span class="line">            redisTemplate.opsForValue().set(<span class="string">&quot;stock&quot;</span>,realStock + <span class="string">&quot;&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;扣减成功，剩余库存：&quot;</span> + realStock);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;扣减失败，库存不足&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但是在真实的场景下，往往是多台服务器做负载，而synchronized是进程级别的，只在当前进程有效</p>
<p>如果是做了负载的服务器，往往控制不住请求，依然会有并发问题，在并发低的情况下可能不会出现问题</p>
<p>这种情况下就得用分布式锁</p>
<p>在redis中，利用<code>setnx</code>命令的特性可以轻松实现分布式锁</p>
<blockquote>
<p>只在键 key 不存在的情况下，将键 key 的值设置为 value 。若键 key 已经存在， 则 SETNX 命令不做任何动作。</p>
<p>返回值：命令在设置成功时返回 1 ，设置失败时返回 0 。</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20190303135212531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Rhem91MQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StringRedisTemplate redisTemplate;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deductStock</span><span class="params">()</span></span>&#123;</span><br><span class="line">    String locKey = <span class="string">&quot;lockey&quot;</span>;</span><br><span class="line">    <span class="comment">// 如果存在则true,成功则新增返回false</span></span><br><span class="line">    Boolean result = redisTemplate.opsForValue().setIfAbsent(locKey, <span class="string">&quot;lock&quot;</span>);</span><br><span class="line">    <span class="comment">// 如果存在，直接返回失败</span></span><br><span class="line">    <span class="keyword">if</span>(!result)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;error_code&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> stock = Integer.parseInt(redisTemplate.opsForValue().get(<span class="string">&quot;stock&quot;</span>));</span><br><span class="line">    <span class="keyword">if</span>(stock &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> realStock = stock - <span class="number">1</span>;</span><br><span class="line">        redisTemplate.opsForValue().set(<span class="string">&quot;stock&quot;</span>,realStock + <span class="string">&quot;&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;扣减成功，剩余库存：&quot;</span> + realStock);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;扣减失败，库存不足&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 删除key，表示已经解锁</span></span><br><span class="line">    redisTemplate.delete(locKey);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>以上代码是简单的redis锁，如果在加锁和解锁中间，出现了异常，则redis里面会一直加上这把锁</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220302215144457.png" alt="image-20220302215144457"></p>
<p>所以升级一下，让我们的代码更健壮，使用try catch finally  保证一定会释放锁</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StringRedisTemplate redisTemplate;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deductStock</span><span class="params">()</span></span>&#123;</span><br><span class="line">    String locKey = <span class="string">&quot;lockey&quot;</span>;</span><br><span class="line">    <span class="comment">// 如果存在则true,成功则新增返回false</span></span><br><span class="line">    Boolean result = redisTemplate.opsForValue().setIfAbsent(locKey, <span class="string">&quot;lock&quot;</span>);</span><br><span class="line">    <span class="comment">// 如果存在，直接返回失败</span></span><br><span class="line">    <span class="keyword">if</span>(!result)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;error_code&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> stock = Integer.parseInt(redisTemplate.opsForValue().get(<span class="string">&quot;stock&quot;</span>));</span><br><span class="line">        <span class="keyword">if</span>(stock &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> realStock = stock - <span class="number">1</span>;</span><br><span class="line">            redisTemplate.opsForValue().set(<span class="string">&quot;stock&quot;</span>,realStock + <span class="string">&quot;&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;扣减成功，剩余库存：&quot;</span> + realStock);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;扣减失败，库存不足&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">    	<span class="comment">// 删除key，表示已经解锁</span></span><br><span class="line">        redisTemplate.delete(locKey);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果在这个时候，redis宕机了，依然会出现一直锁死的情况</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220302215511149.png" alt="image-20220302215511149"></p>
<p>这个时候我们可以给锁设置一个超时时间，这样可以保证锁自动释放，不会一直锁死</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deductStock</span><span class="params">()</span></span>&#123;</span><br><span class="line">    String locKey = <span class="string">&quot;lockey&quot;</span>;</span><br><span class="line">    <span class="comment">// 如果存在则true,成功则新增返回false</span></span><br><span class="line">    Boolean result = redisTemplate.opsForValue().setIfAbsent(locKey, <span class="string">&quot;lock&quot;</span>);</span><br><span class="line">    <span class="comment">// 设置超时时间，防止锁一直不释放</span></span><br><span class="line">    redisTemplate.expire(locKey,<span class="number">10</span>, TimeUnit.SECONDS);</span><br><span class="line">    <span class="comment">// 如果存在，直接返回失败</span></span><br><span class="line">    <span class="keyword">if</span>(!result)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;error_code&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> stock = Integer.parseInt(redisTemplate.opsForValue().get(<span class="string">&quot;stock&quot;</span>));</span><br><span class="line">        <span class="keyword">if</span>(stock &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> realStock = stock - <span class="number">1</span>;</span><br><span class="line">            redisTemplate.opsForValue().set(<span class="string">&quot;stock&quot;</span>,realStock + <span class="string">&quot;&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;扣减成功，剩余库存：&quot;</span> + realStock);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;扣减失败，库存不足&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">// 删除key，表示已经解锁</span></span><br><span class="line">        redisTemplate.delete(locKey);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上面代码看起来没有问题，但是实际会存在原子性问题</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220302220141345.png" alt="image-20220302220141345"></p>
<p>这时候我们可以把</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">redisTemplate.opsForValue().setIfAbsent(locKey, <span class="string">&quot;lock&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>替换为</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">redisTemplate.opsForValue().setIfAbsent(locKey, <span class="string">&quot;lock&quot;</span>,<span class="number">10</span>,TimeUnit.SECONDS);</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deductStock</span><span class="params">()</span></span>&#123;</span><br><span class="line">    String locKey = <span class="string">&quot;lockey&quot;</span>;</span><br><span class="line">    <span class="comment">// 如果存在则true,成功则新增返回false,设置超时时间，防止锁一直不释放</span></span><br><span class="line">    Boolean result = redisTemplate.opsForValue().setIfAbsent(locKey, <span class="string">&quot;lock&quot;</span>,<span class="number">10</span>,TimeUnit.SECONDS);</span><br><span class="line">    <span class="comment">// 如果存在，直接返回失败</span></span><br><span class="line">    <span class="keyword">if</span>(!result)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;error_code&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> stock = Integer.parseInt(redisTemplate.opsForValue().get(<span class="string">&quot;stock&quot;</span>));</span><br><span class="line">        <span class="keyword">if</span>(stock &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> realStock = stock - <span class="number">1</span>;</span><br><span class="line">            redisTemplate.opsForValue().set(<span class="string">&quot;stock&quot;</span>,realStock + <span class="string">&quot;&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;扣减成功，剩余库存：&quot;</span> + realStock);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;扣减失败，库存不足&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">// 删除key，表示已经解锁</span></span><br><span class="line">        redisTemplate.delete(locKey);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上面的代码在高并发场景会存在问题</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220302221610591.png" alt="image-20220302221610591"></p>
<p>如果存在上面这种情况，则永远加不上锁，前面的用户，会一直释放后面用户的锁，会存在超卖的问题</p>
<p>这时我们就需要用到uuid来进行加锁<code>解铃还须系铃人</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deductStock</span><span class="params">()</span></span>&#123;</span><br><span class="line">    String locKey = <span class="string">&quot;lockey&quot;</span>;</span><br><span class="line">    <span class="comment">// 增加uuid防止被其他用户释放锁</span></span><br><span class="line">    String clientId = UUID.randomUUID().toString();</span><br><span class="line">    <span class="comment">// 如果存在则true,成功则新增返回false,设置超时时间，防止锁一直不释放</span></span><br><span class="line">    Boolean result = redisTemplate.opsForValue().setIfAbsent(locKey, clientId,<span class="number">10</span>,TimeUnit.SECONDS);</span><br><span class="line">    <span class="comment">// 如果存在，直接返回失败</span></span><br><span class="line">    <span class="keyword">if</span>(!result)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;error_code&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> stock = Integer.parseInt(redisTemplate.opsForValue().get(<span class="string">&quot;stock&quot;</span>));</span><br><span class="line">        <span class="keyword">if</span>(stock &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> realStock = stock - <span class="number">1</span>;</span><br><span class="line">            redisTemplate.opsForValue().set(<span class="string">&quot;stock&quot;</span>,realStock + <span class="string">&quot;&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;扣减成功，剩余库存：&quot;</span> + realStock);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;扣减失败，库存不足&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">// 如果uuid相同则释放锁</span></span><br><span class="line">        <span class="keyword">if</span>(clientId.equals(redisTemplate.opsForValue().get(locKey)))&#123;</span><br><span class="line">            <span class="comment">// 删除key，表示已经解锁</span></span><br><span class="line">            redisTemplate.delete(locKey);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>以上代码解决了锁被其他人释放的问题，但是还是会存在一些问题</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220302224427117.png" alt="image-20220302224427117"></p>
<p>很多人想的是对于超时时间，可以设置长一点，但是这种情况治标不治本，还是会有可能出现</p>
<p>以上这种情况需要用到<code>锁续命</code>，后台开一个定时任务，每过一段时间检查锁的业务是否还在执行，如果没执行完，就重置锁的超时时间</p>
<p>市面上有很多大牛对于这种情况提供了 解决方案</p>
<h2 id="Redisson"><a href="#Redisson" class="headerlink" title="Redisson"></a>Redisson</h2><p>我们可以使用redisson来使用分布式锁，简化了我们加锁的步骤</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.redisson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>redisson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.16.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Redisson <span class="title">redisson</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 单机模式</span></span><br><span class="line">    Config config = <span class="keyword">new</span>  Config();</span><br><span class="line">    config.useSingleServer().setAddress(<span class="string">&quot;redis://localhost:6379&quot;</span>).setDatabase(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> (Redisson)Redisson.create(config);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>代码实现</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> Redisson redisson;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StringRedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deductStock</span><span class="params">()</span></span>&#123;</span><br><span class="line">    String locKey = <span class="string">&quot;lockey&quot;</span>;</span><br><span class="line">    RLock lock = redisson.getLock(locKey);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 加锁</span></span><br><span class="line">        lock.lock();</span><br><span class="line">        <span class="keyword">int</span> stock = Integer.parseInt(redisTemplate.opsForValue().get(<span class="string">&quot;stock&quot;</span>));</span><br><span class="line">        <span class="keyword">if</span>(stock &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> realStock = stock - <span class="number">1</span>;</span><br><span class="line">            redisTemplate.opsForValue().set(<span class="string">&quot;stock&quot;</span>,realStock + <span class="string">&quot;&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;扣减成功，剩余库存：&quot;</span> + realStock);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;扣减失败，库存不足&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">// 解锁</span></span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>主要是通过lua脚本实现代码的原子性</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;T&gt; <span class="function">RFuture&lt;T&gt; <span class="title">tryLockInnerAsync</span><span class="params">(<span class="keyword">long</span> waitTime, <span class="keyword">long</span> leaseTime, TimeUnit unit, <span class="keyword">long</span> threadId, RedisStrictCommand&lt;T&gt; command)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> evalWriteAsync(getRawName(), LongCodec.INSTANCE, command,</span><br><span class="line">                <span class="string">&quot;if (redis.call(&#x27;exists&#x27;, KEYS[1]) == 0) then &quot;</span> +</span><br><span class="line">                        <span class="string">&quot;redis.call(&#x27;hincrby&#x27;, KEYS[1], ARGV[2], 1); &quot;</span> +</span><br><span class="line">                        <span class="string">&quot;redis.call(&#x27;pexpire&#x27;, KEYS[1], ARGV[1]); &quot;</span> +</span><br><span class="line">                        <span class="string">&quot;return nil; &quot;</span> +</span><br><span class="line">                        <span class="string">&quot;end; &quot;</span> +</span><br><span class="line">                        <span class="string">&quot;if (redis.call(&#x27;hexists&#x27;, KEYS[1], ARGV[2]) == 1) then &quot;</span> +</span><br><span class="line">                        <span class="string">&quot;redis.call(&#x27;hincrby&#x27;, KEYS[1], ARGV[2], 1); &quot;</span> +</span><br><span class="line">                        <span class="string">&quot;redis.call(&#x27;pexpire&#x27;, KEYS[1], ARGV[1]); &quot;</span> +</span><br><span class="line">                        <span class="string">&quot;return nil; &quot;</span> +</span><br><span class="line">                        <span class="string">&quot;end; &quot;</span> +</span><br><span class="line">                        <span class="string">&quot;return redis.call(&#x27;pttl&#x27;, KEYS[1]);&quot;</span>,</span><br><span class="line">                Collections.singletonList(getRawName()), unit.toMillis(leaseTime), getLockName(threadId));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/1090617-20190618183025891-1248337684.jpg" alt="img"></p>
<p>1.加锁机制：</p>
<p>线程去获取锁，获取成功：执行lua脚本，保存数据到redis数据库</p>
<p>线程去获取锁，获取失败: 一直通过while循环尝试获取锁，获取成功后，执行lua脚本，保存数据到redis数据库。</p>
<p>2.看门狗</p>
<p>在一个分布式环境下，假如一个线程获得锁后，突然服务器宕机了，那么这个时候在一定时间后这个锁会自动释放，你也可以设置锁的有效时间(不设置默认30秒），这样的目的主要是防止死锁的发生。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="comment">//设置锁1秒过去</span></span><br><span class="line">redissonLock.lock(<span class="string">&quot;redisson&quot;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 业务逻辑需要咨询2秒</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">redissonLock.release(<span class="string">&quot;redisson&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 线程1 进来获得锁后，线程一切正常并没有宕机，但它的业务逻辑需要执行2秒，这就会有个问题，在 线程1 执行1秒后，这个锁就自动过期了</span></span><br><span class="line"><span class="comment">* 那么这个时候 线程2 进来了。那么就存在 线程1和线程2 同时在这段业务逻辑里执行代码，这当然是不合理的。</span></span><br><span class="line"><span class="comment">* 而且如果是这种情况，那么在解锁时系统会抛异常，因为解锁和加锁已经不是同一线程了，具体后面代码演示。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p>所以这个时候<code>看门狗</code>就出现了，它的作用就是 线程1 业务还没有执行完，时间就过了，线程1 还想持有锁的话，就会启动一个watch dog后台线程，不断的延长锁key的生存时间。</p>
<p><code>注意</code> 正常这个看门狗线程是不启动的，还有就是这个看门狗启动后对整体性能也会有一定影响，所以不建议开启看门狗。</p>
<p>3.为啥使用lua脚本</p>
<p>如果你的业务逻辑复杂的话，通过封装在lua脚本中发送给redis，而且redis是单线程的，这样就保证这段复杂业务逻辑执行的<strong>原子性</strong>。</p>
<p>4.分布式锁的缺陷</p>
<p>Redis分布式锁会有个缺陷，就是在Redis哨兵模式下:</p>
<p><code>客户端1</code> 对某个<code>master节点</code>写入了redisson锁，此时会异步复制给对应的 slave节点。但是这个过程中一旦发生 master节点宕机，主备切换，slave节点从变为了 master节点。</p>
<p>这时<code>客户端2</code> 来尝试加锁的时候，在新的master节点上也能加锁，此时就会导致多个客户端对同一个分布式锁完成了加锁。</p>
<p>这时系统在业务语义上一定会出现问题，<strong>导致各种脏数据的产生</strong>。</p>
<p><code>缺陷</code>在哨兵模式或者主从模式下，如果 master实例宕机的时候，可能导致多个客户端同时完成加锁。</p>
]]></content>
      <tags>
        <tag>redis</tag>
        <tag>分布式锁</tag>
      </tags>
  </entry>
  <entry>
    <title>线程池工具类</title>
    <url>/2022/05/01/0.1.0%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
    <content><![CDATA[<h2 id="1-编写线程池工具类"><a href="#1-编写线程池工具类" class="headerlink" title="1.编写线程池工具类"></a>1.编写线程池工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ExecutorService <span class="title">newFixedThreadPool</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ThreadPoolExecutor(<span class="number">4</span>,<span class="number">4</span>, <span class="number">10L</span>, TimeUnit.MILLISECONDS,</span><br><span class="line">                <span class="keyword">new</span> LinkedBlockingDeque&lt;Runnable&gt;(<span class="number">100</span>),</span><br><span class="line">                Executors.defaultThreadFactory(),</span><br><span class="line">                <span class="keyword">new</span> ThreadPoolExecutor.CallerRunsPolicy());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * （1.8版本）使用线程池请求接口</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function"><span class="keyword">void</span>  <span class="title">executerPool</span><span class="params">(List&lt;T&gt; list)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        ExecutorService executorService = newFixedThreadPool();</span><br><span class="line">        List&lt;T&gt; collect = list.stream().filter(l -&gt; l <span class="keyword">instanceof</span> Runnable).collect(Collectors.toList());</span><br><span class="line">        <span class="keyword">final</span> CountDownLatch count=<span class="keyword">new</span> CountDownLatch(collect.size());</span><br><span class="line">        <span class="keyword">for</span> (T runnable : collect) &#123;</span><br><span class="line">            Customers customers = (Customers) runnable;</span><br><span class="line">            customers.counts(count);</span><br><span class="line">            executorService.execute(customers);</span><br><span class="line">        &#125;</span><br><span class="line">        count.await();</span><br><span class="line">        executorService.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * （1.7版本）使用线程池请求接口</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function"><span class="keyword">void</span>  <span class="title">executerPool2</span><span class="params">(List&lt;T&gt; list)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        ExecutorService executorService = newFixedThreadPool();</span><br><span class="line">        List&lt;Customers&gt; runnables = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (T t : list) &#123;</span><br><span class="line">            <span class="keyword">if</span>(t <span class="keyword">instanceof</span> Customers)&#123;</span><br><span class="line">                runnables.add((Customers) t);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> CountDownLatch count=<span class="keyword">new</span> CountDownLatch(runnables.size());</span><br><span class="line">        <span class="keyword">for</span> (Customers runnable : runnables) &#123;</span><br><span class="line">            runnable.counts(count);</span><br><span class="line">            executorService.execute(runnable);</span><br><span class="line">        &#125;</span><br><span class="line">        count.await();</span><br><span class="line">        executorService.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-定义接口ThreadFactorys和Customers"><a href="#2-定义接口ThreadFactorys和Customers" class="headerlink" title="2.定义接口ThreadFactorys和Customers"></a>2.定义接口ThreadFactorys和Customers</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ThreadFactorys</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">counts</span><span class="params">(CountDownLatch countDownLatch)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Customers</span> <span class="keyword">extends</span> <span class="title">Runnable</span>,<span class="title">ThreadFactorys</span></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-继承Customers"><a href="#3-继承Customers" class="headerlink" title="3.继承Customers"></a>3.继承Customers</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InterfaceRunnable</span> <span class="keyword">implements</span> <span class="title">Customers</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">// 线程计数器</span></span><br><span class="line">    <span class="keyword">private</span> CountDownLatch count;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">InterfaceRunnable</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 执行方法</span></span><br><span class="line">        System.out.println(name);</span><br><span class="line">        count.countDown();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">counts</span><span class="params">(CountDownLatch countDownLatch)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.count = countDownLatch;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="4-使用工具类进行调用（只需要把需要执行的类继承runnable方法，然后用list丢入工具类就行了）"><a href="#4-使用工具类进行调用（只需要把需要执行的类继承runnable方法，然后用list丢入工具类就行了）" class="headerlink" title="4.使用工具类进行调用（只需要把需要执行的类继承runnable方法，然后用list丢入工具类就行了）"></a>4.使用工具类进行调用（只需要把需要执行的类继承runnable方法，然后用list丢入工具类就行了）</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadController</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        List&lt;InterfaceRunnable&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            list.add(<span class="keyword">new</span> InterfaceRunnable(<span class="string">&quot;方法调用:&quot;</span>+i));</span><br><span class="line">        &#125;</span><br><span class="line">        ThreadUtils.executerPool(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>工具类</tag>
        <tag>算法公式</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义注解</title>
    <url>/2022/04/22/0.1.1%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>注解是一种能被添加到java源代码中的元数据，方法、类、参数和包都可以用注解来修饰。注解可以看作是一种特殊的标记，可以用在方法、类、参数和包上，程序在编译或者运行时可以检测到这些标记而进行一些特殊的处理</p>
<h3 id="元注解介绍"><a href="#元注解介绍" class="headerlink" title="元注解介绍"></a>元注解介绍</h3><p>元注解的作用就是负责注解其他注解，Java5.0定义了4个标准的meta-annotation类型，它们被用来提供对其它 annotation类型作说明</p>
<ul>
<li>@Target</li>
<li>@Retention</li>
<li>@Documented</li>
<li>@Inherited</li>
</ul>
<p>对应的参数详情说明见末尾</p>
<p>修饰符：访问修饰符必须为public,不写默认为pubic</p>
<p>关键字：关键字为@interface</p>
<p>注解名称： 注解名称为自定义注解的名称</p>
<p>注解内容：注解中内容，对注解的描述</p>
<blockquote>
<p>以下内容采用枚举方式进行注解</p>
</blockquote>
<h3 id="1-定义枚举"><a href="#1-定义枚举" class="headerlink" title="1.定义枚举"></a>1.定义枚举</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">newChannelEnum</span> </span>&#123;</span><br><span class="line">    BVC(<span class="string">&quot;BVC&quot;</span>,<span class="string">&quot;bvc_timeout&quot;</span>,<span class="string">&quot;BVC&quot;</span>,<span class="string">&quot;BVC_config&quot;</span>),</span><br><span class="line">    ACC(<span class="string">&quot;ACC&quot;</span>,<span class="string">&quot;acc_timeout&quot;</span>,<span class="string">&quot;ACC&quot;</span>,<span class="string">&quot;ACC_config&quot;</span>);</span><br><span class="line">    <span class="comment">// 渠道简称</span></span><br><span class="line">    <span class="keyword">private</span> String channel;</span><br><span class="line">    <span class="comment">// 超时时间配置</span></span><br><span class="line">    <span class="keyword">private</span> String timeout;</span><br><span class="line">    <span class="comment">// 全名</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">// 接口详情配置</span></span><br><span class="line">    <span class="keyword">private</span> String interfaceName;</span><br><span class="line"></span><br><span class="line">    newChannelEnum(String channel, String timeout, String name, String interfaceName) &#123;</span><br><span class="line">        <span class="keyword">this</span>.channel = channel;</span><br><span class="line">        <span class="keyword">this</span>.timeout = timeout;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.interfaceName = interfaceName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getInterfaceName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> interfaceName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getChannel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> channel;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTimeout</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> timeout;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTimeout</span><span class="params">(String timeout)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.timeout = timeout;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-定义注解"><a href="#2-定义注解" class="headerlink" title="2.定义注解"></a>2.定义注解</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD,ElementType.FIELD,ElementType.PARAMETER&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> InterfaceTagConfig &#123;</span><br><span class="line">    <span class="function">newChannelEnum <span class="title">method</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-定义注解工具类"><a href="#3-定义注解工具类" class="headerlink" title="3.定义注解工具类"></a>3.定义注解工具类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InterfaceTarHelper</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 你需要使用注解的实体类</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> InterfaceDefault CLASS_LOAD_PATH = <span class="keyword">new</span> InterfaceDefault();</span><br><span class="line">    <span class="comment">// 存放标记了自定义注解方法的MAP</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;String,Method&gt; METHOD_MAP = <span class="keyword">new</span> ConcurrentHashMap&lt;String,Method&gt;();</span><br><span class="line">    <span class="comment">// 方法</span></span><br><span class="line">    <span class="keyword">private</span> Method method;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">// 获取所有方法</span></span><br><span class="line">        Method[] methods = CLASS_LOAD_PATH.getClass().getMethods();</span><br><span class="line">        <span class="keyword">for</span> (Method method : methods) &#123;</span><br><span class="line">            <span class="comment">// 筛选打了注解的方法，并存入MAP</span></span><br><span class="line">            InterfaceTagConfig annotation = method.getAnnotation(InterfaceTagConfig.class);</span><br><span class="line">            <span class="keyword">if</span>(annotation != <span class="keyword">null</span>)&#123;</span><br><span class="line">                METHOD_MAP.put(String.valueOf(annotation.method()),method);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> InterfaceTarHelper <span class="title">getInstance</span><span class="params">(newChannelEnum methodEnum)</span></span>&#123;</span><br><span class="line">        InterfaceTarHelper helper = <span class="keyword">new</span> InterfaceTarHelper();</span><br><span class="line">        <span class="comment">// 根据枚举获取方法</span></span><br><span class="line">        helper.method = METHOD_MAP.get(String.valueOf(methodEnum));</span><br><span class="line">        <span class="keyword">return</span> helper;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getSearchFlightDetail</span><span class="params">(Object... args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 方法传参数</span></span><br><span class="line">            <span class="keyword">return</span> method.invoke(CLASS_LOAD_PATH, args);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-使用注解"><a href="#4-使用注解" class="headerlink" title="4.使用注解"></a>4.使用注解</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewSearch</span> </span>&#123;</span><br><span class="line">    <span class="meta">@InterfaceTarget(method = InterfaceTagConfig.BVC)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">BVCValidation</span><span class="params">(InterfaceParam param)</span></span>&#123;……&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@InterfaceTarget(method = InterfaceTagConfig.ACC)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ACCValidation</span><span class="params">(InterfaceParam param)</span></span>&#123;……&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="5-调用方法"><a href="#5-调用方法" class="headerlink" title="5.调用方法"></a>5.调用方法</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SearchUtils</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getData_new</span><span class="params">(String channel, InterfaceParam param)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 获取对应的枚举</span></span><br><span class="line">        newChannelEnum enums = newChannelEnum.getEnums(channel);</span><br><span class="line">        <span class="comment">// 调用对应的注解</span></span><br><span class="line">        InterfaceHelper.getInstance(enums).getSearchFlightDetail(param);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="6-附释"><a href="#6-附释" class="headerlink" title="6.附释"></a>6.附释</h3><h4 id="Target"><a href="#Target" class="headerlink" title="@Target"></a><strong>@Target</strong></h4><p><code>表明该注解可以应用的java元素类型</code></p>
<table>
<thead>
<tr>
<th>Target类型</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>ElementType.TYPE</td>
<td>应用于类、接口（包括注解类型）、枚举</td>
</tr>
<tr>
<td>ElementType.FIELD</td>
<td>应用于属性（包括枚举中的常量）</td>
</tr>
<tr>
<td>ElementType.METHOD</td>
<td>应用于方法</td>
</tr>
<tr>
<td>ElementType.PARAMETER</td>
<td>应用于方法的形参</td>
</tr>
<tr>
<td>ElementType.CONSTRUCTOR</td>
<td>应用于构造函数</td>
</tr>
<tr>
<td>ElementType.LOCAL_VARIABLE</td>
<td>应用于局部变量</td>
</tr>
<tr>
<td>ElementType.ANNOTATION_TYPE</td>
<td>应用于注解类型</td>
</tr>
<tr>
<td>ElementType.PACKAGE</td>
<td>应用于包</td>
</tr>
<tr>
<td>ElementType.TYPE_PARAMETER</td>
<td>1.8版本新增，应用于类型变量</td>
</tr>
<tr>
<td>ElementType.TYPE_USE</td>
<td>1.8版本新增，应用于任何使用类型的语句中（例如声明语句、泛型和强制转换语句中的类型）</td>
</tr>
</tbody></table>
<h4 id="Retention"><a href="#Retention" class="headerlink" title="@Retention"></a><strong>@Retention</strong></h4><p><code>表明该注解的生命周期</code></p>
<table>
<thead>
<tr>
<th><strong>生命周期类型</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>RetentionPolicy.SOURCE</td>
<td>编译时被丢弃，不包含在类文件中</td>
</tr>
<tr>
<td>RetentionPolicy.CLASS</td>
<td>JVM加载时被丢弃，包含在类文件中，默认值</td>
</tr>
<tr>
<td>RetentionPolicy.RUNTIME</td>
<td>由JVM 加载，包含在类文件中，在运行时可以被获取到</td>
</tr>
</tbody></table>
<h4 id="Document"><a href="#Document" class="headerlink" title="@Document"></a><strong>@Document</strong></h4><p><code>表明该注解标记的元素可以被Javadoc 或类似的工具文档化</code></p>
<h4 id="Inherited"><a href="#Inherited" class="headerlink" title="@Inherited"></a><strong>@Inherited</strong></h4><p><code>表明使用了@Inherited注解的注解，所标记的类的子类也会拥有这个注解</code></p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>自定义注解</tag>
        <tag>反射</tag>
      </tags>
  </entry>
  <entry>
    <title>java文件用GZip压缩gz</title>
    <url>/2022/04/04/0.1.4java%E6%96%87%E4%BB%B6%E5%8E%8B%E7%BC%A9/</url>
    <content><![CDATA[<p>描述：利用Gzip进行文件压缩</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.GZIPInputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.GZIPOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GZipUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BUFFER = <span class="number">1024</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String EXT = <span class="string">&quot;.gz&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">       String userHome = System.getProperties().getProperty(<span class="string">&quot;user.home&quot;</span>); <span class="comment">// 用户目录，如：C:\Users\chushiyun</span></span><br><span class="line">       String fileName = userHome+<span class="string">&quot;/01.jpg&quot;</span>; <span class="comment">// 用户目录下的01.jpg 会被压缩成01.jpg.gz</span></span><br><span class="line">       compress(<span class="keyword">new</span> File(fileName));</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数据压缩</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] compress(<span class="keyword">byte</span>[] data) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        ByteArrayInputStream bais = <span class="keyword">new</span> ByteArrayInputStream(data);</span><br><span class="line">        ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 压缩</span></span><br><span class="line">        compress(bais, baos);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] output = baos.toByteArray();</span><br><span class="line"></span><br><span class="line">        baos.flush();</span><br><span class="line">        baos.close();</span><br><span class="line"></span><br><span class="line">        bais.close();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件压缩</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">compress</span><span class="params">(File file)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        compress(file, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件压缩</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> delete</span></span><br><span class="line"><span class="comment">     *            是否删除原始文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">compress</span><span class="params">(File file, <span class="keyword">boolean</span> delete)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(file.getPath() + EXT);</span><br><span class="line"></span><br><span class="line">        compress(fis, fos);</span><br><span class="line"></span><br><span class="line">        fis.close();</span><br><span class="line">        fos.flush();</span><br><span class="line">        fos.close();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (delete) &#123;</span><br><span class="line">            file.delete();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数据压缩</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> is</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> os</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">compress</span><span class="params">(InputStream is, OutputStream os)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        GZIPOutputStream gos = <span class="keyword">new</span> GZIPOutputStream(os);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> count;</span><br><span class="line">        <span class="keyword">byte</span> data[] = <span class="keyword">new</span> <span class="keyword">byte</span>[BUFFER];</span><br><span class="line">        <span class="keyword">while</span> ((count = is.read(data, <span class="number">0</span>, BUFFER)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            gos.write(data, <span class="number">0</span>, count);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        gos.finish();</span><br><span class="line"></span><br><span class="line">        gos.flush();</span><br><span class="line">        gos.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件压缩</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">compress</span><span class="params">(String path)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        compress(path, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件压缩</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> delete</span></span><br><span class="line"><span class="comment">     *            是否删除原始文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">compress</span><span class="params">(String path, <span class="keyword">boolean</span> delete)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(path);</span><br><span class="line">        compress(file, delete);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数据解压缩</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] decompress(<span class="keyword">byte</span>[] data) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        ByteArrayInputStream bais = <span class="keyword">new</span> ByteArrayInputStream(data);</span><br><span class="line">        ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 解压缩</span></span><br><span class="line"></span><br><span class="line">        decompress(bais, baos);</span><br><span class="line"></span><br><span class="line">        data = baos.toByteArray();</span><br><span class="line"></span><br><span class="line">        baos.flush();</span><br><span class="line">        baos.close();</span><br><span class="line"></span><br><span class="line">        bais.close();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件解压缩</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">decompress</span><span class="params">(File file)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        decompress(file, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件解压缩</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> delete</span></span><br><span class="line"><span class="comment">     *            是否删除原始文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">decompress</span><span class="params">(File file, <span class="keyword">boolean</span> delete)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(file.getPath().replace(EXT,</span><br><span class="line">                <span class="string">&quot;&quot;</span>));</span><br><span class="line">        decompress(fis, fos);</span><br><span class="line">        fis.close();</span><br><span class="line">        fos.flush();</span><br><span class="line">        fos.close();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (delete) &#123;</span><br><span class="line">            file.delete();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数据解压缩</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> is</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> os</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">decompress</span><span class="params">(InputStream is, OutputStream os)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        GZIPInputStream gis = <span class="keyword">new</span> GZIPInputStream(is);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> count;</span><br><span class="line">        <span class="keyword">byte</span> data[] = <span class="keyword">new</span> <span class="keyword">byte</span>[BUFFER];</span><br><span class="line">        <span class="keyword">while</span> ((count = gis.read(data, <span class="number">0</span>, BUFFER)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            os.write(data, <span class="number">0</span>, count);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        gis.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件解压缩</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">decompress</span><span class="params">(String path)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        decompress(path, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件解压缩</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> delete</span></span><br><span class="line"><span class="comment">     *            是否删除原始文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">decompress</span><span class="params">(String path, <span class="keyword">boolean</span> delete)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(path);</span><br><span class="line">        decompress(file, delete);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>java</tag>
        <tag>gzip</tag>
        <tag>压缩</tag>
      </tags>
  </entry>
  <entry>
    <title>ip地址白名单校验</title>
    <url>/2022/04/04/0.1.3ip%E5%9C%B0%E5%9D%80%E7%99%BD%E5%90%8D%E5%8D%95%E6%A0%A1%E9%AA%8C/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.service.taobao.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> WhiteIPInterceptor</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> //TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> yinjuan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022-01-12 16:45</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WhiteIPInterceptor</span> </span>&#123;</span><br><span class="line">    <span class="comment">// IP的正则</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Pattern pattern = Pattern</span><br><span class="line">            .compile(<span class="string">&quot;(1\\d&#123;1,2&#125;|2[0-4]\\d|25[0-5]|\\d&#123;1,2&#125;)\\.&quot;</span> + <span class="string">&quot;(1\\d&#123;1,2&#125;|2[0-4]\\d|25[0-5]|\\d&#123;1,2&#125;)\\.&quot;</span></span><br><span class="line">                    + <span class="string">&quot;(1\\d&#123;1,2&#125;|2[0-4]\\d|25[0-5]|\\d&#123;1,2&#125;)\\.&quot;</span> + <span class="string">&quot;(1\\d&#123;1,2&#125;|2[0-4]\\d|25[0-5]|\\d&#123;1,2&#125;)&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEFAULT_ALLOW_ALL_FLAG = <span class="string">&quot;*&quot;</span>;	<span class="comment">// 允许所有ip标志位</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEFAULT_DENY_ALL_FLAG = <span class="string">&quot;0&quot;</span>; 	<span class="comment">// 禁止所有ip标志位</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Description: 获取访问的ip地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getIpAddr</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        String ip = request.getHeader(<span class="string">&quot;X-Forwarded-For&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = request.getHeader(<span class="string">&quot;Proxy-Client-IP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = request.getHeader(<span class="string">&quot;WL-Proxy-Client-IP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = request.getHeader(<span class="string">&quot;HTTP_CLIENT_IP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = request.getHeader(<span class="string">&quot;HTTP_X_FORWARDED_FOR&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = request.getRemoteAddr();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;0:0:0:0:0:0:0:1&quot;</span>.equals(ip)) &#123;</span><br><span class="line">            ip = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ip;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据IP白名单设置获取可用的IP列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> allowIp</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Set&lt;String&gt; <span class="title">getAvaliIpList</span><span class="params">(String allowIp)</span> </span>&#123;</span><br><span class="line">        String[] splitRex = allowIp.split(<span class="string">&quot;;&quot;</span>);<span class="comment">// 拆分出白名单正则</span></span><br><span class="line">        Set&lt;String&gt; ipList = <span class="keyword">new</span> HashSet&lt;String&gt;(splitRex.length);</span><br><span class="line">        <span class="keyword">for</span> (String allow : splitRex) &#123;</span><br><span class="line">            allow = allow.trim();</span><br><span class="line">            <span class="keyword">if</span> (allow.contains(<span class="string">&quot;*&quot;</span>)) &#123;<span class="comment">// 处理通配符 *</span></span><br><span class="line">                String[] ips = allow.split(<span class="string">&quot;\\.&quot;</span>);</span><br><span class="line">                String[] from = <span class="keyword">new</span> String[] &#123; <span class="string">&quot;0&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;0&quot;</span> &#125;;</span><br><span class="line">                String[] end = <span class="keyword">new</span> String[] &#123; <span class="string">&quot;255&quot;</span>, <span class="string">&quot;255&quot;</span>, <span class="string">&quot;255&quot;</span>, <span class="string">&quot;255&quot;</span> &#125;;</span><br><span class="line">                List&lt;String&gt; tem = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ips.length; i++)</span><br><span class="line">                    <span class="keyword">if</span> (ips[i].indexOf(<span class="string">&quot;*&quot;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">                        tem = complete(ips[i]);</span><br><span class="line">                        from[i] = <span class="keyword">null</span>;</span><br><span class="line">                        end[i] = <span class="keyword">null</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        from[i] = ips[i];</span><br><span class="line">                        end[i] = ips[i];</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                StringBuilder fromIP = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                StringBuilder endIP = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">                    <span class="keyword">if</span> (from[i] != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        fromIP.append(from[i]).append(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">                        endIP.append(end[i]).append(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        fromIP.append(<span class="string">&quot;[*].&quot;</span>);</span><br><span class="line">                        endIP.append(<span class="string">&quot;[*].&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                fromIP.deleteCharAt(fromIP.length() - <span class="number">1</span>);</span><br><span class="line">                endIP.deleteCharAt(endIP.length() - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (String s : tem) &#123;</span><br><span class="line">                    String ip = fromIP.toString().replace(<span class="string">&quot;[*]&quot;</span>, s.split(<span class="string">&quot;;&quot;</span>)[<span class="number">0</span>]) + <span class="string">&quot;-&quot;</span></span><br><span class="line">                            + endIP.toString().replace(<span class="string">&quot;[*]&quot;</span>, s.split(<span class="string">&quot;;&quot;</span>)[<span class="number">1</span>]);</span><br><span class="line">                    <span class="keyword">if</span> (validate(ip)) &#123;</span><br><span class="line">                        ipList.add(ip);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (allow.contains(<span class="string">&quot;/&quot;</span>)) &#123;<span class="comment">// 处理 网段 xxx.xxx.xxx./24</span></span><br><span class="line">                ipList.add(allow);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;<span class="comment">// 处理单个 ip 或者 范围</span></span><br><span class="line">                <span class="keyword">if</span> (validate(allow)) &#123;</span><br><span class="line">                    ipList.add(allow);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ipList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 	对单个IP节点进行范围限定</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arg</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回限定后的IP范围，格式为List[10;19, 100;199]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">complete</span><span class="params">(String arg)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; com = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        <span class="keyword">int</span> len = arg.length();</span><br><span class="line">        <span class="keyword">if</span> (len == <span class="number">1</span>) &#123;</span><br><span class="line">            com.add(<span class="string">&quot;0;255&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (len == <span class="number">2</span>) &#123;</span><br><span class="line">            String s1 = complete(arg, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (s1 != <span class="keyword">null</span>)</span><br><span class="line">                com.add(s1);</span><br><span class="line">            String s2 = complete(arg, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span> (s2 != <span class="keyword">null</span>)</span><br><span class="line">                com.add(s2);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            String s1 = complete(arg, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (s1 != <span class="keyword">null</span>)</span><br><span class="line">                com.add(s1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> com;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">complete</span><span class="params">(String arg, <span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">        String from = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        String end = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (length == <span class="number">1</span>) &#123;</span><br><span class="line">            from = arg.replace(<span class="string">&quot;*&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line">            end = arg.replace(<span class="string">&quot;*&quot;</span>, <span class="string">&quot;9&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            from = arg.replace(<span class="string">&quot;*&quot;</span>, <span class="string">&quot;00&quot;</span>);</span><br><span class="line">            end = arg.replace(<span class="string">&quot;*&quot;</span>, <span class="string">&quot;99&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Integer.valueOf(from) &gt; <span class="number">255</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (Integer.valueOf(end) &gt; <span class="number">255</span>)</span><br><span class="line">            end = <span class="string">&quot;255&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> from + <span class="string">&quot;;&quot;</span> + end;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *	 在添加至白名单时进行格式校验</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ip</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">validate</span><span class="params">(String ip)</span> </span>&#123;</span><br><span class="line">        String[] temp = ip.split(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String s : temp)</span><br><span class="line">            <span class="keyword">if</span> (!pattern.matcher(s).matches()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 	根据IP,及可用Ip列表来判断ip是否包含在白名单之中</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ip</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ipList</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isPermited</span><span class="params">(String ip, Set&lt;String&gt; ipList)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ipList.isEmpty() || ipList.contains(ip))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (String allow : ipList) &#123;</span><br><span class="line">            <span class="keyword">if</span> (allow.indexOf(<span class="string">&quot;-&quot;</span>) &gt; -<span class="number">1</span>) &#123;<span class="comment">// 处理 类似 192.168.0.0-192.168.2.1</span></span><br><span class="line">                String[] tempAllow = allow.split(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">                String[] from = tempAllow[<span class="number">0</span>].split(<span class="string">&quot;\\.&quot;</span>);</span><br><span class="line">                String[] end = tempAllow[<span class="number">1</span>].split(<span class="string">&quot;\\.&quot;</span>);</span><br><span class="line">                String[] tag = ip.split(<span class="string">&quot;\\.&quot;</span>);</span><br><span class="line">                <span class="keyword">boolean</span> check = <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;<span class="comment">// 对IP从左到右进行逐段匹配</span></span><br><span class="line">                    <span class="keyword">int</span> s = Integer.valueOf(from[i]);</span><br><span class="line">                    <span class="keyword">int</span> t = Integer.valueOf(tag[i]);</span><br><span class="line">                    <span class="keyword">int</span> e = Integer.valueOf(end[i]);</span><br><span class="line">                    <span class="keyword">if</span> (!(s &lt;= t &amp;&amp; t &lt;= e)) &#123;</span><br><span class="line">                        check = <span class="keyword">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (check)</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (allow.contains(<span class="string">&quot;/&quot;</span>)) &#123;<span class="comment">// 处理 网段 xxx.xxx.xxx./24</span></span><br><span class="line">                <span class="keyword">int</span> splitIndex = allow.indexOf(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">                <span class="comment">// 取出子网段</span></span><br><span class="line">                String ipSegment = allow.substring(<span class="number">0</span>, splitIndex); <span class="comment">// 192.168.3.0</span></span><br><span class="line">                <span class="comment">// 子网数</span></span><br><span class="line">                String netmask = allow.substring(splitIndex + <span class="number">1</span>);<span class="comment">// 24</span></span><br><span class="line">                <span class="comment">// ip 转二进制</span></span><br><span class="line">                <span class="keyword">long</span> ipLong = ipToLong(ip);</span><br><span class="line">                <span class="comment">//子网二进制</span></span><br><span class="line">                <span class="keyword">long</span> maskLong=(<span class="number">2L</span>&lt;&lt;<span class="number">32</span> -<span class="number">1</span>) -(<span class="number">2L</span> &lt;&lt; Integer.valueOf(<span class="number">32</span>-Integer.valueOf(netmask))-<span class="number">1</span>);</span><br><span class="line">                <span class="comment">// ip与和子网相与 得到 网络地址</span></span><br><span class="line">                String calcSegment = longToIP(ipLong &amp; maskLong);</span><br><span class="line">                <span class="comment">// 如果计算得出网络地址和库中网络地址相同 则合法</span></span><br><span class="line">                <span class="keyword">if</span>(ipSegment.equals(calcSegment))<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 	根据IP地址，及IP白名单设置规则判断IP是否包含在白名单</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ipWhiteConfig</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isPermitedByRequest</span><span class="params">(HttpServletRequest request, String ipWhiteConfig)</span> </span>&#123;</span><br><span class="line">        String ip = getIpAddr(request);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == ip || <span class="string">&quot;&quot;</span>.equals(ip) || <span class="keyword">null</span> == ipWhiteConfig)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">//ip格式不对</span></span><br><span class="line">        <span class="keyword">if</span>(!pattern.matcher(ip).matches()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (DEFAULT_ALLOW_ALL_FLAG.equals(ipWhiteConfig))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (DEFAULT_DENY_ALL_FLAG.equals(ipWhiteConfig))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        Set&lt;String&gt; ipList = getAvaliIpList(ipWhiteConfig.replaceAll(<span class="string">&quot;；&quot;</span>, <span class="string">&quot;;&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> isPermited(ip, ipList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 	根据IP地址，及IP白名单设置规则判断IP是否包含在白名单</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ip</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ipWhiteConfig</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isPermited</span><span class="params">(String ip, String ipWhiteConfig)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == ip || <span class="string">&quot;&quot;</span>.equals(ip) || <span class="keyword">null</span> == ipWhiteConfig)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">//ip格式不对</span></span><br><span class="line">        <span class="keyword">if</span>(!pattern.matcher(ip).matches()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (DEFAULT_ALLOW_ALL_FLAG.equals(ipWhiteConfig))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (DEFAULT_DENY_ALL_FLAG.equals(ipWhiteConfig))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        Set&lt;String&gt; ipList = getAvaliIpList(ipWhiteConfig.replaceAll(<span class="string">&quot;；&quot;</span>, <span class="string">&quot;;&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> isPermited(ip, ipList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">ipToLong</span><span class="params">(String strIP)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span>[] ip = <span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="comment">// 先找到IP地址字符串中.的位置</span></span><br><span class="line">        <span class="keyword">int</span> position1 = strIP.indexOf(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> position2 = strIP.indexOf(<span class="string">&quot;.&quot;</span>, position1 + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> position3 = strIP.indexOf(<span class="string">&quot;.&quot;</span>, position2 + <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 将每个.之间的字符串转换成整型</span></span><br><span class="line">        ip[<span class="number">0</span>] = Long.parseLong(strIP.substring(<span class="number">0</span>, position1));</span><br><span class="line">        ip[<span class="number">1</span>] = Long.parseLong(strIP.substring(position1 + <span class="number">1</span>, position2));</span><br><span class="line">        ip[<span class="number">2</span>] = Long.parseLong(strIP.substring(position2 + <span class="number">1</span>, position3));</span><br><span class="line">        ip[<span class="number">3</span>] = Long.parseLong(strIP.substring(position3 + <span class="number">1</span>));</span><br><span class="line">        <span class="keyword">return</span> (ip[<span class="number">0</span>] &lt;&lt; <span class="number">24</span>) + (ip[<span class="number">1</span>] &lt;&lt; <span class="number">16</span>) + (ip[<span class="number">2</span>] &lt;&lt; <span class="number">8</span>) + ip[<span class="number">3</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将10进制整数形式转换成127.0.0.1形式的IP地址</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">longToIP</span><span class="params">(<span class="keyword">long</span> longIP)</span> </span>&#123;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="comment">// 直接右移24位</span></span><br><span class="line">        sb.append(String.valueOf(longIP &gt;&gt;&gt; <span class="number">24</span>));</span><br><span class="line">        sb.append(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">        <span class="comment">// 将高8位置0，然后右移16位</span></span><br><span class="line">        sb.append(String.valueOf((longIP &amp; <span class="number">0x00FFFFFF</span>) &gt;&gt;&gt; <span class="number">16</span>));</span><br><span class="line">        sb.append(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">        sb.append(String.valueOf((longIP &amp; <span class="number">0x0000FFFF</span>) &gt;&gt;&gt; <span class="number">8</span>));</span><br><span class="line">        sb.append(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">        sb.append(String.valueOf(longIP &amp; <span class="number">0x000000FF</span>));</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String ipWhilte = <span class="string">&quot;1.168.1.1;&quot;</span> <span class="comment">//设置单个IP的白名单 //</span></span><br><span class="line">                + <span class="string">&quot;192.*； &quot;</span> <span class="comment">//设置ip通配符,对一个ip段进行匹配</span></span><br><span class="line">                + <span class="string">&quot;192.168.1.1-192.168.1.3； &quot;</span> <span class="comment">//设置一个IP范围</span></span><br><span class="line">                + <span class="string">&quot;25.168.4.0/24 &quot;</span>; <span class="comment">//設置一个网段</span></span><br><span class="line">        System.out.println(WhiteIPInterceptor.isPermited(<span class="string">&quot;192.168.1.1&quot;</span>,ipWhilte));<span class="comment">//true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>java</tag>
        <tag>ip</tag>
        <tag>白名单</tag>
        <tag>校验</tag>
      </tags>
  </entry>
  <entry>
    <title>aop的简单使用</title>
    <url>/2022/04/25/0.1.2aop%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote>
<p> AOP 的全称是“Aspect Oriented Programming”，即面向切面编程，和 OOP（面向对象编程）类似，也是一种编程思想</p>
</blockquote>
<p>AOP 采取横向抽取机制（动态代理），取代了传统纵向继承机制的重复性代码，其应用主要体现在事务处理、日志管理、权限控制、异常处理等方面。主要作用是分离功能性需求和非功能性需求，使开发人员可以集中处理某一个关注点或者横切逻辑，减少对业务代码的侵入，增强代码的可读性和可维护性。</p>
<p><code>AOP 的作用就是保证开发者在不修改源代码的前提下，为系统中的业务组件添加某种通用功能</code>AOP 就是代理模式的典型应用。</p>
<p>目前最流行的 AOP 框架有两个，分别为 <strong>Spring AOP 和 AspectJ</strong></p>
<ul>
<li>Spring AOP 是基于 AOP 编程模式的一个框架，它能够有效的减少系统间的重复代码，达到松耦合的目的。Spring AOP 使用纯 Java 实现，不需要专门的编译过程和类加载器，在运行期间通过代理方式向目标类植入增强的代码。有两种实现方式：基于接口的 JDK 动态代理和基于继承的 CGLIB 动态代理</li>
<li>AspectJ 是一个基于 Java 语言的 AOP 框架，从 Spring 2.0 开始，Spring AOP 引入了对 AspectJ 的支持。AspectJ 扩展了 Java 语言，提供了一个专门的编译器，在编译时提供横向代码的植入</li>
</ul>
<h2 id="spring4-0执行顺序"><a href="#spring4-0执行顺序" class="headerlink" title="spring4.0执行顺序"></a>spring4.0执行顺序</h2><p><strong>正常执行顺序</strong></p>
<blockquote>
<p>around开始 – before – 方法调用 –  around结束 – after 执行 – afterReturning 执行</p>
</blockquote>
<p><strong>异常执行顺序</strong></p>
<blockquote>
<p>around开始 – before – 方法调用 –  around结束 – after 执行 – afterThrowing 执行</p>
</blockquote>
<h2 id="spring5-28执行顺序"><a href="#spring5-28执行顺序" class="headerlink" title="spring5.28执行顺序"></a>spring5.28执行顺序</h2><p><strong>正常执行顺序</strong></p>
<blockquote>
<p>around开始 – before – 方法调用 – afterReturning 执行 – after 执行 –  around结束</p>
</blockquote>
<p><strong>异常执行顺序</strong></p>
<blockquote>
<p>around开始 – before – 方法调用 – afterThrowing 执行 – after 执行 –  around结束</p>
</blockquote>
<h2 id="普通使用（直接匹配包）"><a href="#普通使用（直接匹配包）" class="headerlink" title="普通使用（直接匹配包）"></a>普通使用（直接匹配包）</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> dw</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> MyAop</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> AOP 各个通知使用示例：</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@EnableAspectJAutoProxy</span> ： 默认已开启不需要再添加响应的注解</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/8/15 0:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAop</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义切入点 (一个切面类中可以定义多个切入点)</span></span><br><span class="line"><span class="comment">     * 拦截所有 com.dw.study.controller 包以及子包下所有类的所有方案</span></span><br><span class="line"><span class="comment">     * 第一个 * 表示所有返回值</span></span><br><span class="line"><span class="comment">     * 第二个 * 表示所有类</span></span><br><span class="line"><span class="comment">     * 第三个 * 表示所有的方法名</span></span><br><span class="line"><span class="comment">     * 两个 .. 表示当前包以及子包</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.dw.study.controller..*.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">aspect</span><span class="params">()</span> </span>&#123;&#125;    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 前置通知，目标方法调用前被调用</span></span><br><span class="line"><span class="comment">     * 除<span class="doctag">@Around</span>外，每个方法里都可以加或者不加参数JoinPoint。</span></span><br><span class="line"><span class="comment">     * JoinPoint包含了类名、被切面的方法名、参数等属性。</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@Before(value = &quot;aspect()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;AOP before 执行... ：参数类型：&#123;&#125;&quot;</span>, joinPoint.getArgs());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最终通知，目标方法执行完之后执行</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@After(value = &quot;aspect()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;AOP after 执行...  ：&#123;&#125;&quot;</span>, joinPoint.toLongString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 后置返回通知</span></span><br><span class="line"><span class="comment">     * 如果参数中的第一个参数为JoinPoint，则第二个参数为返回值的信息</span></span><br><span class="line"><span class="comment">     * 如果参数中的第一个参数不为JoinPoint，则第一个参数为returning中对应的参数</span></span><br><span class="line"><span class="comment">     * returning 只有目标方法返回值与通知方法具有相应参数类型时才能执行后置返回通知，否则不执行</span></span><br><span class="line"><span class="comment">     * 除了使用上面定义好的切面aspect()， 也可以直接使用表达式。</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@AfterReturning(value = &quot;execution(* com.dw.study.controller..*.*(..))&quot;, returning = &quot;result&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterReturning</span><span class="params">(JoinPoint joinPoint, Object result)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;AOP afterReturning 执行...  ：返回结果：&#123;&#125;&quot;</span>, result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 环绕通知</span></span><br><span class="line"><span class="comment">     * 环绕通知非常强大，可以决定目标方法是否执行，什么时候执行，执行时是否需要替换方法参数，执行完毕是否需要替换返回值。</span></span><br><span class="line"><span class="comment">     * 环绕通知第一个参数必须是org.aspectj.lang.ProceedingJoinPoint类型</span></span><br><span class="line"><span class="comment">     * 2：proceedingJoinPoint.proceed() 执行被代理的方法</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@Around(value = &quot;aspect()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">around</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            log.info(<span class="string">&quot;AOP around开始... 执行方法... ：&#123;&#125;&quot;</span>, proceedingJoinPoint.getSignature().getName());</span><br><span class="line">            Object proceed = proceedingJoinPoint.proceed();</span><br><span class="line">            log.info(<span class="string">&quot;AOP around结束... 执行方法... ：&#123;&#125;&quot;</span>, proceedingJoinPoint.getSignature().getName());</span><br><span class="line">            <span class="keyword">return</span> proceed;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;AOP around 执行错误... error ：&#123;&#125;&quot;</span>, throwable.getMessage());</span><br><span class="line">            throwable.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;执行around出错。。。&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 后置异常通知</span></span><br><span class="line"><span class="comment">     * 定义一个名字，该名字用于匹配通知实现方法的一个参数名，当目标方法抛出异常返回后，将把目标方法抛出的异常传给通知方法；</span></span><br><span class="line"><span class="comment">     * throwing 只有目标方法抛出的异常与通知方法相应参数异常类型时才能执行后置异常通知，否则不执行，</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@AfterThrowing(value = &quot;aspect()&quot;, throwing = &quot;exception&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterThrowing</span><span class="params">(JoinPoint joinPoint, Throwable exception)</span> </span>&#123;</span><br><span class="line">        log.error(<span class="string">&quot;AOP afterThrowing 执行... , msg : &#123;&#125;&quot;</span>, exception.getMessage());</span><br><span class="line">        <span class="keyword">if</span> (exception <span class="keyword">instanceof</span> NullPointerException)</span><br><span class="line">            log.info(<span class="string">&quot;空指针异常&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="自定义注解匹配-无参"><a href="#自定义注解匹配-无参" class="headerlink" title="自定义注解匹配(无参)"></a>自定义注解匹配(无参)</h2><h3 id="1-自定义注解"><a href="#1-自定义注解" class="headerlink" title="1.自定义注解"></a>1.自定义注解</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Target(ElementType.METHOD)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MethodAspect &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-定义切面"><a href="#2-定义切面" class="headerlink" title="2.定义切面"></a>2.定义切面</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAop</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());<span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 基于注解定义切入点 2</span></span><br><span class="line"><span class="comment">     * 对于注解了 <span class="doctag">@MethodAspect</span>的方法进行拦截</span></span><br><span class="line"><span class="comment">     * 表示标注了特定注解的目标方法链接点。如<span class="doctag">@annotation</span>(com.dw.study.TestAnnotation)表示任何标注了<span class="doctag">@TestAnnotation</span>注解的目标类方法。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;@annotation(com.dw.study.customAnnotation.MethodAspect)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testMyAnnotationAspect</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 前置通知，目标方法调用前被调用</span></span><br><span class="line"><span class="comment">     * 除<span class="doctag">@Around</span>外，每个方法里都可以加或者不加参数JoinPoint。</span></span><br><span class="line"><span class="comment">     * JoinPoint包含了类名、被切面的方法名、参数等属性。</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@Before(value = &quot;testMyAnnotationAspect()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;AOP before 执行... ：参数类型：&#123;&#125;&quot;</span>, joinPoint.getArgs());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-扫描"><a href="#3-扫描" class="headerlink" title="3.扫描"></a>3.扫描</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;hello&quot;)</span></span><br><span class="line"><span class="meta">@MethodAspect</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;SpringBoot-HelloWorld&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="自定义注解匹配-带参"><a href="#自定义注解匹配-带参" class="headerlink" title="自定义注解匹配(带参)"></a>自定义注解匹配(带参)</h2><h3 id="1-自定义注解-1"><a href="#1-自定义注解-1" class="headerlink" title="1.自定义注解"></a>1.自定义注解</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Target(ElementType.METHOD)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MethodAspect &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 传值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 描述</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">description</span><span class="params">()</span> <span class="keyword">default</span> &quot;<span class="keyword">default</span> description&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-定义切面-1"><a href="#2-定义切面-1" class="headerlink" title="2.定义切面"></a>2.定义切面</h3><p><strong><code>如果需要获取@annotation中的值，需要和方法参数名相同</code></strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAop</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 基于注解定义切入点 2</span></span><br><span class="line"><span class="comment">     * 对于注解了 <span class="doctag">@MethodAspect</span>的方法进行拦截</span></span><br><span class="line"><span class="comment">     * 表示标注了特定注解的目标方法链接点。如<span class="doctag">@annotation</span>(com.dw.study.TestAnnotation)表示任何标注了<span class="doctag">@TestAnnotation</span>注解的目标类方法。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;@annotation(com.dw.study.customAnnotation.MethodAspect)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testMyAnnotationAspect</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 前置通知，目标方法调用前被调用</span></span><br><span class="line"><span class="comment">     * 除<span class="doctag">@Around</span>外，每个方法里都可以加或者不加参数JoinPoint。</span></span><br><span class="line"><span class="comment">     * JoinPoint包含了类名、被切面的方法名、参数等属性。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@annotation</span>中的值，需要和方法参数名相同(重要)</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@Before(value = &quot;testMyAnnotationAspect() &amp;&amp; @annotation(methodAspect)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(JoinPoint joinPoint, MethodAspect methodAspect)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;AOP before 执行... ：参数类型：&#123;&#125;&quot;</span>, joinPoint.getArgs());</span><br><span class="line">        log.info(<span class="string">&quot;before-value== &quot;</span>+ methodAspect.value() + <span class="string">&quot;before-description== &quot;</span> + methodAspect.description());</span><br><span class="line">        <span class="comment">// 接收到请求，记录请求内容</span></span><br><span class="line">        ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">        HttpServletRequest request = attributes.getRequest();</span><br><span class="line">        <span class="comment">// 记录下请求内容</span></span><br><span class="line">        System.out.println(<span class="string">&quot;URL : &quot;</span> + request.getRequestURL().toString());</span><br><span class="line">        System.out.println(<span class="string">&quot;HTTP_METHOD : &quot;</span> + request.getMethod());</span><br><span class="line">        System.out.println(<span class="string">&quot;IP : &quot;</span> + request.getRemoteAddr());</span><br><span class="line">        System.out.println(<span class="string">&quot;CLASS_METHOD : &quot;</span> + joinPoint.getSignature().getDeclaringTypeName() + <span class="string">&quot;.&quot;</span> + joinPoint.getSignature().getName());</span><br><span class="line">        System.out.println(<span class="string">&quot;ARGS : &quot;</span> + Arrays.toString(joinPoint.getArgs()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 环绕通知</span></span><br><span class="line"><span class="comment">     * 环绕通知非常强大，可以决定目标方法是否执行，什么时候执行，执行时是否需要替换方法参数，执行完毕是否需要替换返回值。</span></span><br><span class="line"><span class="comment">     * 环绕通知第一个参数必须是org.aspectj.lang.ProceedingJoinPoint类型</span></span><br><span class="line"><span class="comment">     * 2：proceedingJoinPoint.proceed() 执行被代理的方法</span></span><br><span class="line"><span class="comment">     *   <span class="doctag">@annotation</span>中的值，需要和方法参数名相同</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@Around(value = &quot;testMyAnnotationAspect() &amp;&amp; @annotation(methodAspect)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">around</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint, MethodAspect methodAspect)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            log.info(<span class="string">&quot;AOP around开始... 执行方法... ：&#123;&#125;&quot;</span>, proceedingJoinPoint.getSignature().getName());</span><br><span class="line">            log.info(<span class="string">&quot;around-value== &quot;</span>+ methodAspect.value() + <span class="string">&quot;around-description== &quot;</span> + methodAspect.description());</span><br><span class="line">            Object proceed = proceedingJoinPoint.proceed();</span><br><span class="line">            log.info(<span class="string">&quot;AOP around结束... 执行方法... ：&#123;&#125;&quot;</span>, proceedingJoinPoint.getSignature().getName());</span><br><span class="line">            <span class="keyword">return</span> proceed;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;AOP around 执行错误... error ：&#123;&#125;&quot;</span>, throwable.getMessage());</span><br><span class="line">            throwable.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;执行around出错。。。&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="附文"><a href="#附文" class="headerlink" title="附文"></a>附文</h2><p>为了更好地理解 AOP，我们需要了解一些它的相关术语。这些专业术语并不是 Spring 特有的，有些也同样适用于其它 AOP 框架，如 AspectJ。</p>
<p>它们的含义如下表所示：</p>
<table>
<thead>
<tr>
<th align="center">名称</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Joinpoint（连接点）</td>
<td align="center">指那些被拦截到的点，在 Spring 中，指可以被动态代理拦截目标类的方法。</td>
</tr>
<tr>
<td align="center">Pointcut（切入点）</td>
<td align="center">指要对哪些 Joinpoint 进行拦截，即被拦截的连接点。</td>
</tr>
<tr>
<td align="center">Advice（通知）</td>
<td align="center">指拦截到 Joinpoint 之后要做的事情，即对切入点增强的内容。</td>
</tr>
<tr>
<td align="center">Target（目标）</td>
<td align="center">指代理的目标对象。</td>
</tr>
<tr>
<td align="center">Weaving（植入）</td>
<td align="center">指把增强代码应用到目标上，生成代理对象的过程。</td>
</tr>
<tr>
<td align="center">Proxy（代理）</td>
<td align="center">指生成的代理对象。</td>
</tr>
<tr>
<td align="center">Aspect（切面）</td>
<td align="center">切入点和通知的结合。</td>
</tr>
</tbody></table>
<p>Advice 直译为通知，也有的资料翻译为“增强处理”，共有 5 种类型，如下表所示：</p>
<table>
<thead>
<tr>
<th align="center">通知</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">before（前置通知）</td>
<td align="center">通知方法在目标方法调用之前执行</td>
</tr>
<tr>
<td align="center">after（后置通知）</td>
<td align="center">通知方法在目标方法返回或异常后调用</td>
</tr>
<tr>
<td align="center">after-returning（返回后通知）</td>
<td align="center">通知方法会在目标方法返回后调用</td>
</tr>
<tr>
<td align="center">after-throwing（抛出异常通知）</td>
<td align="center">通知方法会在目标方法抛出异常后调用</td>
</tr>
<tr>
<td align="center">around（环绕通知）</td>
<td align="center">通知方法会将目标方法封装起来</td>
</tr>
</tbody></table>
<h3 id="execution表达式："><a href="#execution表达式：" class="headerlink" title="execution表达式："></a>execution表达式：</h3><p>用于匹配方法执行的连接点，属于方法级别， 语法： <code>execution(修饰符 返回值类型 方法名（参数）异常)</code></p>
<table>
<thead>
<tr>
<th align="center"><strong>语法参数</strong></th>
<th align="center"><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong>修饰符</strong></td>
<td align="center"><strong>可选，如public，protected，写在返回值前，任意修饰符填<code>*</code>号就可以</strong></td>
</tr>
<tr>
<td align="center"><strong>返回值类型</strong></td>
<td align="center"><strong><code>必选</code>，可以使用<code>*</code>来代表任意返回值</strong></td>
</tr>
<tr>
<td align="center"><strong>方法名</strong></td>
<td align="center"><strong><code>必选</code>，可以用<code>*</code>来代表任意方法</strong></td>
</tr>
<tr>
<td align="center"><strong>参数</strong></td>
<td align="center"><strong><code>必选， ()</code>代表是没有参数，<code>(..)</code>代表是匹配任意数量，任意类型的参数，当然也可以指定类型的参数进行匹配，如要接受一个String类型的参数，则<code>(java.lang.String)</code>, 任意数量的String类型参数：<code>(java.lang.String..)</code>等等。。。</strong></td>
</tr>
<tr>
<td align="center"><strong>异常</strong></td>
<td align="center"><strong>可选，语法：<code>throws 异常</code>，异常是完整带包名，可以是多个，用逗号分隔</strong></td>
</tr>
</tbody></table>
<p><strong>execution()表达式案例</strong>：</p>
<ul>
<li><strong>拦截</strong><code>com.dw.study</code><strong>包下的所有子包里的任意类的任意方法</strong><br><strong><code>execution(* com.dw.study..*.*(..))</code></strong></li>
<li><strong>拦截</strong><code>com.dw.study</code><strong>.Test2Controller下的任意方法</strong><br><strong><code>execution(* **</code>com.dw.study<code>**.Test2Controller.*(..))</code></strong></li>
<li><strong>拦截任何修饰符为public的方法</strong><br><strong><code>execution(public * * (..))</code></strong></li>
<li><strong>拦截</strong><code>com.dw.study</code><strong>下的所有子包里的以ok开头的方法</strong><br><strong><code>execution(* **</code>com.dw.study<code>**..*.ok* (..))</code></strong></li>
</ul>
<h3 id="JoinPoint"><a href="#JoinPoint" class="headerlink" title="JoinPoint"></a><strong>JoinPoint</strong></h3><p>JoinPoint对象封装了SpringAop中切面方法的信息,在切面方法中添加JoinPoint参数,就可以获取到封装了该方法信息的JoinPoint对象。 除 <strong>@Around</strong> 外，每个通知的方法里都可以加或者不加参数JoinPoint。JoinPoint包含了类名、被切面的方法名、参数等属性。@Around 参数必须为 ProceedingJoinPoint</p>
<table>
<thead>
<tr>
<th align="center">方法名</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Signature getSignature();</td>
<td align="center">获取封装了署名信息的对象,在该对象中可以获取到目标方法名,所属类的Class等信息</td>
</tr>
<tr>
<td align="center">Object[] getArgs();</td>
<td align="center">获取传入目标方法的参数对象</td>
</tr>
<tr>
<td align="center">Object getTarget();</td>
<td align="center">获取被代理的对象</td>
</tr>
<tr>
<td align="center">Object getThis();</td>
<td align="center">获取代理对象</td>
</tr>
</tbody></table>
<h3 id="ProceedingJoinPoint"><a href="#ProceedingJoinPoint" class="headerlink" title="ProceedingJoinPoint"></a><strong>ProceedingJoinPoint</strong></h3><p> ProceedingJoinPoint对象是JoinPoint 的子接口, 该对象只用在@Around的切面方法中：</p>
<table>
<thead>
<tr>
<th align="center">方法名</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Object proceed() throws Throwable</td>
<td align="center">执行目标方法</td>
</tr>
<tr>
<td align="center">Object proceed(Object[] var1) throws Throwable</td>
<td align="center">传入的新的参数去执行目标方法</td>
</tr>
</tbody></table>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>AOP 是 Spring 的核心之一，在 Spring 中经常会使用 AOP 来简化编程。</p>
<p> 在 Spring 框架中使用 AOP 主要有以下优势：</p>
<ul>
<li>提供声明式企业服务，特别是作为 EJB 声明式服务的替代品。最重要的是，这种服务是声明式事务管理。</li>
<li>允许用户实现自定义切面。在某些不适合用 OOP 编程的场景中，采用 AOP 来补充。</li>
<li>可以对业务逻辑的各个部分进行隔离，从而使业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时也提高了开发效率。</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><p><a href="https://www.cnblogs.com/dw3306/p/15077474.html"><strong>Spring AOP：基于AspectJ注解开发</strong></a></p>
</li>
<li><p><a href="https://blog.csdn.net/q982151756/article/details/80513340?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1.pc_relevant_default&utm_relevant_index=2">细说SpringAop详解</a></p>
</li>
<li><p><a href="https://zhuanlan.zhihu.com/p/395709988">https://zhuanlan.zhihu.com/p/395709988</a></p>
</li>
</ul>
]]></content>
      <tags>
        <tag>aop</tag>
      </tags>
  </entry>
  <entry>
    <title>mycat简单介绍</title>
    <url>/2022/04/17/0.1.5mycat%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h1 id="MyCat"><a href="#MyCat" class="headerlink" title="MyCat"></a>MyCat</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><blockquote>
<p>如今随着互联网的发展，数据的量级也是成指数式的增长，从GB到TB到PB。对数据的各种操作也是愈加的困难，传统的关系性数据库已经无法满足快速查询与插入数据的需求,这个时候NoSQL的出现暂时解决了这一危机。<code>它通过降低数据的安全性，减少对事务的支持，减少对复杂查询的支持，来获取性能上的提升</code>。但是，在有些场合NoSQL一些折衷是无法满足使用场景的，就比如有些使用场景是绝对要有事务与安全指标的。这个时候NoSQL肯定是无法满足的，所以还是需要使用关系性数据库。如何使用关系型数据库解决海量存储的问题呢？此时就需要做数据库集群，为了提高查询性能将一个数据库的数据分散到不同的数据库中存储，为应对此问题就出现了——MyCat 。</p>
</blockquote>
<p>MyCAT的目标是：低成本的将现有的单机数据库和应用平滑迁移到”云”端，解决海量数据存储和业务规模迅速增长情况下的数据存储和访问的瓶颈问题 。</p>
<p>Mycat 背后是阿里曾经开源的知名产品——Cobar，Cobar 的核心功能和优势是 MySQL 数据库分片</p>
<p>相对于cobar的优势</p>
<ul>
<li>对 cobar 的代码进行了彻底的重构，Mycat在I/O方面进行了重大改进,将原来的BIO改成了NIO, 并发量有大幅提高 </li>
<li>增加了对Order By、Group By、limit等聚合功能的支持，同时兼容绝大多数数据库成为通用的数据库中间件</li>
<li>对于开发人员来说根本感觉不到mycat的存在</li>
</ul>
<p>MyCat发展到目前的版本，已经不是一个单纯的MySQL代理了，它的后端可以支持MySQL、SQL Server、Oracle、DB2、PostgreSQL等主流数据库，也支持MongoDB这种新型NoSQL方式的存储，未来还会支持更多类型的存储。而在最终用户看来，无论是那种存储方式，在MyCat里，都是一个传统的数据库表，支持标准的SQL语句进行数据的操作，这样一来，对前端业务系统来说，可以大幅降低开发难度，提升开发速度</p>
<h2 id="MyCat使用场景"><a href="#MyCat使用场景" class="headerlink" title="MyCat使用场景"></a>MyCat使用场景</h2><h3 id="1-高可用性与MySQL读写分离"><a href="#1-高可用性与MySQL读写分离" class="headerlink" title="1.高可用性与MySQL读写分离"></a>1.高可用性与MySQL读写分离</h3><p>高可用：利用MyCat可以轻松实现热备份，当一台服务器停机时，可以由集群中的另一台服务器自动接管业务，无需人工干预，从而保证高可用。</p>
<p>读写分离：通过MySQL数据库的binlog日志完成主从复制，并可以通过MyCat轻松实现读写分离，实现insert、update、delete走主库，而在select时走从库，从而缓解单台服务器的访问压力。</p>
<h3 id="2-业务数据分级存储保障"><a href="#2-业务数据分级存储保障" class="headerlink" title="2. 业务数据分级存储保障"></a>2. 业务数据分级存储保障</h3><p>企业的数据量总是无休止的增长，这些数据的格式不一样，访问效率不一样，重要性也不一样。可以针对不同级别的数据，采用不同的存储设备，通过分级存储管理软件实现数据客体在存储设备之间自动迁移及自动访问切换</p>
<h3 id="3-大表水平拆分，集群并行计算"><a href="#3-大表水平拆分，集群并行计算" class="headerlink" title="3.大表水平拆分，集群并行计算"></a>3.大表水平拆分，集群并行计算</h3><p>数据切分是MyCat的核心功能，是指通过某种特定的条件，将存放在同一个数据库的数据，分散存储在多个数据库中，以达到分散单台设备负载的效果。当数据库量超过800万行且需要做分片时，就可以考虑使用MyCat实现数据切分。</p>
<h3 id="4-数据库路由器"><a href="#4-数据库路由器" class="headerlink" title="4.数据库路由器"></a>4.数据库路由器</h3><p>MyCat基于MySQL实例的连接池复用机制，可以让每个应用最大程度共享一个MySQL实例的所有连接池，让数据库的并发访问能力大大提升。</p>
<h3 id="5-整合多种数据源"><a href="#5-整合多种数据源" class="headerlink" title="5.整合多种数据源"></a>5.整合多种数据源</h3><p>当一个项目中使用了多个数据库（Oracle，MySQL，SQL Server,PostgreSQL），并配置了多个数据源，操作起来就比较繁琐，这时就可以使用MyCat进行整合，最终我们的应用程序只需要访问一个数据源即可</p>
<h2 id="MyCat原理"><a href="#MyCat原理" class="headerlink" title="MyCat原理"></a>MyCat原理</h2><blockquote>
<p>MyCat相当于MySQL的Server层</p>
<p>MySQL相当于MyCat的存储层</p>
</blockquote>
<ul>
<li>拦截：拦截用户发送的sql</li>
<li>分析：分析分片，路由分析，读写分离分析，缓存分析</li>
<li>分发：根据分片规则分发给对应的数据源</li>
<li>拼接：把各数据源返回的结果聚合</li>
</ul>
<p><code>MyCat对于研发来说是透明的</code></p>
<h2 id="MyCat使用"><a href="#MyCat使用" class="headerlink" title="MyCat使用"></a>MyCat使用</h2><p>下载地址: <a href="https://github.com/MyCATApache/Mycat-download">https://github.com/MyCATApache/Mycat-download</a></p>
<p>最新下载地址: <a href="http://dl.mycat.io/">http://dl.mycat.io/</a></p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220417203048414.png" alt="image-20220417203048414"></p>
<h3 id="配置schema-xml"><a href="#配置schema-xml" class="headerlink" title="配置schema.xml"></a>配置schema.xml</h3><blockquote>
<p>schema.xml 作为MyCat中重要的配置文件之一，管理着MyCat的逻辑库、逻辑表以及对应的分片规则、DataNode以及DataSource。弄懂这些配置，是正确使用MyCat的前提。这里就一层层对该文件进行解析。</p>
</blockquote>
<table>
<thead>
<tr>
<th>属性</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>schema</td>
<td>标签用于定义MyCat实例中的逻辑库</td>
</tr>
<tr>
<td>table</td>
<td>标签定义了MyCat中的逻辑表, rule用于指定分片规则，auto-sharding-long的分片规则是按ID值的范围进行分片 1-5000000 为第1片  5000001-10000000 为第2片….  具体设置我们会在第四节中讲解。</td>
</tr>
<tr>
<td>dataNode</td>
<td>标签定义了MyCat中的数据节点，也就是我们通常说所的数据分片。</td>
</tr>
<tr>
<td>dataHost</td>
<td>标签在mycat逻辑库中也是作为最底层的标签存在，直接定义了具体的数据库实例、读写分离配置和心跳语句。</td>
</tr>
</tbody></table>
<p>schema.xml文件配置(可根据自己的需求加减配置)</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mycat</span>:schema <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;schema.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mycat:schema</span> <span class="attr">xmlns:mycat</span>=<span class="string">&quot;http://io.mycat/&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 逻辑库配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">schema</span> <span class="attr">name</span>=<span class="string">&quot;ITCAST&quot;</span> <span class="attr">checkSQLschema</span>=<span class="string">&quot;false&quot;</span> <span class="attr">sqlMaxLimit</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 逻辑表配置 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">&quot;TB_TEST&quot;</span> <span class="attr">dataNode</span>=<span class="string">&quot;dn1,dn2,dn3&quot;</span> <span class="attr">rule</span>=<span class="string">&quot;auto-sharding-long&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">schema</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 数据节点配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">&quot;dn1&quot;</span> <span class="attr">dataHost</span>=<span class="string">&quot;host1&quot;</span> <span class="attr">database</span>=<span class="string">&quot;db1&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">&quot;dn2&quot;</span> <span class="attr">dataHost</span>=<span class="string">&quot;host2&quot;</span> <span class="attr">database</span>=<span class="string">&quot;db1&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">&quot;dn3&quot;</span> <span class="attr">dataHost</span>=<span class="string">&quot;host3&quot;</span> <span class="attr">database</span>=<span class="string">&quot;db1&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 节点主机配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dataHost</span> <span class="attr">name</span>=<span class="string">&quot;host1&quot;</span> <span class="attr">maxCon</span>=<span class="string">&quot;1000&quot;</span> <span class="attr">minCon</span>=<span class="string">&quot;10&quot;</span> <span class="attr">balance</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">writeType</span>=<span class="string">&quot;0&quot;</span> <span class="attr">dbType</span>=<span class="string">&quot;mysql&quot;</span> <span class="attr">dbDriver</span>=<span class="string">&quot;native&quot;</span> <span class="attr">switchType</span>=<span class="string">&quot;1&quot;</span>  <span class="attr">slaveThreshold</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">heartbeat</span>&gt;</span>select user()<span class="tag">&lt;/<span class="name">heartbeat</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">&quot;hostM1&quot;</span> <span class="attr">url</span>=<span class="string">&quot;192.168.192.157:3306&quot;</span> <span class="attr">user</span>=<span class="string">&quot;root&quot;</span> <span class="attr">password</span>=<span class="string">&quot;itcast&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dataHost</span>&gt;</span>	</span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">dataHost</span> <span class="attr">name</span>=<span class="string">&quot;host2&quot;</span> <span class="attr">maxCon</span>=<span class="string">&quot;1000&quot;</span> <span class="attr">minCon</span>=<span class="string">&quot;10&quot;</span> <span class="attr">balance</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">writeType</span>=<span class="string">&quot;0&quot;</span> <span class="attr">dbType</span>=<span class="string">&quot;mysql&quot;</span> <span class="attr">dbDriver</span>=<span class="string">&quot;native&quot;</span> <span class="attr">switchType</span>=<span class="string">&quot;1&quot;</span>  <span class="attr">slaveThreshold</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">heartbeat</span>&gt;</span>select user()<span class="tag">&lt;/<span class="name">heartbeat</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">&quot;hostM1&quot;</span> <span class="attr">url</span>=<span class="string">&quot;192.168.192.158:3306&quot;</span> <span class="attr">user</span>=<span class="string">&quot;root&quot;</span> <span class="attr">password</span>=<span class="string">&quot;itcast&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dataHost</span>&gt;</span>	</span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">dataHost</span> <span class="attr">name</span>=<span class="string">&quot;host3&quot;</span> <span class="attr">maxCon</span>=<span class="string">&quot;1000&quot;</span> <span class="attr">minCon</span>=<span class="string">&quot;10&quot;</span> <span class="attr">balance</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">writeType</span>=<span class="string">&quot;0&quot;</span> <span class="attr">dbType</span>=<span class="string">&quot;mysql&quot;</span> <span class="attr">dbDriver</span>=<span class="string">&quot;native&quot;</span> <span class="attr">switchType</span>=<span class="string">&quot;1&quot;</span>  <span class="attr">slaveThreshold</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">heartbeat</span>&gt;</span>select user()<span class="tag">&lt;/<span class="name">heartbeat</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">&quot;hostM1&quot;</span> <span class="attr">url</span>=<span class="string">&quot;192.168.192.159:3306&quot;</span> <span class="attr">user</span>=<span class="string">&quot;root&quot;</span> <span class="attr">password</span>=<span class="string">&quot;itcast&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dataHost</span>&gt;</span>	</span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">mycat:schema</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>配置详解</p>
<h4 id="system标签"><a href="#system标签" class="headerlink" title="system标签"></a>system标签</h4><table>
<thead>
<tr>
<th>属性</th>
<th>取值</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>charset</td>
<td>utf8</td>
<td>设置Mycat的字符集, 字符集需要与MySQL的字符集保持一致</td>
</tr>
<tr>
<td>nonePasswordLogin</td>
<td>0,1</td>
<td>0为需要密码登陆、1为不需要密码登陆 ,默认为0，设置为1则需要指定默认账户</td>
</tr>
<tr>
<td>useHandshakeV10</td>
<td>0,1</td>
<td>使用该选项主要的目的是为了能够兼容高版本的jdbc驱动, 是否采用HandshakeV10Packet来与client进行通信, 1:是, 0:否</td>
</tr>
<tr>
<td>useSqlStat</td>
<td>0,1</td>
<td>开启SQL实时统计, 1 为开启 , 0 为关闭 ;<br />开启之后, MyCat会自动统计SQL语句的执行情况 ;<br />mysql -h 127.0.0.1 -P 9066 -u root -p<br />查看MyCat执行的SQL, 执行效率比较低的SQL , SQL的整体执行情况、读写比例等 ;<br />show @@sql ; show @@sql.slow ; show @@sql.sum ;</td>
</tr>
<tr>
<td>useGlobleTableCheck</td>
<td>0,1</td>
<td>是否开启全局表的一致性检测。1为开启 ，0为关闭 。</td>
</tr>
<tr>
<td>sqlExecuteTimeout</td>
<td>1000</td>
<td>SQL语句执行的超时时间 , 单位为 s ;</td>
</tr>
<tr>
<td>sequnceHandlerType</td>
<td>0,1,2</td>
<td>用来指定Mycat全局序列类型，0 为本地文件，1 为数据库方式，2 为时间戳列方式，默认使用本地文件方式，文件方式主要用于测试</td>
</tr>
<tr>
<td>sequnceHandlerPattern</td>
<td>正则表达式</td>
<td>必须带有MYCATSEQ_或者 mycatseq_进入序列匹配流程 注意MYCATSEQ_有空格的情况</td>
</tr>
<tr>
<td>subqueryRelationshipCheck</td>
<td>true,false</td>
<td>子查询中存在关联查询的情况下,检查关联字段中是否有分片字段 .默认 false</td>
</tr>
<tr>
<td>useCompression</td>
<td>0,1</td>
<td>开启mysql压缩协议 , 0 : 关闭, 1 : 开启</td>
</tr>
<tr>
<td>fakeMySQLVersion</td>
<td>5.5,5.6</td>
<td>设置模拟的MySQL版本号</td>
</tr>
<tr>
<td>defaultSqlParser</td>
<td></td>
<td>由于MyCat的最初版本使用了FoundationDB的SQL解析器, 在MyCat1.3后增加了Druid解析器, 所以要设置defaultSqlParser属性来指定默认的解析器; 解析器有两个 : druidparser 和 fdbparser, 在MyCat1.4之后,默认是druidparser, fdbparser已经废除了</td>
</tr>
<tr>
<td>processors</td>
<td>1,2….</td>
<td>指定系统可用的线程数量, 默认值为CPU核心 x 每个核心运行线程数量; processors 会影响processorBufferPool, processorBufferLocalPercent, processorExecutor属性, 所有, 在性能调优时, 可以适当地修改processors值</td>
</tr>
<tr>
<td>processorBufferChunk</td>
<td></td>
<td>指定每次分配Socket Direct Buffer默认值为4096字节, 也会影响BufferPool长度, 如果一次性获取字节过多而导致buffer不够用, 则会出现警告, 可以调大该值</td>
</tr>
<tr>
<td>processorExecutor</td>
<td></td>
<td>指定NIOProcessor上共享 businessExecutor固定线程池的大小; MyCat把异步任务交给 businessExecutor线程池中, 在新版本的MyCat中这个连接池使用频次不高, 可以适当地把该值调小</td>
</tr>
<tr>
<td>packetHeaderSize</td>
<td></td>
<td>指定MySQL协议中的报文头长度, 默认4个字节</td>
</tr>
<tr>
<td>maxPacketSize</td>
<td></td>
<td>指定MySQL协议可以携带的数据最大大小, 默认值为16M</td>
</tr>
<tr>
<td>idleTimeout</td>
<td>30</td>
<td>指定连接的空闲时间的超时长度;如果超时,将关闭资源并回收, 默认30分钟</td>
</tr>
<tr>
<td>txIsolation</td>
<td>1,2,3,4</td>
<td>初始化前端连接的事务隔离级别,默认为 REPEATED_READ , 对应数字为3<br />READ_UNCOMMITED=1;<br />READ_COMMITTED=2;<br />REPEATED_READ=3;<br />SERIALIZABLE=4;</td>
</tr>
<tr>
<td>sqlExecuteTimeout</td>
<td>300</td>
<td>执行SQL的超时时间, 如果SQL语句执行超时,将关闭连接; 默认300秒;</td>
</tr>
<tr>
<td>serverPort</td>
<td>8066</td>
<td>定义MyCat的使用端口, 默认8066</td>
</tr>
<tr>
<td>managerPort</td>
<td>9066</td>
<td>定义MyCat的管理端口, 默认9066</td>
</tr>
</tbody></table>
<h3 id="server-xml配置"><a href="#server-xml配置" class="headerlink" title="server.xml配置"></a>server.xml配置</h3><blockquote>
<p>server.xml几乎保存了所有mycat需要的系统配置信息。最常用的是在此配置用户名、密码及权限。在system中添加UTF-8字符集设置，否则存储中文会出现问号</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;charset&quot;</span>&gt;</span>utf8<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>修改user的设置 ,  我们这里为 ITCAST 设置了两个用户 : </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">name</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;schemas&quot;</span>&gt;</span>ITCAST<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">name</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;schemas&quot;</span>&gt;</span>ITCAST<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="user标签"><a href="#user标签" class="headerlink" title="user标签"></a>user标签</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">name</span>=<span class="string">&quot;root&quot;</span> <span class="attr">defaultAccount</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;schemas&quot;</span>&gt;</span>ITCAST<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;readOnly&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;benchmark&quot;</span>&gt;</span>1000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;usingDecrypt&quot;</span>&gt;</span>0<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 表级 DML 权限设置 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 		</span></span><br><span class="line"><span class="comment">    &lt;privileges check=&quot;false&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;schema name=&quot;TESTDB&quot; dml=&quot;0110&quot; &gt;</span></span><br><span class="line"><span class="comment">            &lt;table name=&quot;tb01&quot; dml=&quot;0000&quot;&gt;&lt;/table&gt;</span></span><br><span class="line"><span class="comment">            &lt;table name=&quot;tb02&quot; dml=&quot;1111&quot;&gt;&lt;/table&gt;</span></span><br><span class="line"><span class="comment">        &lt;/schema&gt;</span></span><br><span class="line"><span class="comment">    &lt;/privileges&gt;		</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>user标签主要用于定义登录MyCat的用户和权限 :</p>
<p>1). &lt;user name=”root” defaultAccount=”true”&gt; : name 属性用于声明用户名 ;</p>
<p>2). &lt;property name=”password”&gt;123456&lt;/property&gt; : 指定该用户名访问MyCat的密码 ;</p>
<p>3). &lt;property name=”schemas”&gt;ITCAST&lt;/property&gt; : 能够访问的逻辑库, 多个的话, 使用 “,” 分割</p>
<p>4). &lt;property name=”readOnly”&gt;true&lt;/property&gt; : 是否只读</p>
<p>5). &lt;property name=”benchmark”&gt;11111&lt;/property&gt; : 指定前端的整体连接数量 , 0 或不设置表示不限制 </p>
<p>6). &lt;property name=”usingDecrypt”&gt;0&lt;/property&gt; : 是否对密码加密默认 0 否 , 1 是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -cp Mycat-server-1.6.7.3-release.jar io.mycat.util.DecryptUtil 0:root:123456</span><br></pre></td></tr></table></figure>

<p>7). &lt;privileges check=”false”&gt;</p>
<p>A. 对用户的 schema 及 下级的 table 进行精细化的 DML 权限控制; </p>
<p>B. privileges 节点中的 check 属性是用 于标识是否开启 DML 权限检查， 默认 false 标识不检查，当然 privileges 节点不配置，等同 check=false, 由于 Mycat 一个用户的 schemas 属性可配置多个 schema ，所以 privileges 的下级节点 schema 节点同样 可配置多个，对多库多表进行细粒度的 DML 权限控制;</p>
<p>C. 权限修饰符四位数字(0000 - 1111)，对应的操作是 IUSD ( 增，改，查，删 )。同时配置了库跟表的权限，就近原则。以表权限为准。</p>
<h4 id="firewall-标签"><a href="#firewall-标签" class="headerlink" title="firewall 标签"></a>firewall 标签</h4><p>firewall标签用来定义防火墙；firewall下whitehost标签用来定义 IP白名单 ，blacklist用来定义 SQL黑名单。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">firewall</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 白名单配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">whitehost</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">host</span> <span class="attr">user</span>=<span class="string">&quot;root&quot;</span> <span class="attr">host</span>=<span class="string">&quot;127.0.0.1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">whitehost</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 黑名单配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">blacklist</span> <span class="attr">check</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;selelctAllow&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">blacklist</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">firewall</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>黑名单拦截明细配置:</p>
<table>
<thead>
<tr>
<th>配置项</th>
<th>缺省值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>selelctAllow</td>
<td>true</td>
<td>是否允许执行 SELECT 语句</td>
</tr>
<tr>
<td>selectAllColumnAllow</td>
<td>true</td>
<td>是否允许执行 SELECT * FROM T 这样的语句。如果设置为 false，不允许执行 select * from t，但可以select * from (select id, name from t) a。这个选项是防御程序通过调用 select * 获得数据表的结构信息。</td>
</tr>
<tr>
<td>selectIntoAllow</td>
<td>true</td>
<td>SELECT 查询中是否允许 INTO 字句</td>
</tr>
<tr>
<td>deleteAllow</td>
<td>true</td>
<td>是否允许执行 DELETE 语句</td>
</tr>
<tr>
<td>updateAllow</td>
<td>true</td>
<td>是否允许执行 UPDATE 语句</td>
</tr>
<tr>
<td>insertAllow</td>
<td>true</td>
<td>是否允许执行 INSERT 语句</td>
</tr>
<tr>
<td>replaceAllow</td>
<td>true</td>
<td>是否允许执行 REPLACE 语句</td>
</tr>
<tr>
<td>mergeAllow</td>
<td>true</td>
<td>是否允许执行 MERGE 语句，这个只在 Oracle 中有用</td>
</tr>
<tr>
<td>callAllow</td>
<td>true</td>
<td>是否允许通过 jdbc 的 call 语法调用存储过程</td>
</tr>
<tr>
<td>setAllow</td>
<td>true</td>
<td>是否允许使用 SET 语法</td>
</tr>
<tr>
<td>truncateAllow</td>
<td>true</td>
<td>truncate 语句是危险，缺省打开，若需要自行关闭</td>
</tr>
<tr>
<td>createTableAllow</td>
<td>true</td>
<td>是否允许创建表</td>
</tr>
<tr>
<td>alterTableAllow</td>
<td>true</td>
<td>是否允许执行 Alter Table 语句</td>
</tr>
<tr>
<td>dropTableAllow</td>
<td>true</td>
<td>是否允许修改表</td>
</tr>
<tr>
<td>commentAllow</td>
<td>false</td>
<td>是否允许语句中存在注释，Oracle 的用户不用担心，Wall 能够识别 hints和注释的区别</td>
</tr>
<tr>
<td>noneBaseStatementAllow</td>
<td>false</td>
<td>是否允许非以上基本语句的其他语句，缺省关闭，通过这个选项就能够屏蔽 DDL。</td>
</tr>
<tr>
<td>multiStatementAllow</td>
<td>false</td>
<td>是否允许一次执行多条语句，缺省关闭</td>
</tr>
<tr>
<td>useAllow</td>
<td>true</td>
<td>是否允许执行 mysql 的 use 语句，缺省打开</td>
</tr>
<tr>
<td>describeAllow</td>
<td>true</td>
<td>是否允许执行 mysql 的 describe 语句，缺省打开</td>
</tr>
<tr>
<td>showAllow</td>
<td>true</td>
<td>是否允许执行 mysql 的 show 语句，缺省打开</td>
</tr>
<tr>
<td>commitAllow</td>
<td>true</td>
<td>是否允许执行 commit 操作</td>
</tr>
<tr>
<td>rollbackAllow</td>
<td>true</td>
<td>是否允许执行 roll back 操作</td>
</tr>
<tr>
<td>拦截配置－永真条件</td>
<td></td>
<td></td>
</tr>
<tr>
<td>selectWhereAlwayTrueCheck</td>
<td>true</td>
<td>检查 SELECT 语句的 WHERE 子句是否是一个永真条件</td>
</tr>
<tr>
<td>selectHavingAlwayTrueCheck</td>
<td>true</td>
<td>检查 SELECT 语句的 HAVING 子句是否是一个永真条件</td>
</tr>
<tr>
<td>deleteWhereAlwayTrueCheck</td>
<td>true</td>
<td>检查 DELETE 语句的 WHERE 子句是否是一个永真条件</td>
</tr>
<tr>
<td>deleteWhereNoneCheck</td>
<td>false</td>
<td>检查 DELETE 语句是否无 where 条件，这是有风险的，但不是 SQL 注入类型的风险</td>
</tr>
<tr>
<td>updateWhereAlayTrueCheck</td>
<td>true</td>
<td>检查 UPDATE 语句的 WHERE 子句是否是一个永真条件</td>
</tr>
<tr>
<td>updateWhereNoneCheck</td>
<td>false</td>
<td>检查 UPDATE 语句是否无 where 条件，这是有风险的，但不是SQL 注入类型的风险</td>
</tr>
<tr>
<td>conditionAndAlwayTrueAllow</td>
<td>false</td>
<td>检查查询条件(WHERE/HAVING 子句)中是否包含 AND 永真条件</td>
</tr>
<tr>
<td>conditionAndAlwayFalseAllow</td>
<td>false</td>
<td>检查查询条件(WHERE/HAVING 子句)中是否包含 AND 永假条件</td>
</tr>
<tr>
<td>conditionLikeTrueAllow</td>
<td>true</td>
<td>检查查询条件(WHERE/HAVING 子句)中是否包含 LIKE 永真条件</td>
</tr>
<tr>
<td>其他拦截配置</td>
<td></td>
<td></td>
</tr>
<tr>
<td>selectIntoOutfileAllow</td>
<td>false</td>
<td>SELECT … INTO OUTFILE 是否允许，这个是 mysql 注入攻击的常见手段，缺省是禁止的</td>
</tr>
<tr>
<td>selectUnionCheck</td>
<td>true</td>
<td>检测 SELECT UNION</td>
</tr>
<tr>
<td>selectMinusCheck</td>
<td>true</td>
<td>检测 SELECT MINUS</td>
</tr>
<tr>
<td>selectExceptCheck</td>
<td>true</td>
<td>检测 SELECT EXCEPT</td>
</tr>
<tr>
<td>selectIntersectCheck</td>
<td>true</td>
<td>检测 SELECT INTERSECT</td>
</tr>
<tr>
<td>mustParameterized</td>
<td>false</td>
<td>是否必须参数化，如果为 True，则不允许类似 WHERE ID = 1 这种不参数化的 SQL</td>
</tr>
<tr>
<td>strictSyntaxCheck</td>
<td>true</td>
<td>是否进行严格的语法检测，Druid SQL Parser 在某些场景不能覆盖所有的SQL 语法，出现解析 SQL 出错，可以临时把这个选项设置为 false，同时把 SQL 反馈给 Druid 的开发者。</td>
</tr>
<tr>
<td>conditionOpXorAllow</td>
<td>false</td>
<td>查询条件中是否允许有 XOR 条件。XOR 不常用，很难判断永真或者永假，缺省不允许。</td>
</tr>
<tr>
<td>conditionOpBitwseAllow</td>
<td>true</td>
<td>查询条件中是否允许有”&amp;”、”~”、”|”、”^”运算符。</td>
</tr>
<tr>
<td>conditionDoubleConstAllow</td>
<td>false</td>
<td>查询条件中是否允许连续两个常量运算表达式</td>
</tr>
<tr>
<td>minusAllow</td>
<td>true</td>
<td>是否允许 SELECT * FROM A MINUS SELECT * FROM B 这样的语句</td>
</tr>
<tr>
<td>intersectAllow</td>
<td>true</td>
<td>是否允许 SELECT * FROM A INTERSECT SELECT * FROM B 这样的语句</td>
</tr>
<tr>
<td>constArithmeticAllow</td>
<td>true</td>
<td>拦截常量运算的条件，比如说 WHERE FID = 3 - 1，其中”3 - 1”是常量运算表达式。</td>
</tr>
<tr>
<td>limitZeroAllow</td>
<td>false</td>
<td>是否允许 limit 0 这样的语句</td>
</tr>
<tr>
<td>禁用对象检测配置</td>
<td></td>
<td></td>
</tr>
<tr>
<td>tableCheck</td>
<td>true</td>
<td>检测是否使用了禁用的表</td>
</tr>
<tr>
<td>schemaCheck</td>
<td>true</td>
<td>检测是否使用了禁用的 Schema</td>
</tr>
<tr>
<td>functionCheck</td>
<td>true</td>
<td>检测是否使用了禁用的函数</td>
</tr>
<tr>
<td>objectCheck</td>
<td>true</td>
<td>检测是否使用了“禁用对对象”</td>
</tr>
<tr>
<td>variantCheck</td>
<td>true</td>
<td>检测是否使用了“禁用的变量”</td>
</tr>
<tr>
<td>readOnlyTables</td>
<td>空</td>
<td>指定的表只读，不能够在 SELECT INTO、DELETE、UPDATE、INSERT、MERGE 中作为”被修改表”出现</td>
</tr>
</tbody></table>
<h3 id="启动Mycat"><a href="#启动Mycat" class="headerlink" title="启动Mycat"></a>启动Mycat</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bin/mycat start</span><br><span class="line">bin/mycat stop</span><br><span class="line">bin/mycat status</span><br></pre></td></tr></table></figure>

<p>启动后用mysql链接工具直接连就可以了</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220417203803361.png" alt="image-20220417203803361"></p>
<h3 id="分片测试"><a href="#分片测试" class="headerlink" title="分片测试"></a>分片测试</h3><p>进入mycat ，执行下列语句创建一个表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> TB_TEST (</span><br><span class="line">  id <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  title <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> ,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 ;</span><br></pre></td></tr></table></figure>



<p>我们再查看MySQL的3个库，发现表都自动创建好了</p>
<p>接下来是插入表数据，注意，在写 INSERT 语句时一定要写把字段列表写出来，否则会出现下列错误提示：</p>
<p>错误代码： 1064</p>
<p><code>partition table, insert must provide ColumnList</code></p>
<p>我们试着插入一些数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> TB_TEST(ID,TITLE) <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;goods1&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> TB_TEST(ID,TITLE) <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">&#x27;goods2&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> TB_TEST(ID,TITLE) <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">&#x27;goods3&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>我们会发现这些数据被写入到第一个节点中了，那什么时候数据会写到第二个节点中呢？</p>
<p>我们插入下面的数据就可以插入第二个节点了</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> TB_TEST(ID,TITLE) <span class="keyword">VALUES</span>(<span class="number">5000001</span>,<span class="string">&#x27;goods5000001&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>因为我们采用的分片规则是每节点存储500万条数据，所以当ID大于5000000则会存储到第二个节点上。</p>
<p>目前只设置了两个节点，如果数据大于1000万条，会怎么样呢？执行下列语句测试一下</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> TB_TEST(ID,TITLE) <span class="keyword">VALUES</span>(<span class="number">10000001</span>,<span class="string">&#x27;goods10000001&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="MyCat原理-1"><a href="#MyCat原理-1" class="headerlink" title="MyCat原理"></a>MyCat原理</h3><p>MyCat原理中最重要的一个动词就是 “拦截”, 它拦截了用户发送过来的SQL语句, 首先对SQL语句做一些特定的分析,如分片分析、路由分析、读写分离分析、缓存分析等，然后将此SQL语句发往后端的真实数据库，并将返回的结果做适当处理，最终再返回给用户，如图所示。</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220417204131752.png" alt="image-20220417204131752"></p>
<p>在图中,user表被分为三个分片节点dn1、dn2、dn3, 他们分布式在三个MySQL Server(dataHost)上，因此可以使用1-N台服务器来分片,分片规则(sharding rule)为典型的字符串枚举分片规则, 一个规则的定义是分片字段+分片函数。这里的分片字段为 status，分片函数则为字符串枚举方式。</p>
<p>MyCat收到一条SQL语句时，首先解析SQL语句涉及到的表，接着查看此表的定义，如果该表存在分片规则，则获取SQL语句里分片字段的值，并匹配分片函数，得到该SQL语句对应的分片列表，然后将SQL语句发送到相应的分片去执行，最后处理所有分片返回的数据并返回给客户端。以”select * from user where status=’0’” 为例, 查找 status=’0’ ,按照分片函数, ‘0’ 值存放在dn1,于是SQL语句被发送到第一个节点中执行, 然后再将查询的结果返回给用户。</p>
<p>如果发送的SQL语句为 “select * from user where status in (‘0’,’1’)” , 那么SQL语句会被发送到dn1,dn2对应的主机上执行, 然后将结果集合并后输出给用户。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>mycat相对于shardingjdbc可以单独运行，让开发感觉不到它的存在，可以多数据源之间交互，只需要连mycat一个数据源就行了，也可以加监控<code>Mycat-web</code></p>
<p>Mycat-web 是 Mycat 可视化运维的管理和监控平台，弥补了 Mycat 在监控上的空白。帮 Mycat 分担统计任务和配置管理任务。Mycat-web 引入了 ZooKeeper 作为配置中心，可以管理多个节点。Mycat-web 主要管理和监控 Mycat 的流量、连接、活动线程和内存等，具备 IP 白名单、邮件告警等模块，还可以统计 SQL 并分析慢 SQL 和高频 SQL 等。为优化 SQL 提供依据。</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220417205909579.png" alt="image-20220417205909579"></p>
<p>mycat现在强推mycat2，缺点就是文档还在完善中，不够完全，不过相对于mycat1，在配置方面优化的更加简单容易入手了。 建议从mycat1慢慢学上去</p>
]]></content>
      <tags>
        <tag>分库分表</tag>
        <tag>多数据源</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql创建定时任务</title>
    <url>/2022/04/23/0.1.6mysql%E5%88%9B%E5%BB%BA%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</url>
    <content><![CDATA[<blockquote>
<p>需求：定时删除三个月之前的数据</p>
</blockquote>
<p>1.编写需要执行的sql语句</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## 因为表数据过大（大约2亿数据），需要先查询三个月之前的id节点，增加查询速度</span><br><span class="line">select MAX(id) from other_log_info where DATE_FORMAT(createtime,&#x27;%Y-%m-%d&#x27;) = DATE_SUB(CURDATE(),INTERVAL 3 MONTH);</span><br><span class="line"></span><br><span class="line">## 查询的sql一次不能删除太多数据，防止锁表</span><br><span class="line">select * from other_log_info where id &lt; (select MAX(id) from other_log_info where DATE_FORMAT(createtime,&#x27;%Y-%m-%d&#x27;) = DATE_SUB(CURDATE(),INTERVAL 3 MONTH)) LIMIT 0,1000</span><br><span class="line"></span><br><span class="line">## 由于delete不能直接删除子查询表中的数据，必须用过嵌套一层的方式来解决</span><br><span class="line">## 第二种执行方式，如果对于sql比较熟悉，可以用存储过程的&quot;游标&quot;进行循环</span><br><span class="line">DELETE FROM other_log_info where id in </span><br><span class="line">	(select t2.id from </span><br><span class="line">		(select id from other_log_info where </span><br><span class="line">			id &lt; (select MAX(id) from other_log_info where createtime &lt; DATE_SUB(CURDATE(),INTERVAL 3 MONTH)) LIMIT 0,1000) t2)</span><br></pre></td></tr></table></figure>

<p>游标使用方式：<a href="https://www.cnblogs.com/cbt-home/p/15269736.html">https://www.cnblogs.com/cbt-home/p/15269736.html</a></p>
<ul>
<li>CURDATE() 返回当前日期</li>
<li>CURNOW() 返回当前datetime</li>
<li>INTERVAL 是mysql间隔值，用法为INTERVAL expr unit。INTERVAL 3 DAY表示三天的间隔</li>
<li>DATE_SUB(start_date,INTERVAL expr unit);</li>
</ul>
<p>2.编写存储过程</p>
<p>存储过程相当于mysql的函数，它是存储在数据库服务器中的一组sql语句，通过调用这个函数的名称来执行这些sql语句命令。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 分隔符切换防止“;”直接分隔了</span><br><span class="line">DELIMITER //</span><br><span class="line">-- 创建存储过程</span><br><span class="line">CREATE procedure del_log2()</span><br><span class="line">BEGIN</span><br><span class="line">	SELECT * FROM xxl_job_log WHERE trigger_time &lt; DATE_SUB(CURDATE(),INTERVAL 5 MONTH);</span><br><span class="line">END //</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>DELIMITER是分割符的意思，声明存储过程前将&quot;//&quot;声明为分隔符，这样存储过程中的“;”才不会被当作分隔符处理。声明结束后再还原分隔符。</code></li>
<li>存储过程也可以带参数，存储过程名(参数)</li>
<li>在声明存储过程前要先用use database_name切换到想要应用的数据库，否则存储过程会应用到默认数据库中</li>
</ul>
<p>查看存储过程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- db指的数据库名</span><br><span class="line">select * from mysql.proc where db = &quot;xxl_job&quot;</span><br></pre></td></tr></table></figure>

<p>调用存储过程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">call del_log();</span><br></pre></td></tr></table></figure>

<p>3.编写事件调度器（定时任务）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 确认是否开启事件调度器</span><br><span class="line">SHOW VARIABLES LIKE &#x27;event_scheduler&#x27;;</span><br><span class="line"></span><br><span class="line">-- 开启事件调度器</span><br><span class="line">SET GLOBAL event_scheduler = ON;</span><br></pre></td></tr></table></figure>

<p>创建事件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 创建调度任务(从2022-4-22开始，每天执行一次del_data())</span><br><span class="line">create event del_event  </span><br><span class="line">on schedule </span><br><span class="line">EVERY 1 day  </span><br><span class="line">STARTS &#x27;2022-4-22 00:00:00&#x27; </span><br><span class="line">do call del_data()</span><br></pre></td></tr></table></figure>

<p>查看事件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查看事件</span><br><span class="line">SHOW EVENTS;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/foam077/images/raw/master/img/123.jpg" alt="image-20220422104326667"></p>
<p><img src="https://gitee.com/foam077/images/raw/master/img/34.jpg" alt="image-20220422104354508"></p>
<p><img src="https://gitee.com/foam077/images/raw/master/img/PZ_%7D(YABF6HUB3~ULXWF5R3.png" alt="image-20220422104419241"></p>
]]></content>
      <tags>
        <tag>mysql</tag>
        <tag>定时任务</tag>
      </tags>
  </entry>
  <entry>
    <title>redis锁</title>
    <url>/2022/02/23/0.1.8redis%E9%94%81/</url>
    <content><![CDATA[<p>暂时没时间整细节，给个粗略的记录一下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util.qunar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.service.qunar.FQunarSearchService;</span><br><span class="line"><span class="keyword">import</span> com.service.zl.ValidationCabinAndPrice_QNR;</span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.redisson.Redisson;</span><br><span class="line"><span class="keyword">import</span> org.redisson.api.RLock;</span><br><span class="line"><span class="keyword">import</span> org.redisson.api.RedissonClient;</span><br><span class="line"><span class="keyword">import</span> org.redisson.config.Config;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.InitializingBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedissonTemplate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> RedissonClient redissonClient;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LOCK_TITLE = <span class="string">&quot;QNRLock_&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加锁</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lockName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> waitTime</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeOutSecond</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">acquireSecond</span><span class="params">(String lockName, Integer waitTime, Integer timeOutSecond)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String key = LOCK_TITLE + lockName;</span><br><span class="line">            RLock mylock = redisLock().getLock(key);</span><br><span class="line">            <span class="comment">//lock提供带timeout参数，timeout结束强制解锁，防止死锁</span></span><br><span class="line">            <span class="comment">//先尝试在超时时间内获取锁，如果没有获取到，此时如果等待时间还有剩余进入循环不断取尝试获取锁 直到时间结束退出  循环中是订阅，时间结束取消订阅</span></span><br><span class="line">            <span class="keyword">return</span> mylock.tryLock(waitTime, timeOutSecond, TimeUnit.SECONDS);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            System.out.println(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 连接redis</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> RedissonClient <span class="title">redisLock</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(redissonClient == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (FQunarSearchService.class)&#123;</span><br><span class="line">                <span class="keyword">if</span>(redissonClient == <span class="keyword">null</span>)&#123;</span><br><span class="line">                    Config config = <span class="keyword">new</span> Config();</span><br><span class="line">                    config.useSingleServer().setAddress(<span class="string">&quot;redis://127.0.0.1:6379&quot;</span>)</span><br><span class="line">                            .setPassword(<span class="string">&quot;123&quot;</span>)</span><br><span class="line">                            .setDatabase(<span class="number">17</span>);</span><br><span class="line">                    redissonClient = Redisson.create(config);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> redissonClient;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解锁</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lockName</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(String lockName)</span></span>&#123;</span><br><span class="line">        String key = LOCK_TITLE + lockName;</span><br><span class="line">        RLock mylock = redissonClient.getLock(key);</span><br><span class="line">        mylock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>redis</tag>
        <tag>分布式锁</tag>
      </tags>
  </entry>
  <entry>
    <title>ShardingJDBC简单介绍</title>
    <url>/2022/04/10/0.1.9ShardingJDBC%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h1 id="ShardingJDBC"><a href="#ShardingJDBC" class="headerlink" title="ShardingJDBC"></a>ShardingJDBC</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><blockquote>
<p>ShardingJDBC是当当网研发的开源分布式数据库中间件，从 3.0 开始Sharding-JDBC被包含在 Sharding-Sphere中，之后该项目进入进入Apache孵化器，4.0版本之后的版本为Apache版本。</p>
</blockquote>
<p><strong>ShardingSphere</strong>是一套开源的分布式数据库中间件解决方案组成的生态圈，它由Sharding-JDBC、Sharding-Proxy和Sharding-Sidecar（计划中）这3款相互独立的产品组成。 他们均提供标准化的数据分片、分布式事务和数据库治理功能，可适用于如Java同构、异构语言、容器、云原生等各种多样化的应用场景。</p>
<p>官方地址：<a href="https://shardingsphere.apache.org/document/current/cn/overview/">https://shardingsphere.apache.org/document/current/cn/overview/</a></p>
<p>它定位为轻量级Java框架，在Java的JDBC层提供的额外服务。它使用客户端直连数据库，以jar包形式提供服务，无需额外部署和依赖，可理解为增强版的JDBC驱动，<code>完全兼容JDBC和各种ORM框架</code></p>
<p>在 maven 的工程里面，我们使用它的方式是<strong>引入依赖</strong>，然后<strong>进行配置</strong>就可以了，不用像 <strong>Mycat 一样独立运行一个服务</strong>，<strong>客户端不需要修改任何一行代码</strong>，原来是 SSM 连接数据库，还是 SSM，因为它是支持 MyBatis 的</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>Sharding-JDBC的核心功能为<strong>数据分片</strong>和<strong>读写分离</strong>，通过Sharding-JDBC，应用可以<strong>透明</strong>的使用jdbc访问已经分库分表、读写分离的多个数据源，而不用关心数据源的数量以及数据如何分布。 </p>
<ul>
<li>适用于任何基于Java的ORM框架，如：Hibernate, Mybatis, Spring JDBC Template或直接使用JDBC</li>
<li>基于任何第三方的数据库连接池，如：DBCP, C3P0, BoneCP, Druid, HikariCP等</li>
<li>支持任意实现JDBC规范的数据库。目前支持MySQL，Oracle，SQLServer和PostgreSQL</li>
</ul>
<p>分库分表的一些<strong>核心动作</strong>，比如 <strong>SQL 解析，路由，执行，结果处理</strong>，都是由它来完成的</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/IY%7B9E$35GLDFQ5]7VJZI(%7BA.png" alt="img"></p>
<p>上图展示了Sharding-Jdbc的工作方式，使用Sharding-Jdbc前需要人工对数据库进行分库分表</p>
<p>在应用程序中加入Sharding-Jdbc的Jar包，应用程序通过Sharding-Jdbc操作分库分表后的数据库和数据表，由于Sharding-Jdbc是对Jdbc驱动的增强，使用Sharding-Jdbc就像使用Jdbc驱动一样，在应用程序中是无需指定具体要操作的分库和分表的</p>
<p>主要概念：<strong>逻辑表会在 SQL 解析和路由时被替换成真实的表名</strong></p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/B0X]87($BB5AMRQ%VL3BI6L.png" alt="img"></p>
<h2 id="性能对比"><a href="#性能对比" class="headerlink" title="性能对比"></a>性能对比</h2><p>以下为网上统计数据</p>
<p>1.性能损耗测试：服务器资源充足、并发数相同，比较JDBC和Sharding-JDBC性能损耗，Sharding-JDBC相对JDBC损耗不超过7%</p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image-20220410220914283.png" alt="image-20220410220914283"></p>
<p>2.性能对比测试：服务器资源使用到极限，相同的场景JDBC与Sharding-JDBC的吞吐量相当</p>
<p>3.性能对比测试：服务器资源使用到极限，Sharding-JDBC采用分库分表后，Sharding-JDBC吞吐量较JDBC不分表有接近2倍的提升。 </p>
<p><img src="https://img-blog.csdnimg.cn/556f9c997706494b8b72c118c3d882cd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5pe25YWJXzEwMjQ=,size_20,color_FFFFFF,t_70,g_se,x_16"></p>
<h2 id="ShardingJDBC引入"><a href="#ShardingJDBC引入" class="headerlink" title="ShardingJDBC引入"></a>ShardingJDBC引入</h2><p>1.引入boot的依赖整合包</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shardingsphere<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sharding‐jdbc‐spring‐boot‐starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.0‐RC1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.创建数据库和表</p>
<ul>
<li><p>创建订单库order_db </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `order_db` <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="string">&#x27;utf8&#x27;</span> <span class="keyword">COLLATE</span> <span class="string">&#x27;utf8_general_ci&#x27;</span>;</span><br></pre></td></tr></table></figure></li>
<li><p>在order_db中创建t_order_1、t_order_2表 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `t_order_1`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t_order_1`(</span><br><span class="line">    `order_id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单id&#x27;</span>,</span><br><span class="line">    `price` <span class="type">decimal</span>(<span class="number">10</span>, <span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单价格&#x27;</span>,</span><br><span class="line">    `user_id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;下单用户id&#x27;</span>,</span><br><span class="line">    `status` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单状态&#x27;</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (`order_id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">)ENGINE <span class="operator">=</span> InnoDB <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_general_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `t_order_2`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t_order_2` (</span><br><span class="line">    `order_id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单id&#x27;</span>,</span><br><span class="line">    `price` <span class="type">decimal</span>(<span class="number">10</span>, <span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单价格&#x27;</span>,</span><br><span class="line">    `user_id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;下单用户id&#x27;</span>,</span><br><span class="line">    `status` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单状态&#x27;</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (`order_id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">)ENGINE <span class="operator">=</span> InnoDB <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_general_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br></pre></td></tr></table></figure></li>
</ul>
<p>3.application.properties配置规则</p>
<ul>
<li><p>定义数据源</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义数据源m1，并对m1进行实际的参数配置</span></span><br><span class="line"><span class="meta">spring.shardingsphere.datasource.names</span>=<span class="string">m1</span></span><br><span class="line"><span class="meta">spring.shardingsphere.datasource.m1.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSoure</span></span><br><span class="line"><span class="meta">spring.shardingsphere.datasource.m1.driver‐class‐name</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">spring.shardingsphere.datasource.m1.url</span>=<span class="string">jdbc:mysql://localhost:3306/order_db?useUnicode=true</span></span><br><span class="line"><span class="meta">spring.shardingsphere.datasource.m1.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.shardingsphere.datasource.m1.password</span>=<span class="string">root</span></span><br></pre></td></tr></table></figure></li>
<li><p>配置数据节点</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定t_order表的数据分布情况，配置数据节点</span></span><br><span class="line"><span class="comment"># 他分布在m1.t_order_1，m1.t_order_2</span></span><br><span class="line"><span class="meta">spring.shardingsphere.sharding.tables.t_order.actual‐data‐nodes</span>=<span class="string">m1.t_order_$‐&gt;&#123;1..2&#125;</span></span><br></pre></td></tr></table></figure></li>
<li><p>配置主键策略</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定t_order表的主键生成策略为SNOWFLAKE,SNOWFLAKE是一种分布式自增算法，保证id全局唯一</span></span><br><span class="line"><span class="meta">spring.shardingsphere.sharding.tables.t_order.key‐generator.column</span>=<span class="string">order_id</span></span><br><span class="line"><span class="meta">spring.shardingsphere.sharding.tables.t_order.key‐generator.type</span>=<span class="string">SNOWFLAKE</span></span><br></pre></td></tr></table></figure></li>
<li><p>配置分片算法</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定t_order表的分片策略，分片策略包括分片键和分片算法</span></span><br><span class="line"><span class="comment"># order_id为偶数的数据落在t_order_1，为奇数的落在t_order_2，分表策略的表达式为 t_order_$-&gt;&#123;order_id % 2 + 1&#125;</span></span><br><span class="line"><span class="meta">spring.shardingsphere.sharding.tables.t_order.table‐strategy.inline.sharding‐column</span>=<span class="string">order_id</span></span><br><span class="line"><span class="meta">spring.shardingsphere.sharding.tables.t_order.table‐strategy.inline.algorithm‐expression</span>=<span class="string">t_order_$‐&gt;&#123;order_id % 2 + 1&#125;</span></span><br></pre></td></tr></table></figure></li>
<li><p>日志输出sql</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">spring.shardingsphere.props.sql.show</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure></li>
</ul>
<p>4.数据操作</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*** 新增订单 </span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> price 订单价格 </span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> userId 用户id </span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> status 订单状态 </span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Insert(&quot;insert into t_order(price,user_id,status) value(#&#123;price&#125;,#&#123;userId&#125;,#&#123;status&#125;)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insertOrder</span><span class="params">(<span class="meta">@Param(&quot;price&quot;)</span> BigDecimal price, <span class="meta">@Param(&quot;userId&quot;)</span>Long userId, <span class="meta">@Param(&quot;status&quot;)</span>String status)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*** 根据id列表查询多个订单</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> orderIds 订单id列表 </span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">    */</span> </span><br><span class="line">    <span class="meta">@Select(&#123;&quot;&lt;script&gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot;select &quot; +</span></span><br><span class="line"><span class="meta">        &quot; * &quot; +</span></span><br><span class="line"><span class="meta">        &quot; from t_order t&quot; +</span></span><br><span class="line"><span class="meta">        &quot; where t.order_id in &quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;foreach collection=&#x27;orderIds&#x27; item=&#x27;id&#x27; open=&#x27;(&#x27; separator=&#x27;,&#x27; close=&#x27;)&#x27;&gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot; #&#123;id&#125; &quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;/foreach&gt;&quot;+</span></span><br><span class="line"><span class="meta">        &quot;&lt;/script&gt;&quot;&#125;)</span></span><br><span class="line">    <span class="function">List&lt;Map&gt; <span class="title">selectOrderbyIds</span><span class="params">(<span class="meta">@Param(&quot;orderIds&quot;)</span>List&lt;Long&gt; orderIds)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>5.测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsertUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ; i&lt;<span class="number">10</span>; i++)&#123;</span><br><span class="line">        Long id = i + <span class="number">1L</span>;</span><br><span class="line">        userDao.insertUser(id,<span class="string">&quot;姓名&quot;</span>+ id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectUserbyIds</span><span class="params">()</span></span>&#123;</span><br><span class="line">    List&lt;Long&gt; userIds = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    userIds.add(<span class="number">1L</span>);</span><br><span class="line">    userIds.add(<span class="number">2L</span>);</span><br><span class="line">    List&lt;Map&gt; users = userDao.selectUserbyIds(userIds);</span><br><span class="line">    System.out.println(users);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>Sharding-JDBC执行流程：<code>SQL解析 =&gt; 查询优化 =&gt; SQL路由 =&gt; SQL改写 =&gt; SQL执行 =&gt; 结果归并</code></p>
<p>系统在设计之初就应该对业务数据的耦合松紧进行考量，从而进行垂直分库、垂直分表，使数据层架构清晰明了。 </p>
<p>若非必要，无需进行水平切分，应先从缓存技术着手降低对数据库的访问压力。如果缓存使用过后，数据库访问量还是非常大，可以考虑数据库读、写分离原则。若当前数据库压力依然大，且业务数据持续增长无法估量，最后可考虑水平分库、分表，单表拆分数据控制在1000万以内。 </p>
<p>注意：并不是所有的sql语句都能支持执行</p>
<p>详细参考：<a href="https://shardingsphere.apache.org/document/current/cn/features/sharding/use-norms/sql/">https://shardingsphere.apache.org/document/current/cn/features/sharding/use-norms/sql/</a></p>
]]></content>
      <tags>
        <tag>分库分表</tag>
        <tag>多数据源</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA内存调优</title>
    <url>/2022/05/06/0.2.0IDEA%E5%86%85%E5%AD%98%E8%B0%83%E4%BC%98/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/c18092694487t/article/details/116915386?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_antiscanv2&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_antiscanv2&utm_relevant_index=1">idea2020无法启动报错初始堆值大于最大堆值_寒烟雾柳的博客-CSDN博客</a></p>
<p>调整内存的时候一定Xms2048m不能大于Xmx4096m【否则idea启动不起来】</p>
<p>xmx建议设置为（总内存的3/4 ÷ 你要开的idea个数），这样才不会卡</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">-Xms1024m</span><br><span class="line">-Xmx8192m</span><br><span class="line">-XX:MaxPermSize=2048m</span><br><span class="line">-XX:ReservedCodeCacheSize=256m</span><br><span class="line">-ea</span><br><span class="line">-Dsun.io.useCanonCaches=false</span><br><span class="line">-Dsun.awt.keepWorkingSetOnMinimize=true</span><br><span class="line">-Djava.net.preferIPv4Stack=true</span><br><span class="line">#-Djsse.enableSNIExtension=false</span><br><span class="line">-XX:+UseCodeCacheFlushing</span><br><span class="line">-XX:+UseConcMarkSweepGC</span><br><span class="line">-XX:SoftRefLRUPolicyMSPerMB=50</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>RedisTemplate统一集成</title>
    <url>/2022/05/06/0.2.1RedisTemplate%E7%BB%9F%E4%B8%80%E9%9B%86%E6%88%90/</url>
    <content><![CDATA[<h2 id="1-配置redis-config"><a href="#1-配置redis-config" class="headerlink" title="1.配置redis-config"></a>1.配置redis-config</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Jedis 连接池配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jedisPoolConfig&quot;</span> <span class="attr">class</span>=<span class="string">&quot;redis.clients.jedis.JedisPoolConfig&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redis.maxIdle&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minEvictableIdleTimeMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redis.minEvictableIdleTimeMillis&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;numTestsPerEvictionRun&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redis.numTestsPerEvictionRun&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;timeBetweenEvictionRunsMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redis.timeBetweenEvictionRunsMillis&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;stringRedisSerializer&quot;</span>  <span class="attr">class</span>=<span class="string">&quot;org.springframework.data.redis.serializer.StringRedisSerializer&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jdkRedisSerializer&quot;</span>  <span class="attr">class</span>=<span class="string">&quot;org.springframework.data.redis.serializer.JdkSerializationRedisSerializer&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jedisConnectionZero&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.data.redis.connection.jedis.JedisConnectionFactory&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;destroy&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;poolConfig&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;jedisPoolConfig&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hostName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redisst.hostName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;port&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redisst.port&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;timeout&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redisst.timeout&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;usePool&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redisst.usePool&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redisst.password&#125;&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;database&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redisst.db0&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;redisTemplateZero&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.data.redis.core.RedisTemplate&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;connectionFactory&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;jedisConnectionZero&quot;</span> /&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;keySerializer&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;stringRedisSerializer&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hashKeySerializer&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;jdkRedisSerializer&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;valueSerializer&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;jdkRedisSerializer&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-定义枚举"><a href="#2-定义枚举" class="headerlink" title="2.定义枚举"></a>2.定义枚举</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">CommonRedisEnums</span> </span>&#123;</span><br><span class="line">    O_DB_0(<span class="string">&quot;redisTemplateZero&quot;</span>,<span class="string">&quot;ODB0&quot;</span>);</span><br><span class="line">    <span class="comment">// 对应redis-config中的bean名称</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">// 别名</span></span><br><span class="line">    <span class="keyword">private</span> String asName;</span><br><span class="line"></span><br><span class="line">    CommonRedisEnums(String name, String asName) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.asName = asName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAsName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> asName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-使用SpringAppContextHolder获取bean"><a href="#3-使用SpringAppContextHolder获取bean" class="headerlink" title="3.使用SpringAppContextHolder获取bean"></a>3.使用SpringAppContextHolder获取bean</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String,RedisTemplate&gt; redisTemplateMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getRedis</span><span class="params">(CommonRedisEnums enums)</span></span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(!redisTemplateMap.containsKey(enums.getName()))&#123;</span><br><span class="line">      RedisTemplate redisBean = (RedisTemplate) SpringAppContextHolder</span><br><span class="line">            .getBean(enums.getName());</span><br><span class="line">      <span class="keyword">if</span>(redisBean != <span class="keyword">null</span>)&#123;</span><br><span class="line">         redisTemplateMap.put(enums.getName(),redisBean);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-使用工具类进行调用"><a href="#4-使用工具类进行调用" class="headerlink" title="4.使用工具类进行调用"></a>4.使用工具类进行调用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 搜索</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <span class="title">searchKeys</span><span class="params">(List&lt;String&gt; keys,CommonRedisEnums enums)</span></span>&#123;</span><br><span class="line">   getRedis(enums);</span><br><span class="line">   <span class="keyword">return</span> batchQueryByKeys(keys, <span class="keyword">false</span>,redisTemplateMap.get(enums.getName()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <span class="title">batchQueryByKeys</span><span class="params">(<span class="keyword">final</span> List&lt;String&gt; keys, Boolean useParallel, <span class="keyword">final</span> RedisTemplate redisTemplate)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">null</span> == keys || keys.size() == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">null</span> == useParallel) &#123;</span><br><span class="line">      useParallel = <span class="keyword">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   Object object = redisTemplate.execute(<span class="keyword">new</span> RedisCallback&lt;Object&gt;() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> Object <span class="title">doInRedis</span><span class="params">(RedisConnection connection)</span> <span class="keyword">throws</span> DataAccessException </span>&#123;</span><br><span class="line">         connection.openPipeline();</span><br><span class="line">         <span class="keyword">for</span> (String key : keys) &#123;</span><br><span class="line">            <span class="keyword">byte</span>[] bkey = redisTemplate.getStringSerializer().serialize(key);</span><br><span class="line">            redisTemplate.getStringSerializer().serialize(JSON.toJSONString(connection.get(bkey)));</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">return</span> connection.closePipeline();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;);</span><br><span class="line">   List&lt;Object&gt; results = <span class="keyword">null</span>;</span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">null</span> == object) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      results = (List) object;</span><br><span class="line">   &#125;</span><br><span class="line">   Map&lt;String, Object&gt; resultMap = <span class="keyword">null</span>;</span><br><span class="line">   <span class="keyword">if</span> (useParallel) &#123;</span><br><span class="line">      Map&lt;String, Object&gt; resultMapOne = Collections.synchronizedMap(<span class="keyword">new</span> HashMap&lt;String, Object&gt;());</span><br><span class="line">      <span class="keyword">for</span> (String t : keys) &#123;</span><br><span class="line">         resultMapOne.put(t, results.get(keys.indexOf(t)));</span><br><span class="line">      &#125;</span><br><span class="line">      resultMap = resultMapOne;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      Map&lt;String, Object&gt; resultMapTwo = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">      <span class="keyword">for</span> (String t : keys) &#123;</span><br><span class="line">         Object o = results.get(keys.indexOf(t));</span><br><span class="line">         <span class="keyword">if</span> (<span class="keyword">null</span> != o) &#123;</span><br><span class="line">            String val = (String) redisTemplate.getStringSerializer().deserialize((<span class="keyword">byte</span>[]) o);</span><br><span class="line">            resultMapTwo.put(t, val);</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      resultMap = resultMapTwo;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> resultMap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>使用@Autowired的时候，对于static标识的变量或者方法一般是获取到的null值常规的方法已经使用不了</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> NewRedisZeroService redisZeroService;</span><br></pre></td></tr></table></figure>

<p>需要使用注入方法的形式来使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> ZXSearchNewService_new zxSearchNewService_new;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> QueueProducerService messageService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">zxSearch</span><span class="params">(QueueProducerService queueProducerService,ZXSearchNewService_new zxSearchNewService_new)</span> </span>&#123;</span><br><span class="line">    zxSearch.zxSearchNewService_new = zxSearchNewService_new;</span><br><span class="line">    zxSearch.messageService = queueProducerService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这样就可以在工具类中使用了，不需要通过传参的形式去获取</p>
]]></content>
      <tags>
        <tag>工具类</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA插件</title>
    <url>/2022/05/09/0.2.2IDEA%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="插件官网"><a href="#插件官网" class="headerlink" title="插件官网"></a>插件官网</h2><p><a href="https://plugins.jetbrains.com/">JetBrains Marketplace</a></p>
<h2 id="Alibaba-Java-Coding-Guidelines"><a href="#Alibaba-Java-Coding-Guidelines" class="headerlink" title="Alibaba Java Coding Guidelines"></a>Alibaba Java Coding Guidelines</h2><p>首先要推荐的是和《手册》配套的 <a href="https://link.zhihu.com/?target=https://plugins.jetbrains.com/plugin/10046-alibaba-java-coding-guidelines">阿里巴巴 Java代码规范</a>插件。<br>安装该插件后，代码超过 80 行、手动创建线程池等，这些和《手册》中的规约不符时，IDEA中会给出警告提示。</p>
<h2 id="jclasslib-bytecode-viewer"><a href="#jclasslib-bytecode-viewer" class="headerlink" title="jclasslib bytecode viewer"></a>jclasslib bytecode viewer</h2><p>下面要隆重介绍的是一款可视化的字节码查看插件：<a href="https://link.zhihu.com/?target=https://plugins.jetbrains.com/plugin/9248-jclasslib-bytecode-viewer">jclasslib</a><br>大家可以直接在 IDEA 插件管理中安装（安装步骤略）<br><strong>使用方法：</strong></p>
<ol>
<li>在 IDEA 打开想研究的类</li>
<li>编译该类或者直接编译整个项目（ 如果想研究的类在 jar 包中，此步可略过）</li>
<li>打开“view” 菜单，选择“Show Bytecode With jclasslib” 选项</li>
<li>选择上述菜单项后 IDEA 中会弹出 jclasslib 工具窗口<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/8e553cce-1641-4005-a6ff-6a3d37b0ac09.jpg" alt="img"><br>那么有自带的强大的反汇编工具 javap 还有必要用这个插件吗？<br>这个插件的强大之处在于：</li>
<li>不需要敲命令，简单直接，在右侧方便和源代码进行对比学习。</li>
<li>字节码命令支持超链接，点击其中的虚拟机指令即可跳转到 jvms 相关章节，超级方便。<br>该插件对我们学习虚拟机指令有极大的帮助。<br>详细安装和介绍参考另外一篇手记：<a href="https://www.imooc.com/article/29625">https://www.imooc.com/article/29625</a></li>
</ol>
<h2 id="Codota"><a href="#Codota" class="headerlink" title="Codota"></a>Codota</h2><p>另外一个不得不说的就是专栏中提到的辅助开发神器: <a href="https://link.zhihu.com/?target=https://www.codota.com/code">Codota</a><br>可以点击下图所示“Add Codota to you IDEA” 了解安装步骤<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/7916b83c-b22f-4cc4-87c1-e6baf8dd31d3.png" alt="img"><br>该插件的强大之处在于：</p>
<ol>
<li>支持智能代码自动提示，该功能可以增强 IDEA 的代码提示功能。</li>
<li>支持 JDK 和知名第三方库的函数的使用方法搜索，可以看到其他知名开源项目对该函数的用法<br>当我们第一次使用某个类，对某个函数不够熟悉时，可以通过该插件搜索相关用法，快速模仿学习<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/8351c384-572e-4e28-9c8b-22249fd90af2.jpg" alt="img"><br>如上图所示，我们想了解 Stream 类中 flatMap 函数的用法，可以使用该插件查看知名开源项目的用法<br>插件窗口顶部还给出了该类最常用的函数，可以点击查看相关用法案例，每个案例右侧的 “view source”可以跳转到该片段对应的开源项目的源码中</li>
</ol>
<h2 id="Auto-filling-Java-call-arguments"><a href="#Auto-filling-Java-call-arguments" class="headerlink" title="Auto filling Java call arguments"></a>Auto filling Java call arguments</h2><p>开发中，我们通常会调用其他已经编写好的函数，调用后需要填充参数，但是绝大多数情况下，传入的变量名称和该函数的参数名一致，当参数较多时，手动单个填充参数非常浪费时间<br>该插件就可以帮你解决这个问题<br>安装完该插件以后，调用一个函数，使用 Alt+Enter 组合键，调出 “Auto fill call parameters” 自动使用该函数定义的参数名填充</p>
<h2 id="GenerateO2O、GenerateAllSetter"><a href="#GenerateO2O、GenerateAllSetter" class="headerlink" title="GenerateO2O、GenerateAllSetter"></a>GenerateO2O、GenerateAllSetter</h2><p>我们定义好从 A 类转换到 B 类的函数转换函数后，使用这两个插件可以自动调用 Getter 和 Setter 函数实行自动转换<br>实际开发中还有一个非常常见的场景： 我们创建一个对象后，想依次调用 Setter 函数对属性赋值，如果属性较多很容易遗漏或者重复<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/c66fd122-cab4-47cc-b961-c135cd4959a4.jpg" alt="img"><br>可以使用这 GenerateAllSetter 提供的功能，自动调用所有 Setter 函数（可填充默认值），然后自己再跟进实际需求设置属性值</p>
<h2 id="Rainbow-Brackets"><a href="#Rainbow-Brackets" class="headerlink" title="Rainbow Brackets"></a>Rainbow Brackets</h2><p>由于很多人没有养成好的编码风格，没有随手 format 代码的习惯，甚至有些同事会写代码超过几百行，阅读起来将非常痛苦<br>痛苦的原因之一就是找到上下文，由于括号太多，不确定当前代码行是否属于某个代码块，此时这个插件就会帮上大忙<br>插件 github 地址：<a href="https://github.com/izhangzhihao/intellij-rainbow-brackets">https://github.com/izhangzhihao/intellij-rainbow-brackets</a><br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/fb0eecd3-58fb-4c94-983b-0c857429b1af.jpg" alt="img"><br>大家可以观看其 github 首页的动图体会和学习其强大功能</p>
<h2 id="Maven-Helper"><a href="#Maven-Helper" class="headerlink" title="Maven Helper"></a>Maven Helper</h2><p>现在 Java 项目通常会使用 maven 或者 gradle 构建，对于maven 项目来说， jar 包冲突非常常见<br>那么如何更容易地查看和解决 jar 包冲突呢？<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/6d4402db-659a-46a5-a3c5-2eca8e2d8fef.jpg" alt="img"><br>大家可以安装该插件，安装后 IDEA 中打开 pom.xml 文件时，就会多出一个 “Dependency Analyzer” 选项卡<br>如上图所示，该插件支持值插件冲突的 jar 包，可以选择冲突的 jar 包将其 exclude 掉</p>
<h2 id="FindBugs"><a href="#FindBugs" class="headerlink" title="FindBugs"></a>FindBugs</h2><p>程序员总是想尽可能地避免写 BUG， <a href="https://link.zhihu.com/?target=https://plugins.jetbrains.com/plugin/3847-findbugs-idea">FindBugs</a> 作为静态代码检查插件，可以检查你代码中的隐患，并给出原因。<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/7a194699-57ed-4fa2-90dc-0ea77f6387aa.jpg" alt="img"><br>当然还有很多类似的静态代码检查插件，大家可以自行了解安装</p>
<h2 id="SequenceDiagram"><a href="#SequenceDiagram" class="headerlink" title="SequenceDiagram"></a>SequenceDiagram</h2><p><a href="https://link.zhihu.com/?target=https://plugins.jetbrains.com/plugin/8286-sequencediagram/">SequenceDiagram</a> 可以根据代码调用链路自动生成时序图，超级赞，超级推荐！<br>这对研究源码，梳理工作中的业务代码有极大的帮助，堪称神器。<br>安装完成后，在某个类的某个函数中，右键 –Sequence Diagaram 即可调出。<br>如下图是 Netty 的源码，可以通过该插件绘制出当前函数的调用链路。<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/9fcf9f6f-fca3-4e84-bde3-4fcae1d094cc.jpg" alt="img"><br>双击顶部的类名可以跳转到对应类的源码中，双击调用的函数名可以直接调入某个函数的源码，总之非常强大。</p>
<h2 id="Java-Stream-Debugger"><a href="#Java-Stream-Debugger" class="headerlink" title="Java Stream Debugger"></a>Java Stream Debugger</h2><p>Stream 非常好用，可以灵活对数据进行操作，但是对很多刚接触的人来说，不好理解。<br>那么 <a href="https://link.zhihu.com/?target=https://plugins.jetbrains.com/plugin/9696-java-stream-debugger/">Java Stream Debugger</a> 这款神器的 IDEA 就可以帮到你。它可以将 Stream 的操作步骤可视化，非常有助于我们的学习。<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/8ca3318a-0e7c-41a5-aeca-9fdd2f22fe64.png" alt="img"><br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/65dd07a0-1d0e-44e7-aa53-6d5214f41b67.png" alt="img"></p>
<h2 id="Key-promoter-X"><a href="#Key-promoter-X" class="headerlink" title="Key promoter X"></a>Key promoter X</h2><p>很多人不愿意切换 IDE 就是因为快捷键的习惯问题。刚好这个插件可以提醒快捷键，有代入感，提醒的多了你就会了。对于新手建议安装熟悉一下快捷键。<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/9c228208-bfc5-4266-9237-e6667719476d.gif" alt="img"></p>
<h2 id="IDEA-Mind-Map"><a href="#IDEA-Mind-Map" class="headerlink" title="IDEA Mind Map"></a>IDEA Mind Map</h2><p>思维导图对于我们需求分析和知识库关系梳理十分重要。有了这个插件以后 IDEA 也可以画思维导图了。而且功能还十分强大，贴图啥的应有尽有<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/fdeb2a29-dadd-46a8-8470-9dcaed28f538.jpg" alt="img"></p>
<h2 id="CodeGlance"><a href="#CodeGlance" class="headerlink" title="CodeGlance"></a>CodeGlance</h2><p>代码编辑区迷你缩放插件，可以进行代码的全局预览。来看看效果吧<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/8201434c-1af4-4541-814d-3319272e9dce.jpg" alt="img"></p>
<h2 id="CamelCase"><a href="#CamelCase" class="headerlink" title="CamelCase"></a>CamelCase</h2><p>命名风格转换插件，可以在 kebab-case，SNAKE_CASE，PascalCase，camelCase，snake_case 和 空格风格之间切换。快捷键苹果为 ⇧+⌥+ U ，windows 下为 Shift + Alt +U<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/fc0c56ed-3faa-4561-a62a-79972d781f99.jpg" alt="img"></p>
<h2 id="MybatisX"><a href="#MybatisX" class="headerlink" title="MybatisX"></a>MybatisX</h2><p>Mybatis-plus 团队为 Mybatis 开发的插件，提供了 Mapper 接口和 XML之间的跳转和自动生成模版的功能<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/049c45ce-b90f-4dd7-9a93-66ac59bba065.jpg" alt="img"></p>
<h2 id="MyBatis-Log-Plugin"><a href="#MyBatis-Log-Plugin" class="headerlink" title="MyBatis Log Plugin"></a>MyBatis Log Plugin</h2><p>另一款国人关于 Mybatis 的作品，评分也很高，作用是将 Mybatis 生成的 sql 还原为原始整个 sql。方便在开发中从日志中跟踪调试 sql语句<br><a href="https://vdn.vzuu.com/SD/04205f24-23a2-11eb-a602-d6a043673cc5.mp4?disable_local_cache=1&amp;bu=078babd7&amp;c=avc.0.0&amp;f=mp4&amp;expiration=1652064414&amp;auth_key=1652064414-0-0-ed4dc28442589dc4e9e6703457fc9811&amp;v=ali&amp;pu=078babd7">https://vdn.vzuu.com/SD/04205f24-23a2-11eb-a602-d6a043673cc5.mp4?disable_local_cache=1&amp;bu=078babd7&amp;c=avc.0.0&amp;f=mp4&amp;expiration=1652064414&amp;auth_key=1652064414-0-0-ed4dc28442589dc4e9e6703457fc9811&amp;v=ali&amp;pu=078babd7</a></p>
<h2 id="Git-Commit-Template"><a href="#Git-Commit-Template" class="headerlink" title="Git Commit Template"></a>Git Commit Template</h2><p>老是有人吐槽你提交的 Git 不规范？你可以试试这个插件。它提供了很好的 Git 格式化模版，你可以按照实际情况格式化你的提交信息<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/4dec18c9-6b03-433c-a1e1-3c89624e4e9f.jpg" alt="img"></p>
<h2 id="Fast-Request"><a href="#Fast-Request" class="headerlink" title="Fast Request"></a>Fast Request</h2><p>Fast Request是一个基于springmvc的帮助你快速生成url和参数的插件,同时也是一个http client工具,调试API的时候只需要点击生成图标即可在工具窗口生成方法的url以及对应的参数，再点击发送请求按钮即可完成api调试，非常实用，相比于 Http client和restfultool，该插件拥有postman一样的界面和参数生成功能，域名管理功能，自定义参数解析功能，功能更加强大全面<br>【缺点】收费<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/b2cdd37b-7b10-468b-a35d-68489cda7605.png" alt="img"></p>
<h2 id="Easy-Javadoc"><a href="#Easy-Javadoc" class="headerlink" title="Easy Javadoc"></a>Easy Javadoc</h2><p>快速生成javadoc文档，点击快捷键生成方法或类或属性的javadoc，同时支持各种渠道的翻译(建议不要用有道翻译，不准)<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/d11428a5-ae8e-46a1-963b-5b84466de68c.png" alt="img"></p>
<h2 id="MybatisCodeHelperPro"><a href="#MybatisCodeHelperPro" class="headerlink" title="MybatisCodeHelperPro"></a>MybatisCodeHelperPro</h2><p>最好的Mybatis代码提示，完整支持Mybatis动态sql代码提示，代码检测，写sql几乎所有地方都有代码提示，支持基于方法名动态生成sql，生成基础实体类及mapper，功能非常强大<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/ac025a3e-6f41-45d5-b9a5-0aad8b58c91d.png" alt="img"><br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/c7d441d0-5520-4439-a385-ec72cd94b848.png" alt="img"></p>
<h2 id="Translation"><a href="#Translation" class="headerlink" title="Translation"></a>Translation</h2><p>对于英文不好的开发者来说，这款插件就是神器，在看各种框架源码的时候十分有用; 选择右键就可以翻译，对于方法或者类上面的注释，只要按下F1就自动被翻译成中文<br>(建议自定义快捷键)<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/9d5f6612-6196-467f-9e20-90a91ecdf4ad.png" alt="img"></p>
<h2 id="Jrebel"><a href="#Jrebel" class="headerlink" title="Jrebel"></a>Jrebel</h2><p>老牌插件了，支持热启动，修改一些代码不再需要重启应用，大大减小项目重启带来的时间浪费，同时也支持远程启动调试<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/14cc8906-e2a1-40e8-8a07-b22d04b267e9.png" alt="img"></p>
<h2 id="ignore"><a href="#ignore" class="headerlink" title=".ignore"></a>.ignore</h2><p>.ignore是IDEA的一款专用忽略文件的插件<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/73ede4ce-3971-4c68-abf7-1deefeb78152.png" alt="img"></p>
<h2 id="google-java-format"><a href="#google-java-format" class="headerlink" title="google-java-format"></a>google-java-format</h2><p>google-java-format插件可以帮助我们不通过对应的快捷键就可以实现特定方式下自动格式化代码</p>
<h2 id="Leetcode-Editor"><a href="#Leetcode-Editor" class="headerlink" title="Leetcode Editor"></a>Leetcode Editor</h2><p>LeetCode插件，可以在IDEA中在线刷题。上班摸鱼属实方便，表面上我在干活，实际上我在刷算法题<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/7f7c5086-3d6a-4794-941e-b77d02a8a01c.png" alt="img"></p>
<h2 id="Json-Parser"><a href="#Json-Parser" class="headerlink" title="Json Parser"></a>Json Parser</h2><p>厌倦了打开浏览器格式化和验证JSON?为什么不安装JSON解析器并在IDE中使用离线支持呢?JSON解析器是一个用于验证和格式化JSON字符串的轻量级插件<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/11aa823f-4418-4d35-aeb9-c561d32ef62f.png" alt="img"></p>
]]></content>
      <tags>
        <tag>idea</tag>
        <tag>插件</tag>
      </tags>
  </entry>
  <entry>
    <title>redis存储Data truncation: Incorrect datetime value</title>
    <url>/2022/03/07/0.1.7redis%E5%AD%98%E5%82%A8Data-truncation-Incorrect-datetime-value/</url>
    <content><![CDATA[<p>最近在编写项目时，用redis存储结果一直报转换异常<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/f0a78853cfed40ad8b8a8b35800a7f52.png" alt="在这里插入图片描述"><br>对此我有了以下思路<br>1.在mysql进行格式转换<br>2.在java先转换<br>3.存json之前就进行格式转换</p>
<p>但是以上方法都不行，因为数据需要的是date类型，如果走转换又过慢<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/374ed7336a77406f90aa8dc2ea8b4530.png" alt="在这里插入图片描述"><br>有大佬提了一下使用序列化解决，我就尝试了一下，还真可以,以下是我编写思路<br>1.首先需要序列化的类继承Serializable接口<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/aeb43a6c0aef4058802e25afc80b6253.png" alt="在这里插入图片描述"><br>2.编写序列化工具类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tiantai.policy.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SerializeUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 序列化</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] serialize(Object object) &#123;</span><br><span class="line"></span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">null</span>;</span><br><span class="line">        ByteArrayOutputStream baos = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">            oos = <span class="keyword">new</span> ObjectOutputStream(baos);</span><br><span class="line">            oos.writeObject(object);</span><br><span class="line">            bytes = baos.toByteArray();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;序列化失败&quot;</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bytes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 反序列化</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">deserialize</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line"></span><br><span class="line">        ByteArrayInputStream bais = <span class="keyword">null</span>;</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            bais = <span class="keyword">new</span> ByteArrayInputStream(bytes);</span><br><span class="line">            ois = <span class="keyword">new</span> ObjectInputStream(bais);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;反序列化失败&quot;</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ois.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3.使用序列化存储</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">HashMap&lt;Integer , Object&gt; objectObjectHashMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">                                objectObjectHashMap.put(airChannelEnum.getType(), SerializeUtil.serialize(selectPage));</span><br><span class="line">                                redisTemplate.opsForList().leftPush(<span class="string">&quot;error&quot;</span>,gson.toJson(objectObjectHashMap));</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/cb7066c9f316480a85b9e0864992880e.png" alt="在这里插入图片描述"><br>4.反序列化读取<br><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/a2bbe2c6ba594e29a77afa1c7016881b.png" alt="在这里插入图片描述"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Page deserialize = (Page)SerializeUtil.deserialize(entry.getValue());</span><br></pre></td></tr></table></figure>
<p>第一个红框是我用gson进行json转换<br>第二个红框是序列化后强转为原对象</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>redis</tag>
        <tag>bug</tag>
      </tags>
  </entry>
  <entry>
    <title>实时问题解决</title>
    <url>/2022/05/28/0.2.5-%E5%AE%9E%E6%97%B6%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<h1 id="实战bug解决"><a href="#实战bug解决" class="headerlink" title="实战bug解决"></a>实战bug解决</h1><h2 id="1-mybatisplus导致url无法访问"><a href="#1-mybatisplus导致url无法访问" class="headerlink" title="1.mybatisplus导致url无法访问"></a>1.mybatisplus导致url无法访问</h2><p>原因：因为在application配置了componentScan去扫描了mybatisplus的mapper，导致其他的未扫描到<br>解决方式：在自动生成的mapper上加上@mapper注解去进行组件扫描</p>
<h2 id="2-druid多数据源切换不成功，报错找不到数据库"><a href="#2-druid多数据源切换不成功，报错找不到数据库" class="headerlink" title="2.druid多数据源切换不成功，报错找不到数据库"></a>2.druid多数据源切换不成功，报错找不到数据库</h2><p>原因：boot自带的数据库配置会去扫描默认数据源，而druid的路径不一样<br>解决方式：编写一个默认的数据源</p>
<h2 id="3-mybatisplus生成不了代码"><a href="#3-mybatisplus生成不了代码" class="headerlink" title="3.mybatisplus生成不了代码"></a>3.mybatisplus生成不了代码</h2><p>原因：freemarker模板引擎不可用<br>解决方式：切换为velocity的模板引擎</p>
<h2 id="4-JobThread-Exception-java-lang-reflect-InvocationTargetException"><a href="#4-JobThread-Exception-java-lang-reflect-InvocationTargetException" class="headerlink" title="4.JobThread Exception:java.lang.reflect.InvocationTargetException"></a>4.JobThread Exception:java.lang.reflect.InvocationTargetException</h2><p>原因：这个是xxljob定时注解导致的，和redis的缓存注解冲突了<br>解决方式：把redis的@cacheable注解去除掉就行了</p>
<h2 id="5-驱动程序无法通过使用安全套接字层-SSL-加密与-SQL-Server-建立安全连接。"><a href="#5-驱动程序无法通过使用安全套接字层-SSL-加密与-SQL-Server-建立安全连接。" class="headerlink" title="5.驱动程序无法通过使用安全套接字层(SSL)加密与 SQL Server 建立安全连接。"></a>5.驱动程序无法通过使用安全套接字层(SSL)加密与 SQL Server 建立安全连接。</h2><p>原因：sqlserver在1.8之前的版本安全验证不一样<br>解决方法：把C:\Program Files\Java\jdk1.8.0_301\jre\lib\security下的java.security的3DES_EDE_CBC  TLSv1, TLSv1.1注释掉，网上写的只注释3DES_EDE_CBC不完全<br>参考：<a href="https://blog.csdn.net/weixin_47180824/article/details/116236919">https://blog.csdn.net/weixin_47180824/article/details/116236919</a></p>
<h2 id="6-mybatisplus生成sqlserver文件失败，SQLServerException-列名-‘TABLE-NAME’-无效。"><a href="#6-mybatisplus生成sqlserver文件失败，SQLServerException-列名-‘TABLE-NAME’-无效。" class="headerlink" title="6.mybatisplus生成sqlserver文件失败，SQLServerException: 列名 ‘TABLE_NAME’ 无效。"></a>6.mybatisplus生成sqlserver文件失败，SQLServerException: 列名 ‘TABLE_NAME’ 无效。</h2><p>原因：mybatisplus版本过高<br>解决方法：把mybatisplus从3.3.1降为3.2.0</p>
<h2 id="7-Invalid-bound-statement-not-found"><a href="#7-Invalid-bound-statement-not-found" class="headerlink" title="7.Invalid bound statement (not found)"></a>7.Invalid bound statement (not found)</h2><p>原因：mybatis-plus.mapper-locations= classpath*:mapper/**/*.xml在配置时多打了一个空格，应该要贴着打<br>注意：这种在xml经常会出现这种问题导致配置不生效</p>
<h2 id="8-druid中不同数据源之间的交互"><a href="#8-druid中不同数据源之间的交互" class="headerlink" title="8.druid中不同数据源之间的交互"></a>8.druid中不同数据源之间的交互</h2><p>原因：DataSource打在controller层，如果都是在这个方法中执行，则全都会连接到一个数据源中，如果需要多数据交互，则需要给各自的server层打上该使用的数据源<br>解决方法：把DataSource的注解打在server层</p>
<h2 id="9-mybatisplus分页不起作用，查询全数据"><a href="#9-mybatisplus分页不起作用，查询全数据" class="headerlink" title="9.mybatisplus分页不起作用，查询全数据"></a>9.mybatisplus分页不起作用，查询全数据</h2><p>原因：mp在官方文档有说明，默认的分页最大限制是500条每页<br>解决办法：在mybatisplus配置文件把paginationInterceptor.setLimit(-1);设置-1，如果不设置默认是500上限</p>
<h2 id="10-多线程在跑动时会先把线程加入线程池，然后执行，redis队列会有冲突"><a href="#10-多线程在跑动时会先把线程加入线程池，然后执行，redis队列会有冲突" class="headerlink" title="10.多线程在跑动时会先把线程加入线程池，然后执行，redis队列会有冲突"></a>10.多线程在跑动时会先把线程加入线程池，然后执行，redis队列会有冲突</h2><p>解决办法：使用阻塞队列arrayBlockQueue<br>后续解决方法：给线程池自定义优化如下，前面使用自带的三大方法都不好用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> ExecutorService threadPool= <span class="keyword">new</span> ThreadPoolExecutor(<span class="number">4</span>,<span class="number">4</span>, <span class="number">10L</span>, </span><br><span class="line">TimeUnit.MILLISECONDS,</span><br><span class="line">                <span class="keyword">new</span> LinkedBlockingDeque&lt;&gt;(<span class="number">100</span>),</span><br><span class="line">                Executors.defaultThreadFactory(),</span><br><span class="line">                <span class="keyword">new</span> ThreadPoolExecutor.CallerRunsPolicy());</span><br></pre></td></tr></table></figure>
<h2 id="11-mysql插入量每次只有5k左右，插入时间过长"><a href="#11-mysql插入量每次只有5k左右，插入时间过长" class="headerlink" title="11.mysql插入量每次只有5k左右，插入时间过长"></a>11.mysql插入量每次只有5k左右，插入时间过长</h2><p>原因：mysql限制插入4M<br>解决方案：提升每条sql内存为256M</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">select @<span class="meta">@max_allowed_packet</span>;</span><br><span class="line">SET GLOBAL max_allowed_packet=<span class="number">268435456</span>;</span><br></pre></td></tr></table></figure>
<h2 id="12-INSERT-command-denied"><a href="#12-INSERT-command-denied" class="headerlink" title="12.INSERT command denied"></a>12.INSERT command denied</h2><p>原因：1.数据库没有权限，2.你的sql指定错了库名，mybatisplus自动生成会带库名</p>
<h2 id="13-Java-HotSpot-TM-64-Bit-Server-VM-warning-INFO-os-commit-memory-0x000001fd7819d000-2195456-0-failed-error-’ҳ-l-̫С-޷-n-‘-DOS-error-errno-1455"><a href="#13-Java-HotSpot-TM-64-Bit-Server-VM-warning-INFO-os-commit-memory-0x000001fd7819d000-2195456-0-failed-error-’ҳ-l-̫С-޷-n-‘-DOS-error-errno-1455" class="headerlink" title="13.Java HotSpot(TM) 64-Bit Server VM warning: INFO: os::commit_memory(0x000001fd7819d000, 2195456, 0) failed; error=’ҳ   ļ ̫С   ޷   ɲ     ‘ (DOS error/errno=1455)"></a>13.Java HotSpot(TM) 64-Bit Server VM warning: INFO: os::commit_memory(0x000001fd7819d000, 2195456, 0) failed; error=’ҳ   ļ ̫С   ޷   ɲ     ‘ (DOS error/errno=1455)</h2><p>解决思路：增加了idea的jvm内存</p>
<h2 id="14-日期格式不正确导致每次会查询重复数据，没有后面的2702021-11-02-08-21-25-270"><a href="#14-日期格式不正确导致每次会查询重复数据，没有后面的2702021-11-02-08-21-25-270" class="headerlink" title="14.日期格式不正确导致每次会查询重复数据，没有后面的2702021-11-02 08:21:25.270"></a>14.日期格式不正确导致每次会查询重复数据，没有后面的2702021-11-02 08:21:25.270</h2><p>原因：后面的270是毫秒<br>解决方案：把原来的yyyy-MM-dd HH:mm:ss改为yyyy-MM-dd HH:mm:ss.SSS<br>切记：s一定要大写，大写查询的是微秒，小写查询的是毫秒</p>
<h2 id="15-xxljob没有日志"><a href="#15-xxljob没有日志" class="headerlink" title="15.xxljob没有日志"></a>15.xxljob没有日志</h2><p>原因：xxljob有自带的打印日志，使用原来的logger不管用<br>解决方案：使用xxljob自带的日志方法XxlJobHelper.log</p>
<h2 id="16-Data-truncation-Incorrect-datetime-value"><a href="#16-Data-truncation-Incorrect-datetime-value" class="headerlink" title="16.Data truncation: Incorrect datetime value"></a>16.Data truncation: Incorrect datetime value</h2><p>原因：因为存入redis的数据为json格式，最后解析出来的数据为String类型，而数据库存储需要Date类型<br>解决方法：把存储的数据序列化，然后取出的时候反序列化，这样可以保证数据的格式</p>
<h2 id="17-MISCONF-Redis-is-configured-to-save-RDB-snapshots"><a href="#17-MISCONF-Redis-is-configured-to-save-RDB-snapshots" class="headerlink" title="17.MISCONF Redis is configured to save RDB snapshots"></a>17.MISCONF Redis is configured to save RDB snapshots</h2><p>原因：redis存满了，强制把redis快照关闭了导致不能持久化<br>解决方法：控制台输入config set stop-writes-on-bgsave-error no</p>
<h2 id="18-sql-injection-violation-multi-statement-not-allow"><a href="#18-sql-injection-violation-multi-statement-not-allow" class="headerlink" title="18.sql injection violation, multi-statement not allow"></a>18.sql injection violation, multi-statement not allow</h2><p>原因：mysql的批量更新是要我们主动去设置的<br>解决方法：在mysql连接url后面加上&amp;allowMultiQueries=true</p>
<h2 id="19-insert-into-select-from会导致锁表"><a href="#19-insert-into-select-from会导致锁表" class="headerlink" title="19.insert into select from会导致锁表"></a>19.insert into select from会导致锁表</h2><p>解决方法：改为先删除再搜索插入，如果是小数据量插入可以忽略这个问题，但是如果涉及到金额类型，能不用就不用，很容易造成生产问题</p>
<h2 id="20-No-tests-found-matching-Method-test2-io-renren-DynamicDataSourceTest-from-org-junit-internal-requests-ClassRequest-7e6ef134"><a href="#20-No-tests-found-matching-Method-test2-io-renren-DynamicDataSourceTest-from-org-junit-internal-requests-ClassRequest-7e6ef134" class="headerlink" title="20.No tests found matching Method test2(io.renren.DynamicDataSourceTest) from org.junit.internal.requests.ClassRequest@7e6ef134"></a>20.No tests found matching Method test2(io.renren.DynamicDataSourceTest) from org.junit.internal.requests.ClassRequest@7e6ef134</h2><p>解决方法：没加@Test注解</p>
<h2 id="21-Elementui的el-pagination分页不更新问题"><a href="#21-Elementui的el-pagination分页不更新问题" class="headerlink" title="21.Elementui的el-pagination分页不更新问题"></a>21.Elementui的el-pagination分页不更新问题</h2><p>解决方法：:current-page.sync=”pageIndex” 使用异步<br>吐槽：网上的方法使用if重新加载是不管用的，每次都会去默认刷新第一页，这个是大坑</p>
<h2 id="22-mybatisplus时间查询当天日期问题"><a href="#22-mybatisplus时间查询当天日期问题" class="headerlink" title="22.mybatisplus时间查询当天日期问题"></a>22.mybatisplus时间查询当天日期问题</h2><p>原因：因为数据有时分秒，然后mp里面查询的又是精确的<br>解决方法：<br>1.改为范围查询，查询今天到明天的时间</p>
<p>2.写xml文件使用formate格式化当天时间</p>
]]></content>
      <tags>
        <tag>问题解析</tag>
      </tags>
  </entry>
  <entry>
    <title>设计模式-创建型模式-原型模式</title>
    <url>/2022/05/21/0.2.3-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F-%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>原型模式是指，一个抽象类 <code>Prototype</code> 具有一个<code>clone</code> 方法，其实现类<code>ConcretePrototype1</code>、<code>ConcretePrototype2</code> 实现各自的clone方法，在使用的时候，调用Prototype的clone方法可以clone任意实现类。其作用就是快速创建一个新的对象</p>
<h2 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h2><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/7/30/164e896061e7bc95~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp" alt="img"></p>
<h3 id="Prototype（抽象原型类）："><a href="#Prototype（抽象原型类）：" class="headerlink" title="Prototype（抽象原型类）："></a>Prototype（抽象原型类）：</h3><p>它是声明克隆方法的接口，是所有具体原型类的公共父类，可以是抽象类也可以是接口，甚至还可以是具体实现类。</p>
<h3 id="ConcretePrototype（具体原型类）："><a href="#ConcretePrototype（具体原型类）：" class="headerlink" title="ConcretePrototype（具体原型类）："></a>ConcretePrototype（具体原型类）：</h3><p>它实现在抽象原型类中声明的克隆方法，在克隆方法中返回自己的一个克隆对象。</p>
<h3 id="Client（客户类）："><a href="#Client（客户类）：" class="headerlink" title="Client（客户类）："></a>Client（客户类）：</h3><p>让一个原型对象克隆自身从而创建一个新的对象，在客户类中只需要直接实例化或通过工厂方法等方式创建一个原型对象，再通过调用该对象的克隆方法即可得到多个相同的对象。由于客户类针对抽象原型类Prototype编程，因此用户可以根据需要选择具体原型类，系统具有较好的可扩展性，增加或更换具体原型类都很方便。</p>
<h2 id="何时使用原型模式"><a href="#何时使用原型模式" class="headerlink" title="何时使用原型模式"></a>何时使用原型模式</h2><ul>
<li>需要创建的对象应独立于其类型与创建方式</li>
<li>要实例化的类是在运行时决定的</li>
<li>类不容易创建，比如每个组件可把其他组件作为子节点的组合对象。复制已有的组合对象并对副本进行修改会更加容易</li>
<li>从功能的角度来讲，不管什么对象，只要复制自身比手工实例化要好，都可以是原型对象</li>
<li>不同类的实例间的差异仅是状态的若干组合。因此复制相应数量的原型比手工实例化更加方便</li>
<li>需要使用组合(树型)对象作为其他东西的基础。例如，使用组合对象作为组件来构建另一个组合对象</li>
</ul>
<h2 id="原型模式原理"><a href="#原型模式原理" class="headerlink" title="原型模式原理"></a>原型模式原理</h2><p>一个原型类，只需要实现<code>Cloneable</code>接口，覆写<code>clone</code>方法，此处<code>clone</code>方法可以改成任意的名称，因为<code>Cloneable</code>接口是个空接口，你可以任意定义实现类的方法名，如cloneA或者cloneB，因为此处的重点是<code>super.clone()</code>这句话，<code>super.clone()</code>调用的是Object的clone()方法，而在Object类中，clone()是native的<br>需要注意的是能够实现克隆的Java类必须实现一个标识接口Cloneable，表示这个Java类支持被复制。如果一个类没有实现这个接口但是调用了clone()方法，<code>Java编译器将抛出一个CloneNotSupportedException异常。</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcretePrototype</span> <span class="keyword">implements</span>  <span class="title">Cloneable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">……</span><br><span class="line"><span class="function"><span class="keyword">public</span> Prototype  <span class="title">clone</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">　　Object object = <span class="keyword">null</span>;</span><br><span class="line">　　<span class="keyword">try</span> &#123;</span><br><span class="line">　　　　　object = <span class="keyword">super</span>.clone();</span><br><span class="line">　　&#125; <span class="keyword">catch</span> (CloneNotSupportedException exception) &#123;</span><br><span class="line">　　　　　System.err.println(<span class="string">&quot;Not support cloneable&quot;</span>);</span><br><span class="line">　　&#125;</span><br><span class="line">　　<span class="keyword">return</span> (Prototype )object;</span><br><span class="line">&#125;</span><br><span class="line">……</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在客户端创建原型对象和克隆对象也很简单，如下代码所示：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Prototype obj1  = <span class="keyword">new</span> ConcretePrototype();</span><br><span class="line">Prototype obj2  = obj1.clone();</span><br></pre></td></tr></table></figure>

<p>一般而言，Java语言中的clone()方法都需要满足：</p>
<ul>
<li>对任何对象x，都有x.clone() != x，即克隆对象与原型对象不是同一个对象；</li>
<li>对任何对象x，都有x.clone().getClass() == x.getClass()，即克隆对象与原型对象的类型一样；</li>
<li>如果对象x的equals()方法定义恰当，那么x.clone().equals(x)应该成立。<br>为了获取对象的一份拷贝，我们可以直接利用Object类的clone()方法，具体步骤如下：</li>
<li>在派生类中覆盖基类的clone()方法，并声明为public；</li>
<li>在派生类的clone()方法中，调用super.clone()；</li>
<li>派生类需实现Cloneable接口。<br>此时，Object类相当于抽象原型类，所有实现了Cloneable接口的类相当于具体原型类。</li>
</ul>
<h2 id="浅拷贝-ShallowClone-和深拷贝-DeepClone-介绍"><a href="#浅拷贝-ShallowClone-和深拷贝-DeepClone-介绍" class="headerlink" title="浅拷贝(ShallowClone)和深拷贝(DeepClone)介绍"></a>浅拷贝(ShallowClone)和深拷贝(DeepClone)介绍</h2><ul>
<li>浅拷贝<br>在浅拷贝中，如果原型对象的成员变量是值类型，将复制一份给拷贝对象；如果原型对象的成员变量是引用类型，则将引用对象的地址复制一份给拷贝对象，也就是说原型对象和拷贝对象的成员变量指向相同的内存地址。简单来说，在浅拷贝中，当对象被复制时只复制它本身和其中包含的值类型的成员变量，而引用类型的成员对象并没有复制<br><img src="https://static.sitestack.cn/projects/design-pattern-java/e819192d3af8ff629bc3bd59178331ae.gif" alt="img"></li>
<li>深拷贝<br>在深拷贝中，无论原型对象的成员变量是值类型还是引用类型，都将复制一份给拷贝对象，深拷贝将原型对象的所有引用对象也复制一份给拷贝对象。简单来说，在深拷贝中，除了对象本身被复制外，对象所包含的所有成员变量也将复制<br><img src="https://static.sitestack.cn/projects/design-pattern-java/1a947f62d159593806d1c30cf8b0ac23.gif" alt="img"></li>
</ul>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>简单来说，就是深复制进行了完全彻底的复制，而浅复制不彻底。clone明显是深复制，clone出来的对象是是不能去影响原型对象的</p>
<h2 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Message</span> <span class="keyword">implements</span> <span class="title">Cloneable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name; <span class="comment">//姓名</span></span><br><span class="line">    <span class="keyword">private</span> ExpenseDetail detail;<span class="comment">//消费明细</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Message</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行构造函数Message&quot;</span>);</span><br><span class="line">        detail = <span class="keyword">new</span> ExpenseDetail();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMessage</span><span class="params">(String name, String type,<span class="keyword">double</span> money)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.detail.setType(type);</span><br><span class="line">        <span class="keyword">this</span>.detail.setMoney(money);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Message <span class="title">clone</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Message message = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            message = (Message) <span class="keyword">super</span>.clone();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (CloneNotSupportedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(name +<span class="string">&quot;您好：您今天&quot;</span>+detail.getType()+<span class="string">&quot;消费了&quot;</span>+detail.getMoney()+<span class="string">&quot;元&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>消费明细</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExpenseDetail</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> money;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setType</span><span class="params">(String type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getMoney</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> money;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMoney</span><span class="params">(<span class="keyword">double</span> money)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.money = money;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MbClient</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Message message = <span class="keyword">new</span> Message();</span><br><span class="line">        message.setMessage(<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;吃饭&quot;</span>,<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        Message message1 = message.clone();</span><br><span class="line">        message1.setMessage(<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;看电影&quot;</span>,<span class="number">50</span>);</span><br><span class="line"></span><br><span class="line">        Message message2 = message.clone();</span><br><span class="line">        message2.setMessage(<span class="string">&quot;王五&quot;</span>,<span class="string">&quot;买书&quot;</span>,<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">        message.sendMessage();</span><br><span class="line">        message1.sendMessage();</span><br><span class="line">        message2.sendMessage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">结果</span><br><span class="line">执行构造函数Message</span><br><span class="line">张三您好：您今天买书消费了<span class="number">100.0</span>元</span><br><span class="line">李四您好：您今天买书消费了<span class="number">100.0</span>元</span><br><span class="line">王五您好：您今天买书消费了<span class="number">100.0</span>元</span><br></pre></td></tr></table></figure>

<p>我们可以看到所有人的消费明细居然都一样，这是因为Object类提供的clone方法，不会拷贝对象中的内部数组和引用对象，导致它们仍旧指向原来对象的内部元素地址，这种拷贝叫做浅拷贝。</p>
<blockquote>
<p>由此而导致最后一次的值会覆盖前一次的值。<br>此时的<code>message.getDetail = message1.getDetail =message2.getDetail</code></p>
</blockquote>
<h2 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h2><p>深拷贝方式有两种:<code>继承cloneable</code>或者进行<code>Serializable</code></p>
<h3 id="继承cloneable接口"><a href="#继承cloneable接口" class="headerlink" title="继承cloneable接口"></a>继承cloneable接口</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Message</span> <span class="keyword">implements</span> <span class="title">Cloneable</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Message <span class="title">clone</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Message message = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            message = (Message) <span class="keyword">super</span>.clone();</span><br><span class="line">            message.detail = <span class="keyword">this</span>.detail.clone();<span class="comment">//拷贝消费明细</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (CloneNotSupportedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> message;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExpenseDetail</span> <span class="keyword">implements</span> <span class="title">Cloneable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> money;</span><br><span class="line">    ...</span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> ExpenseDetail <span class="title">clone</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        ExpenseDetail detail = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            detail = (ExpenseDetail) <span class="keyword">super</span>.clone();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (CloneNotSupportedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> detail;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">结果</span><br><span class="line">执行构造函数Message</span><br><span class="line">张三您好：您今天吃饭消费了<span class="number">10.0</span>元</span><br><span class="line">李四您好：您今天看电影消费了<span class="number">50.0</span>元</span><br><span class="line">王五您好：您今天买书消费了<span class="number">100.0</span>元</span><br></pre></td></tr></table></figure>

<p>此时的<code>message.getDetail != message1.getDetail !=message2.getDetail</code></p>
<h3 id="序列化实现"><a href="#序列化实现" class="headerlink" title="序列化实现"></a>序列化实现</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span>  java.io.*;</span><br><span class="line"><span class="comment">//附件类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span>  <span class="title">Attachment</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">       <span class="keyword">private</span>  String name; <span class="comment">//附件名</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span></span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">              <span class="keyword">this</span>.name  = name;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">public</span>  String <span class="title">getName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">              <span class="keyword">return</span>  <span class="keyword">this</span>.name;</span><br><span class="line">       &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">download</span><span class="params">()</span></span></span><br><span class="line"><span class="function">     </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;下载附件，文件名为&quot;</span> + name);</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span>  java.io.*;</span><br><span class="line"><span class="comment">//工作周报类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span>  <span class="title">WeeklyLog</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">       <span class="keyword">private</span>  Attachment attachment;</span><br><span class="line">       <span class="keyword">private</span>  String name;</span><br><span class="line">       <span class="keyword">private</span>  String date;</span><br><span class="line">       <span class="keyword">private</span>  String content;</span><br><span class="line">       <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">setAttachment</span><span class="params">(Attachment attachment)</span> </span>&#123;</span><br><span class="line">              <span class="keyword">this</span>.attachment  = attachment;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">              <span class="keyword">this</span>.name  = name;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">setDate</span><span class="params">(String date)</span> </span>&#123;</span><br><span class="line">              <span class="keyword">this</span>.date  = date;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">setContent</span><span class="params">(String content)</span> </span>&#123;</span><br><span class="line">              <span class="keyword">this</span>.content  = content;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">public</span>  Attachment <span class="title">getAttachment</span><span class="params">()</span></span>&#123;</span><br><span class="line">              <span class="keyword">return</span>  (<span class="keyword">this</span>.attachment);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">public</span>  String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">              <span class="keyword">return</span>  (<span class="keyword">this</span>.name);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">public</span>  String <span class="title">getDate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">              <span class="keyword">return</span>  (<span class="keyword">this</span>.date);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">public</span>  String <span class="title">getContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">              <span class="keyword">return</span>  (<span class="keyword">this</span>.content);</span><br><span class="line">       &#125;</span><br><span class="line">   <span class="comment">//使用序列化技术实现深克隆</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> WeeklyLog <span class="title">deepClone</span><span class="params">()</span> <span class="keyword">throws</span>  IOException, ClassNotFoundException, OptionalDataException</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">              <span class="comment">//将对象写入流中</span></span><br><span class="line">              ByteArrayOutputStream bao=<span class="keyword">new</span>  ByteArrayOutputStream();</span><br><span class="line">              ObjectOutputStream oos=<span class="keyword">new</span>  ObjectOutputStream(bao);</span><br><span class="line">              oos.writeObject(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">              <span class="comment">//将对象从流中取出</span></span><br><span class="line">              ByteArrayInputStream bis=<span class="keyword">new</span>  ByteArrayInputStream(bao.toByteArray());</span><br><span class="line">              ObjectInputStream ois=<span class="keyword">new</span>  ObjectInputStream(bis);</span><br><span class="line">              <span class="keyword">return</span>  (WeeklyLog)ois.readObject();</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>工作周报类WeeklyLog不再使用Java自带的克隆机制，而是通过序列化来从头实现对象的深克隆，所以我们需要重新编写clone()方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Client</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">       <span class="function"><span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">              WeeklyLog  log_previous, log_new = <span class="keyword">null</span>;</span><br><span class="line">              log_previous  = <span class="keyword">new</span> WeeklyLog(); <span class="comment">//创建原型对象</span></span><br><span class="line">              Attachment  attachment = <span class="keyword">new</span> Attachment(); <span class="comment">//创建附件对象</span></span><br><span class="line">              log_previous.setAttachment(attachment);  <span class="comment">//将附件添加到周报中</span></span><br><span class="line">              <span class="keyword">try</span></span><br><span class="line">              &#123;</span><br><span class="line">                     log_new =  log_previous.deepClone(); <span class="comment">//调用深克隆方法创建克隆对象                  </span></span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">catch</span>(Exception e)</span><br><span class="line">              &#123;</span><br><span class="line">                     System.err.println(<span class="string">&quot;克隆失败！&quot;</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="comment">//比较周报</span></span><br><span class="line">              System.out.println(<span class="string">&quot;周报是否相同？ &quot;</span> + (log_previous ==  log_new));</span><br><span class="line">              <span class="comment">//比较附件</span></span><br><span class="line">              System.out.println(<span class="string">&quot;附件是否相同？ &quot;</span> +  (log_previous.getAttachment() == log_new.getAttachment()));</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">周报是否相同？  <span class="keyword">false</span></span><br><span class="line">附件是否相同？  <span class="keyword">false</span></span><br></pre></td></tr></table></figure>
<p>此情况下：不论是基本数据类型还有引用类型，都是重新创建的</p>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><blockquote>
<p>原型模式是在内存中二进制流的拷贝，要比new一个对象的性能要好，特别是需要生产大量对象时</p>
</blockquote>
<p>(1) 当创建新的对象实例较为复杂时，使用原型模式可以简化对象的创建过程，通过复制一个已有实例可以提高新实例的创建效率。<br>(2) 扩展性较好，由于在原型模式中提供了抽象原型类，在客户端可以针对抽象原型类进行编程，而将具体原型类写在配置文件中，增加或减少产品类对原有系统都没有任何影响。<br>(3) 原型模式提供了简化的创建结构，工厂方法模式常常需要有一个与产品类等级结构相同的工厂等级结构，而原型模式就不需要这样，原型模式中产品的复制是通过封装在原型类中的克隆方法实现的，无须专门的工厂类来创建产品。<br>(4) 可以使用深克隆的方式保存对象的状态，使用原型模式将对象复制一份并将其状态保存起来，以便在需要的时候使用（如恢复到某一历史状态），可辅助实现撤销操作。</p>
<h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><blockquote>
<p>直接在内存中拷贝，构造函数是不会执行的，这样就减少了约束，既是优点也是缺点，在实际开发当中应注意这个问题</p>
</blockquote>
<p>(1) 需要为每一个类配备一个克隆方法，而且该克隆方法位于一个类的内部，当对已有的类进行改造时，需要修改源代码，违背了“开闭原则”。<br>(2) 在实现深克隆时需要编写较为复杂的代码，而且当对象之间存在多重的嵌套引用时，为了实现深克隆，每一层对象对应的类都必须支持深克隆，实现起来可能会比较麻烦</p>
<h2 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h2><p>(1) 创建新对象成本较大（如初始化需要占用较长的时间，占用太多的CPU资源或网络资源），新的对象可以通过原型模式对已有对象进行复制来获得，如果是相似对象，则可以对其成员变量稍作修改。<br>(2) 如果系统要保存对象的状态，而对象的状态变化很小，或者对象本身占用内存较少时，可以使用原型模式配合备忘录模式来实现。<br>(3) 需要避免使用分层次的工厂类来创建分层次的对象，并且类的实例对象只有一个或很少的几个组合状态，通过复制原型对象得到新实例可能比使用构造函数创建一个新实例更加方便</p>
<h2 id="面试点"><a href="#面试点" class="headerlink" title="面试点"></a>面试点</h2><ul>
<li>克隆是否调用构造器方法？<br>不会，clone方法直接复制内存中的二进制，效率高</li>
<li>克隆出的对象和之前的是否一致？<br>不一致，但是浅拷贝下引用类型对象是一致的（因为指向同一份地址），深拷贝下不一致</li>
<li>改变克隆对象的值，原对象是否会变？<br>基本类型不变，引用类型随之改变</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.runoob.com/design-pattern/prototype-pattern.html">原型模式 | 菜鸟教程 (runoob.com)</a></li>
<li><a href="https://www.bookstack.cn/read/design-pattern-java/%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%85%8B%E9%9A%86%E2%80%94%E2%80%94%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%B8%80%EF%BC%89.md">原型模式-Prototype Pattern - 对象的克隆——原型模式（一） - 《设计模式 Java版本》 - 书栈网 · BookStack</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/343917614">设计模式之什么是原型模式 - 知乎 (zhihu.com)</a></li>
<li><a href="https://juejin.cn/post/6844903648405749767">设计模式：原型模式 - 掘金 (juejin.cn)</a></li>
<li><a href="https://juejin.cn/post/6844904021258403854">设计模式-原型模式 - 掘金 (juejin.cn)</a></li>
<li><a href="https://www.nowcoder.com/discuss/151692?type=all&order=recall&pos=&page=0&ncTraceId=&channel=-1&source_id=search_all_nctrack&gio_id=6646713B267797EE31FEA69CC7FFC4BD-1652844493925">设计模式实战 - 原型模式_技术交流_牛客网 (nowcoder.com)</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/388259961">看完就明白的原型模式 - 知乎 (zhihu.com)</a></li>
<li><a href="https://blog.csdn.net/A1342772/article/details/91349142">23 种设计模式详解（全23种）_鬼灭之刃的博客-CSDN博客_设计模式</a></li>
<li><a href="https://www.cnblogs.com/geek6/p/3951677.html">23种设计模式全解析 - codeTao - 博客园 (cnblogs.com)</a></li>
</ul>
]]></content>
      <tags>
        <tag>设计模式</tag>
        <tag>创建型模式</tag>
      </tags>
  </entry>
  <entry>
    <title>AOP解决内部方法调用不生效问题</title>
    <url>/2022/05/28/0.2.4-AOP%E8%A7%A3%E5%86%B3%E5%86%85%E9%83%A8%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8%E4%B8%8D%E7%94%9F%E6%95%88%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<blockquote>
<p>描述：在使用AOP切面的时候Controller层可以正常切入进去，但是Service层内部方法调用切入不进去</p>
</blockquote>
<h2 id="大致情况"><a href="#大致情况" class="headerlink" title="大致情况"></a>大致情况</h2><p>就算打注解放methodB上也不会进切面，Aop只支持外部调用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标对象类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Gufung</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestAopService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">methodA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;method A run&quot;</span>);</span><br><span class="line">        <span class="comment">//内部调用方法B时AOP的增强处理方法不会执行</span></span><br><span class="line">        methodB();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">methodB</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;method B run&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h2><h3 id="1-配置spring-context-xml"><a href="#1-配置spring-context-xml" class="headerlink" title="1.配置spring-context.xml"></a>1.配置spring-context.xml</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!-- 通过<span class="meta">@Aspect</span>注解实现AOP --&gt;</span><br><span class="line">&lt;!-- proxy-target-<span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;true&quot;</span>表示使用CGlib动态代理 --&gt;</span><br><span class="line">&lt;!-- expose-proxy=<span class="string">&quot;true&quot;</span>暴露代理对象 --&gt;</span><br><span class="line">&lt;aop:aspectj-autoproxy proxy-target-<span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;true&quot;</span> expose-proxy=<span class="string">&quot;true&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2-使用AopContext-currentProxy-获取代理对象方法，并且执行"><a href="#2-使用AopContext-currentProxy-获取代理对象方法，并且执行" class="headerlink" title="2.使用AopContext.currentProxy()获取代理对象方法，并且执行"></a>2.使用AopContext.currentProxy()获取代理对象方法，并且执行</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.aop.framework.AopContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标对象类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Gufung</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestAopService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">methodA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;method A run&quot;</span>);</span><br><span class="line">        <span class="comment">//methodB();</span></span><br><span class="line">        <span class="comment">//从spring上下文获取代理对象执行方法</span></span><br><span class="line">        ((TestAopService) AopContext.currentProxy()).methodB();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">methodB</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;method B run&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><p>methodB一定要声明为<code>public</code> 否则进不去切面！！！</p>
<h2 id="注解实现方法计时"><a href="#注解实现方法计时" class="headerlink" title="注解实现方法计时"></a>注解实现方法计时</h2><h3 id="1-自定义注解"><a href="#1-自定义注解" class="headerlink" title="1.自定义注解"></a>1.自定义注解</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 耗时统计</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Foam</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE, ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> TimeComsumingStatics &#123;</span><br><span class="line">    <span class="function">String <span class="title">methodName</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-aop"><a href="#2-aop" class="headerlink" title="2.aop"></a>2.aop</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@EnableAspectJAutoProxy(proxyTargetClass = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeComsumingAOP</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(TimeComsumingAOP.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;timeCusming:false&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String openButton;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 基于注解定义切入点</span></span><br><span class="line"><span class="comment">     * 对于注解了 <span class="doctag">@TimeComsumingStatics</span>的方法进行拦截</span></span><br><span class="line"><span class="comment">     * 表示标注了特定注解的目标方法链接点。如<span class="doctag">@annotation</span>(com.dw.study.TestAnnotation)表示任何标注了<span class="doctag">@TestAnnotation</span>注解的目标类方法。</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;@annotation(com.service.zl.vo.TimeComsumingStatics)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">aspect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定时任务记录执行日志</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Around(value = &quot;aspect() &amp;&amp; @annotation(timeComsumingStatics)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">before</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint,TimeComsumingStatics timeComsumingStatics)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;true&quot;</span>.equals(openButton))&#123;</span><br><span class="line">            <span class="keyword">long</span> actStartTime = System.currentTimeMillis();</span><br><span class="line">            Object proceed = proceedingJoinPoint.proceed();</span><br><span class="line">            <span class="keyword">long</span> actEndTime = System.currentTimeMillis();</span><br><span class="line">            String timecusming = (actEndTime - actStartTime)  + <span class="string">&quot;毫秒&quot;</span>;</span><br><span class="line">            log.info(timeComsumingStatics.methodName() + <span class="string">&quot;耗时：&quot;</span> + timecusming);</span><br><span class="line">            <span class="keyword">return</span> proceed;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> proceedingJoinPoint.proceed();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-application-properties"><a href="#3-application-properties" class="headerlink" title="3.application.properties"></a>3.application.properties</h3><p>当timeCusming为true时开启接口耗时统计，false反之</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">timeCusming=<span class="keyword">true</span></span><br></pre></td></tr></table></figure>

<h3 id="4-注解使用"><a href="#4-注解使用" class="headerlink" title="4.注解使用"></a>4.注解使用</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.aop.framework.AopContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标对象类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Gufung</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestAopService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">methodA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;method A run&quot;</span>);</span><br><span class="line">        <span class="comment">//methodB();</span></span><br><span class="line">        <span class="comment">//从spring上下文获取代理对象执行方法</span></span><br><span class="line">        ((TestAopService) AopContext.currentProxy()).methodB();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@TimeComsumingStatics(methodName = &quot;调用methodB&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">methodB</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;method B run&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="5-结果"><a href="#5-结果" class="headerlink" title="5.结果"></a>5.结果</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">调用methodB耗时：<span class="number">17</span>毫秒</span><br></pre></td></tr></table></figure>

<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><p><a href="https://blog.csdn.net/Azhuzhu_chaste/article/details/107284821">AOP内部调用失效-解决方法_咕了个咕的博客-CSDN博客_aop 内部调用</a></p>
<p>注意：jdk1.8的default才能使用接口方式</p>
</li>
<li><p><a href="https://blog.csdn.net/code_my_life/article/details/51891520">Java 8 interface default方法_Code_My_Life的博客-CSDN博客_interface的default方法</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/jvStarBlog/p/11130233.html">spring–aop内部调用失效问题分析 - 11014p - 博客园</a></p>
</li>
</ul>
]]></content>
      <tags>
        <tag>自定义注解</tag>
        <tag>AOP</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA解决vue项目卡死</title>
    <url>/2022/06/02/0.2.7-IDEA%E8%A7%A3%E5%86%B3vue%E9%A1%B9%E7%9B%AE%E5%8D%A1%E6%AD%BB/</url>
    <content><![CDATA[<h2 id="IDEA解决vue项目卡死问题"><a href="#IDEA解决vue项目卡死问题" class="headerlink" title="IDEA解决vue项目卡死问题"></a>IDEA解决vue项目卡死问题</h2><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>在加载vue项目的时候，把node_modules的包一起进行了加载</p>
<p>idea是基于index来实现快速加载项目配置的,故所有在idea打开目录下的文件都会被索引,包括vue项目运行时产生的node_modules文件夹里的js等文件</p>
<h2 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h2><p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image.png" alt="a"></p>
<p><img src="https://fastly.jsdelivr.net/gh/FoamTomato/images/imgs/image1.png" alt="a"></p>
<p>在Ignored Files and Folders中加入node_modules<br>再重启一下idea就好了</p>
]]></content>
      <tags>
        <tag>问题解析</tag>
      </tags>
  </entry>
  <entry>
    <title>mac安装软件</title>
    <url>/2022/07/28/0.2.8-mac%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/</url>
    <content><![CDATA[<p><a name="faxAF"></a></p>
<h1 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h1><p><a href="https://www.cnblogs.com/imzhizi/p/macos-jdk-installation-homebrew.html">https://www.cnblogs.com/imzhizi/p/macos-jdk-installation-homebrew.html</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># 最新版 Oracle JDK</span><br><span class="line">brew cask install oracle-jdk</span><br><span class="line"></span><br><span class="line"># Oracle JDK11、Oracle JDK8 需要手动下载</span><br><span class="line"># https:<span class="comment">//www.oracle.com/hk/java/technologies/javase-downloads.html</span></span><br><span class="line"></span><br><span class="line"># 最新版 Oracle OpenJDK</span><br><span class="line">brew cask install java</span><br><span class="line"></span><br><span class="line"># Oracle OpenJDK11</span><br><span class="line">brew cask install java11</span><br><span class="line"></span><br><span class="line"># 使用该命令则安装由 Oracle 提供的最新版的 OpenJDK</span><br><span class="line">brew cask install java</span><br><span class="line"></span><br><span class="line"># 使用该命令则安装由 Oracle 提供的 OpenJDK11</span><br><span class="line">brew cask install java11</span><br><span class="line"></span><br><span class="line"># OpenJDK 在 Oracle 不再维护后会转交给 RedHat 维护</span><br><span class="line">brew cask install openjdk@<span class="number">11</span></span><br><span class="line"></span><br><span class="line"># AdoptOpenJDK </span><br><span class="line">brew cask install AdoptOpenJDK/openjdk/adoptopenjdk8</span><br><span class="line">brew cask install AdoptOpenJDK/openjdk/adoptopenjdk9</span><br><span class="line">brew cask install AdoptOpenJDK/openjdk/adoptopenjdk10</span><br><span class="line">brew cask install AdoptOpenJDK/openjdk/adoptopenjdk11</span><br><span class="line">brew cask install AdoptOpenJDK/openjdk/adoptopenjdk12</span><br><span class="line">brew cask install AdoptOpenJDK/openjdk/adoptopenjdk</span><br><span class="line"></span><br><span class="line"># Azul Zulu 提供了 JDK <span class="number">7</span></span><br><span class="line"># Azul Zulu 也提供其他版本的 JDK 像 zulu8、zulu11 等</span><br><span class="line">brew cask install homebrew/cask-versions/zulu7</span><br><span class="line">brew cask install homebrew/cask-versions/zulu8</span><br><span class="line">brew cask install homebrew/cask-versions/zulu11</span><br><span class="line">brew cask install homebrew/cask-versions/zulu</span><br><span class="line"></span><br><span class="line"># Apple 提供的 JDK6</span><br><span class="line">brew cask install homebrew/cask-versions/java6</span><br></pre></td></tr></table></figure>
<p><a name="OXMoQ"></a></p>
<h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install maven</span><br></pre></td></tr></table></figure>
<p><a name="aIV6N"></a></p>
<h1 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure>
<p><a name="jqlob"></a></p>
<h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">brew install mysql</span><br></pre></td></tr></table></figure>
<p><a name="ZnbCH"></a></p>
<h2 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure>
<p><a name="YFiYD"></a></p>
<h2 id="启动mysql"><a href="#启动mysql" class="headerlink" title="启动mysql"></a>启动mysql</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew service start mysql</span><br></pre></td></tr></table></figure>
<p><a name="MbADC"></a></p>
<h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install redis</span><br><span class="line">// 指定版本</span><br><span class="line">brew install redis@3.2</span><br></pre></td></tr></table></figure>
<p><a name="jp6qL"></a></p>
<h2 id="启动命令"><a href="#启动命令" class="headerlink" title="启动命令"></a>启动命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">// 使用brew帮助我们启动软件</span><br><span class="line">brew services start redis</span><br></pre></td></tr></table></figure>
<p><a name="Nm99U"></a></p>
<h2 id="关闭命令"><a href="#关闭命令" class="headerlink" title="关闭命令"></a>关闭命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew services stop redis</span><br></pre></td></tr></table></figure>
<p><a name="bTZZx"></a></p>
<h2 id="查看服务进程"><a href="#查看服务进程" class="headerlink" title="查看服务进程"></a>查看服务进程</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ps axu | grep redis</span><br></pre></td></tr></table></figure>
<p><a name="uNlhH"></a></p>
<h1 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h1><p>用来装其他东西很方便“macOS缺失的软件包的管理器”</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">/bin/zsh -c &quot;$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)&quot;</span><br></pre></td></tr></table></figure>
<p><a name="LlWhM"></a></p>
<h2 id="一些操作命令"><a href="#一些操作命令" class="headerlink" title="一些操作命令"></a>一些操作命令</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">brew search ** <span class="comment">//查找某个软件包</span></span><br><span class="line">brew list <span class="comment">//列出已经安装的软件的包</span></span><br><span class="line">brew install ** <span class="comment">//安装某个软件包,默认安装的是稳定版本</span></span><br><span class="line">brew uninstall **<span class="comment">//卸载某个软件的包</span></span><br><span class="line">brew upgrade ** <span class="comment">//更新某个软件包</span></span><br><span class="line">brew info ** <span class="comment">//查看指定软件包的说明</span></span><br><span class="line">brew cache clean <span class="comment">//清理缓存</span></span><br></pre></td></tr></table></figure>
<p><a name="FuA0N"></a></p>
<h1 id="Mac应用程序无法打开或文件损坏的处理方法"><a href="#Mac应用程序无法打开或文件损坏的处理方法" class="headerlink" title="Mac应用程序无法打开或文件损坏的处理方法"></a>Mac应用程序无法打开或文件损坏的处理方法</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 方法1</span></span><br><span class="line"><span class="number">1.</span> 打开系统偏好设置界面，进入安全性与隐私</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 点按左下角的锁头图标，解锁更改权限</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> 将允许从以下位置下载的应用，更改为 “ 任何来源 ” ，然后再打开应用即可</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法2</span></span><br><span class="line">sudo xattr -d com.apple.quarantine /Applications/xxxx.app</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法3</span></span><br><span class="line">sudo codesign --force --deep --sign - 文件位置（直接将应用拖进去即可）</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>软件安装</tag>
      </tags>
  </entry>
  <entry>
    <title>创建型模式-工厂模式</title>
    <url>/2022/07/30/0.2.9-%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F-%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<p><a name="sgFbs"></a></p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>工厂模式是最常用的创建型模式，分为三种：简单工厂模式，工厂方法模式和抽象工厂模式<br><a name="oqV7O"></a></p>
<h1 id="源码场景（后续补充）"><a href="#源码场景（后续补充）" class="headerlink" title="源码场景（后续补充）"></a>源码场景（后续补充）</h1><p><a name="LqiGF"></a></p>
<h2 id="线程池：ThreadFactory"><a href="#线程池：ThreadFactory" class="headerlink" title="线程池：ThreadFactory"></a>线程池：ThreadFactory</h2><p>在线程池构建 Worker 的时候会通过调用传入线程工厂对象的 newThread() 方法创建Worker 持有的线程<br><a name="mqffe"></a></p>
<h2 id="日志：LoggerFactory"><a href="#日志：LoggerFactory" class="headerlink" title="日志：LoggerFactory"></a>日志：LoggerFactory</h2><p><a name="CXGZN"></a></p>
<h2 id="Spring：BeanFactory"><a href="#Spring：BeanFactory" class="headerlink" title="Spring：BeanFactory"></a>Spring：BeanFactory</h2><p><a name="qNxJh"></a></p>
<h2 id="MyBatis：SqlSessionFactory"><a href="#MyBatis：SqlSessionFactory" class="headerlink" title="MyBatis：SqlSessionFactory"></a>MyBatis：SqlSessionFactory</h2><p><a name="r7g5t"></a></p>
<h1 id="简单工厂模式"><a href="#简单工厂模式" class="headerlink" title="简单工厂模式"></a>简单工厂模式</h1><p>简单工厂模式并不属于GoF 23个经典设计模式，但通常将它作为学习其他工厂模式的基础<br><a name="cNZ2D"></a></p>
<h2 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h2><p><a name="Ts8fl"></a></p>
<h3 id="Factory-工厂角色"><a href="#Factory-工厂角色" class="headerlink" title="Factory 工厂角色"></a>Factory 工厂角色</h3><blockquote>
<p>工厂角色即工厂类，它是简单工厂模式的核心，负责实现创建所有产品实例的内部逻辑；<br>工厂类可以被外界直接调用，创建所需的产品对象；<br>在工厂类中提供了静态的工厂方法factoryMethod()，它的返回类型为抽象产品类型Product</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChartFactory</span> </span>&#123;  </span><br><span class="line">    <span class="comment">//静态工厂方法  </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Chart <span class="title">getChart</span><span class="params">(String type)</span> </span>&#123;  </span><br><span class="line">        Chart chart = <span class="keyword">null</span>;  </span><br><span class="line">        <span class="keyword">if</span> (type.equalsIgnoreCase(<span class="string">&quot;histogram&quot;</span>)) &#123;  </span><br><span class="line">            chart = <span class="keyword">new</span> HistogramChart();  </span><br><span class="line">            System.out.println(<span class="string">&quot;初始化设置柱状图！&quot;</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (type.equalsIgnoreCase(<span class="string">&quot;pie&quot;</span>)) &#123;  </span><br><span class="line">            chart = <span class="keyword">new</span> PieChart();  </span><br><span class="line">            System.out.println(<span class="string">&quot;初始化设置饼状图！&quot;</span>);  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> chart;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a name="CweSk"></a></p>
<h3 id="Product-抽象产品角色"><a href="#Product-抽象产品角色" class="headerlink" title="Product 抽象产品角色"></a>Product 抽象产品角色</h3><blockquote>
<p>它是工厂类所创建的所有对象的父类，封装了各种产品对象的公有方法；<br>它的引入将提高系统的灵活性，使得在工厂类中只需定义一个通用的工厂方法，因为所有创建的具体产品对象都是其子类对象</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Chart</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
<p><a name="VeMSj"></a></p>
<h3 id="ConcreteProduct-具体产品角色"><a href="#ConcreteProduct-具体产品角色" class="headerlink" title="ConcreteProduct 具体产品角色"></a>ConcreteProduct 具体产品角色</h3><blockquote>
<p>它是简单工厂模式的创建目标，所有被创建的对象都充当这个角色的某个具体类的实例；<br>每一个具体产品角色都继承了抽象产品角色，需要实现在抽象产品中声明的抽象方法</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HistogramChart</span> <span class="keyword">implements</span> <span class="title">Chart</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HistogramChart</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;创建柱状图！&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;显示柱状图！&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PieChart</span> <span class="keyword">implements</span> <span class="title">Chart</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PieChart</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;创建饼状图！&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;显示饼状图！&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p><a name="jqMHU"></a></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;  </span><br><span class="line">        Chart chart;  </span><br><span class="line">        chart = ChartFactory.getChart(<span class="string">&quot;histogram&quot;</span>); <span class="comment">//通过静态工厂方法创建产品  </span></span><br><span class="line">        chart.display();  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">创建柱状图！</span><br><span class="line">初始化设置柱状图！</span><br><span class="line">显示柱状图！</span><br><span class="line"></span><br><span class="line">若需要饼状图则改为</span><br><span class="line">chart = ChartFactory.getChart(<span class="string">&quot;pie&quot;</span>);</span><br></pre></td></tr></table></figure>
<p><a name="KHlPv"></a></p>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li><p>增加固定类型产品的不同具体工厂比较方便</p>
</li>
<li><p>实现了对象创建和使用的分离，使用者不必关心类对象如何创建，明确了职责</p>
</li>
<li><p>在需要多个相关产品的时候，仍然只需要一个工厂对象<br><a name="C1fjB"></a></p>
<h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2></li>
<li><p>由于工厂类集中了所有产品的创建逻辑，职责过重，一旦不能正常工作，整个系统都要受到影响</p>
</li>
<li><p>会增加系统中类的个数，增加了系统的复杂度和理解难度</p>
</li>
<li><p>要新增产品类的时候，就要修改工厂类的代码，违反了开放封闭原则</p>
</li>
<li><p>简单工厂模式由于使用了静态工厂方法，造成工厂角色无法形成基于继承的等级结构<br><a name="hmBFh"></a></p>
<h2 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h2></li>
<li><p>工厂类负责创建的对象比较少，由于创建的对象较少，不会造成工厂方法中的业务逻辑太过复杂</p>
</li>
<li><p>客户端只知道传入工厂类的参数，对于如何创建对象并不关心<br><a name="WzK1X"></a></p>
<h1 id="工厂方法模式"><a href="#工厂方法模式" class="headerlink" title="工厂方法模式"></a>工厂方法模式</h1><p>简单工厂模式虽然简单，但存在一个很严重的问题<br />当系统中需要引入新产品时，由于静态工厂方法通过所传入参数的不同来创建不同的产品<br />这必定要修改工厂类的源代码，将违背“开闭原则”，如何实现增加新产品而不影响已有代码？<br />工厂方法模式应运而生。<br><a name="SWJ9b"></a></p>
<h2 id="角色-1"><a href="#角色-1" class="headerlink" title="角色"></a>角色</h2><p><a name="fg9vc"></a></p>
<h3 id="Product-抽象产品"><a href="#Product-抽象产品" class="headerlink" title="Product 抽象产品"></a>Product 抽象产品</h3><blockquote>
<p>它是定义产品的接口，是工厂方法模式所创建对象的超类型，也就是产品对象的公共父类</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Logger</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeLog</span><span class="params">()</span></span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
<p><a name="yp1YA"></a></p>
<h3 id="ConcreteProduct-具体产品"><a href="#ConcreteProduct-具体产品" class="headerlink" title="ConcreteProduct 具体产品"></a>ConcreteProduct 具体产品</h3><blockquote>
<p>它实现了抽象产品接口，某种类型的具体产品由专门的具体工厂创建，具体工厂和具体产品之间一一对应</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DatabaseLogger</span> <span class="keyword">implements</span> <span class="title">Logger</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeLog</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;数据库日志记录。&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileLogger</span> <span class="keyword">implements</span> <span class="title">Logger</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeLog</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;文件日志记录。&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a name="GSv6S"></a></p>
<h3 id="Factory-抽象工厂"><a href="#Factory-抽象工厂" class="headerlink" title="Factory 抽象工厂"></a>Factory 抽象工厂</h3><blockquote>
<p>在抽象工厂类中，声明了工厂方法(Factory Method)，用于返回一个产品。抽象工厂是工厂方法模式的核心，所有创建对象的工厂类都必须实现该接口</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">LoggerFactory</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Logger <span class="title">createLogger</span><span class="params">()</span></span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
<p><a name="zmCLe"></a></p>
<h3 id="ConcreteFactory-具体工厂"><a href="#ConcreteFactory-具体工厂" class="headerlink" title="ConcreteFactory 具体工厂"></a>ConcreteFactory 具体工厂</h3><blockquote>
<p>它是抽象工厂类的子类，实现了抽象工厂中定义的工厂方法，并可由客户端调用，返回一个具体产品类的实例</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DatabaseLoggerFactory</span> <span class="keyword">implements</span> <span class="title">LoggerFactory</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Logger <span class="title">createLogger</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">            <span class="comment">//连接数据库，代码省略  </span></span><br><span class="line">            <span class="comment">//创建数据库日志记录器对象  </span></span><br><span class="line">            Logger logger = <span class="keyword">new</span> DatabaseLogger();   </span><br><span class="line">            <span class="comment">//初始化数据库日志记录器，代码省略  </span></span><br><span class="line">            <span class="keyword">return</span> logger;  </span><br><span class="line">    &#125;     </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileLoggerFactory</span> <span class="keyword">implements</span> <span class="title">LoggerFactory</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Logger <span class="title">createLogger</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">            <span class="comment">//创建文件日志记录器对象  </span></span><br><span class="line">            Logger logger = <span class="keyword">new</span> FileLogger();   </span><br><span class="line">            <span class="comment">//创建文件，代码省略  </span></span><br><span class="line">            <span class="keyword">return</span> logger;  </span><br><span class="line">    &#125;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a name="R55l1"></a></p>
<h2 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;  </span><br><span class="line">        LoggerFactory factory;  </span><br><span class="line">        Logger logger;  </span><br><span class="line">        factory = <span class="keyword">new</span> FileLoggerFactory();</span><br><span class="line">        logger = factory.createLogger();  </span><br><span class="line">        logger.writeLog();  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a name="k5NkB"></a></p>
<h2 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h2><ul>
<li><p>在工厂方法模式中，工厂方法用来创建客户所需要的产品，同时还向客户隐藏了哪种具体产品类将被实例化这一细节，用户只需要关心所需产品对应的工厂，无须关心创建细节，甚至无须知道具体产品类的类名</p>
</li>
<li><p>基于工厂角色和产品角色的多态性设计是工厂方法模式的关键。它能够让工厂可以自主确定创建何种产品对象，而如何创建这个对象的细节则完全封装在具体工厂内部。工厂方法模式之所以又被称为多态工厂模式，就正是因为所有的具体工厂类都具有同一抽象父类</p>
</li>
<li><p>使用工厂方法模式的另一个优点是在系统中加入新产品时，无须修改抽象工厂和抽象产品提供的接口，无须修改客户端，也无须修改其他的具体工厂和具体产品，而只要添加一个具体工厂和具体产品就可以了，这样，系统的可扩展性也就变得非常好，完全符合“开闭原则”<br><a name="RSOiE"></a></p>
<h2 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h2></li>
<li><p>在添加新产品时，需要编写新的具体产品类，而且还要提供与之对应的具体工厂类，系统中类的个数将成对增加，在一定程度上增加了系统的复杂度，有更多的类需要编译和运行，会给系统带来一些额外的开销</p>
</li>
<li><p>由于考虑到系统的可扩展性，需要引入抽象层，在客户端代码中均使用抽象层进行定义，增加了系统的抽象性和理解难度，且在实现时可能需要用到DOM、反射等技术，增加了系统的实现难度<br><a name="NbhaS"></a></p>
<h2 id="适用场景-1"><a href="#适用场景-1" class="headerlink" title="适用场景"></a>适用场景</h2></li>
<li><p>客户端不知道它所需要的对象的类。在工厂方法模式中，客户端不需要知道具体产品类的类名，只需要知道所对应的工厂即可，具体的产品对象由具体工厂类创建，可将具体工厂类的类名存储在配置文件或数据库中</p>
</li>
<li><p>抽象工厂类通过其子类来指定创建哪个对象。在工厂方法模式中，对于抽象工厂类只需要提供一个创建产品的接口，而由其子类来确定具体要创建的对象，利用面向对象的多态性和里氏代换原则，在程序运行时，子类对象将覆盖父类对象，从而使得系统更容易扩展、<br><a name="mptuA"></a></p>
<h1 id="抽象工厂模式"><a href="#抽象工厂模式" class="headerlink" title="抽象工厂模式"></a>抽象工厂模式</h1><p>工厂方法模式通过引入工厂等级结构，解决了简单工厂模式中工厂类职责太重的问题，但由于工厂方法模式中的每个工厂只生产一类产品，可能会导致系统中存在大量的工厂类，势必会增加系统的开销。<br />此时，我们可以考虑将一些相关的产品组成一个“产品族”，由同一个工厂来统一生产，这就是我们本文将要学习的抽象工厂模式的基本思想<br><a name="aieYX"></a></p>
<h2 id="角色-2"><a href="#角色-2" class="headerlink" title="角色"></a>角色</h2><p><a name="srUR9"></a></p>
<h2 id="AbstractFactory-抽象工厂"><a href="#AbstractFactory-抽象工厂" class="headerlink" title="AbstractFactory 抽象工厂"></a>AbstractFactory 抽象工厂</h2><blockquote>
<p>它声明了一组用于创建一族产品的方法，每一个方法对应一种产品</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">SkinFactory</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Button <span class="title">createButton</span><span class="params">()</span></span>;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> TextField <span class="title">createTextField</span><span class="params">()</span></span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
<p><a name="kmKQY"></a></p>
<h2 id="ConcreteFactory-具体工厂-1"><a href="#ConcreteFactory-具体工厂-1" class="headerlink" title="ConcreteFactory 具体工厂"></a>ConcreteFactory 具体工厂</h2><blockquote>
<p>它实现了在抽象工厂中声明的创建产品的方法，生成一组具体产品，这些产品构成了一个产品族，每一个产品都位于某个产品等级结构中</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpringSkinFactory</span> <span class="keyword">implements</span> <span class="title">SkinFactory</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Button <span class="title">createButton</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SpringButton();  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> TextField <span class="title">createTextField</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SpringTextField();  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SummerSkinFactory</span> <span class="keyword">implements</span> <span class="title">SkinFactory</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Button <span class="title">createButton</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SummerButton();  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> TextField <span class="title">createTextField</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SummerTextField();  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a name="nnBME"></a></p>
<h2 id="AbstractProduct-抽象产品"><a href="#AbstractProduct-抽象产品" class="headerlink" title="AbstractProduct 抽象产品"></a>AbstractProduct 抽象产品</h2><blockquote>
<p>它为每种产品声明接口，在抽象产品中声明了产品所具有的业务方法</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Button</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">TextField</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
<p><a name="sev9U"></a></p>
<h2 id="ConcreteProduct-具体产品-1"><a href="#ConcreteProduct-具体产品-1" class="headerlink" title="ConcreteProduct 具体产品"></a>ConcreteProduct 具体产品</h2><blockquote>
<p>它定义具体工厂生产的具体产品对象，实现抽象产品接口中声明的业务方法</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpringButton</span> <span class="keyword">implements</span> <span class="title">Button</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;显示浅绿色按钮。&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SummerButton</span> <span class="keyword">implements</span> <span class="title">Button</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;显示浅蓝色按钮。&quot;</span>);  </span><br><span class="line">    &#125;     </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpringTextField</span> <span class="keyword">implements</span> <span class="title">TextField</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;显示绿色边框文本框。&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SummerTextField</span> <span class="keyword">implements</span> <span class="title">TextField</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;显示蓝色边框文本框。&quot;</span>);  </span><br><span class="line">    &#125;     </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p><a name="tSQpy"></a></p>
<h2 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;  </span><br><span class="line">        <span class="comment">//使用抽象层定义  </span></span><br><span class="line">        SkinFactory factory;  </span><br><span class="line">        Button bt;  </span><br><span class="line">        TextField tf;  </span><br><span class="line">        factory = <span class="keyword">new</span> SpringSkinFactory();  </span><br><span class="line">        bt = factory.createButton();  </span><br><span class="line">        tf = factory.createTextField();  </span><br><span class="line">        bt.display();  </span><br><span class="line">        tf.display();  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a name="PTbnr"></a></p>
<h2 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h2><ul>
<li><p>抽象工厂模式隔离了具体类的生成，使得客户并不需要知道什么被创建。由于这种隔离，更换一个具体工厂就变得相对容易，所有的具体工厂都实现了抽象工厂中定义的那些公共接口，因此只需改变具体工厂的实例，就可以在某种程度上改变整个软件系统的行为</p>
</li>
<li><p>当一个产品族中的多个对象被设计成一起工作时，它能够保证客户端始终只使用同一个产品族中的对象</p>
</li>
<li><p>增加新的产品族很方便，无须修改已有系统，符合“开闭原则”<br><a name="fC6dp"></a></p>
<h2 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h2></li>
<li><p>增加新的产品等级结构麻烦，需要对原有系统进行较大的修改，甚至需要修改抽象层代码，这显然会带来较大的不便，违背了“开闭原则”<br><a name="fsGhI"></a></p>
<h2 id="适用场景-2"><a href="#适用场景-2" class="headerlink" title="适用场景"></a>适用场景</h2></li>
<li><p>一个系统不应当依赖于产品类实例如何被创建、组合和表达的细节，这对于所有类型的工厂模式都是很重要的，用户无须关心对象的创建过程，将对象的创建和使用解耦</p>
</li>
<li><p>系统中有多于一个的产品族，而每次只使用其中某一产品族。可以通过配置文件等方式来使得用户可以动态改变产品族，也可以很方便地增加新的产品族</p>
</li>
<li><p>属于同一个产品族的产品将在一起使用，这一约束必须在系统的设计中体现出来。同一个产品族中的产品可以是没有任何关系的对象，但是它们都具有一些共同的约束，如同一操作系统下的按钮和文本框，按钮与文本框之间没有直接关系，但它们都是属于某一操作系统的，此时具有一个共同的约束条件：操作系统的类型</p>
</li>
<li><p>产品等级结构稳定，设计完成之后，不会向系统中增加新的产品等级结构或者删除已有的产品等级结构</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>设计模式</tag>
        <tag>创建型模式</tag>
      </tags>
  </entry>
  <entry>
    <title>关于@Autowired注解失效问题</title>
    <url>/2022/06/02/0.2.6-%E5%85%B3%E4%BA%8E-Autowired%E6%B3%A8%E8%A7%A3%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="关于-Autowired注解扫描不到"><a href="#关于-Autowired注解扫描不到" class="headerlink" title="关于@Autowired注解扫描不到"></a>关于@Autowired注解扫描不到</h1><h2 id="expected-at-least-1-bean-which-qualifies-as-autowire-candidate"><a href="#expected-at-least-1-bean-which-qualifies-as-autowire-candidate" class="headerlink" title="expected at least 1 bean which qualifies as autowire candidate"></a>expected at least 1 bean which qualifies as autowire candidate</h2><p>需求：在旧的SSM项目中，经常会出现找不到Bean的情况，然后会报红色下划线<br>解决方式：检查配置，检查注解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> CommonService commonservice;</span><br></pre></td></tr></table></figure>

<h2 id="1-检查配置文件"><a href="#1-检查配置文件" class="headerlink" title="1.检查配置文件"></a>1.检查配置文件</h2><p>检查spring配置文件是否有去扫描包（如果少了这一步就报错找不到Bean）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!-- 自动扫描 --&gt;</span><br><span class="line">&lt;context:component-scan base-<span class="keyword">package</span>=<span class="string">&quot;com.foam&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-是否有注解"><a href="#2-是否有注解" class="headerlink" title="2.是否有注解"></a>2.是否有注解</h2><p>比如如service，repository，component，controller，Mapper等。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CompanyMapper</span></span>&#123;</span><br><span class="line">……</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Service</span></span>&#123;</span><br><span class="line">……</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-是否有配置监听器"><a href="#3-是否有配置监听器" class="headerlink" title="3.是否有配置监听器"></a>3.是否有配置监听器</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 上下文配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:config/spring/spring-*.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">&lt;!-- 监听器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul>
<li><p><a href="https://www.codeleading.com/article/48301785999/">springmvc流程分析，读取web.xml配置被扫描bean - 代码先锋</a></p>
</li>
<li><p><a href="https://blog.csdn.net/xz842913787/article/details/107374583/">expected at least 1 bean which qualifies as autowire candidate(Spring Bean 无法注入)_熊猫同学呀的博客-CSDN博客</a></p>
</li>
<li><p><a href="https://www.bbsmax.com/A/LPdor2k253/">SpringMVC自动扫描@Controller注解的bean</a></p>
</li>
<li><p><a href="https://baijiahao.baidu.com/s?id=1708900834172989079&wfr=spider&for=pc">关于@Autowired的这些新姿势，你学会了？</a></p>
</li>
</ul>
]]></content>
      <tags>
        <tag>问题解析</tag>
      </tags>
  </entry>
  <entry>
    <title>maven数据源</title>
    <url>/2022/08/17/0.3.1-maven%E6%95%B0%E6%8D%AE%E6%BA%90/</url>
    <content><![CDATA[<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun public<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-central<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun central<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/central<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-spring<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun spring<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/spring<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-spring-plugin<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun spring-plugin<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/spring-plugin<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-apache-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun apache-snapshots<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/apache-snapshots<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-google<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun google<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/google<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-gradle-plugin<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun gradle-plugin<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/gradle-plugin<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-jcenter<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun jcenter<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/jcenter<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun releases<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/releases<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun snapshots<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/snapshots<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-grails-core<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun grails-core<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/grails-core<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-mapr-public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun mapr-public<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/mapr-public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-mapr-publicss<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun mapr-publicss<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://mvnrepository.com/artifact<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>openFeign引入失败</title>
    <url>/2022/08/22/0.3.2-openFeign%E5%BC%95%E5%85%A5%E5%A4%B1%E8%B4%A5/</url>
    <content><![CDATA[<p>最近用nacos集成openFeign的时候，遇到一直引入不了依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 添加 openfeign 框架依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>一开始以为是maven源的问题，所以加了特别多的仓库都没有解决，后面试着加版本号，没想到就解决了</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 添加 openfeign 框架依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>而且在启动类中也可使用@EnableFeignClients注解<br />如果下次引入依赖，没有指定版本，可以试试指定一下版本，最新的不行就用稳定版本</p>
]]></content>
      <tags>
        <tag>中间件</tag>
        <tag>openFeign</tag>
      </tags>
  </entry>
  <entry>
    <title>JVM的组成</title>
    <url>/2022/10/14/0.3.3-JVM%E7%9A%84%E7%BB%84%E6%88%90/</url>
    <content><![CDATA[<p>Java Virtual Machine<br />虚拟机是一种抽象化的计算机，通过在实际的计算机上仿真模拟各种计算机功能来实现，java虚拟机有自己完善的硬件架构，如处理器，堆栈，寄存器等，还具有相应的指令系统<br><a name="eRd2Q"></a></p>
<h1 id="一次编译，到处运行"><a href="#一次编译，到处运行" class="headerlink" title="一次编译，到处运行"></a>一次编译，到处运行</h1><p>Java语言使用Java虚拟机屏蔽了与具体平台相关的信息，使得Java语言编译程序只需生成在Java虚拟机上运行的目标代码（字节码），就可以在多种平台上不加修改地运行<br><a name="X7Uxh"></a></p>
<h1 id="开篇"><a href="#开篇" class="headerlink" title="开篇"></a>开篇</h1><p>程序在执行之前，先要把Java代码编译成字节码（.class文件），JVM首先需要把字节码通过类加载器把文件加载到内存中的运行时数据区中。因为字节码文件是JVM的一套指令集规范，并不能直接交给底层操作系统去执行，因此需要执行引擎将字节码翻译成底层系统指令再交由CPU去执行，而这个过程中需要调用本地库接口来实现整个程序的功能。<br />我们通常所说的JVM组成指的是运行时数据区，因为通常需要程序员调试分析的区域就是运行时数据区，或者更具体地说是运行时数据区里面的堆（Heap）模块。<br><a name="glul1"></a></p>
<h1 id="完整构成"><a href="#完整构成" class="headerlink" title="完整构成"></a>完整构成</h1><p><img src="https://cdn.jsdelivr.net/gh/FoamTomato/images@main/imgs/24ae1eb00a754f528a62787cb885101.png"><br><a name="yvrAh"></a></p>
<h2 id="基本构成"><a href="#基本构成" class="headerlink" title="基本构成"></a>基本构成</h2><p><img src="https://cdn.jsdelivr.net/gh/FoamTomato/images@main/imgs/bffcc48b5af9cfaf8ef9d2a1eb7d3f42.jpg"><br><a name="e5jsW"></a></p>
<h3 id="类加载器-ClassLoader"><a href="#类加载器-ClassLoader" class="headerlink" title="类加载器-ClassLoader"></a>类加载器-ClassLoader</h3><p>ClassLoader 负责加载字节码文件即 class 文件<br />class 文件在文件开头有特定的文件标示<br /><br><img src="https://cdn.jsdelivr.net/gh/FoamTomato/images@main/imgs/ghbjtfhfgc68764ffcvt.png"></p>
<blockquote>
<p>魔数：0X CA FE BA BE（）<br>如果一个文件不是以0xCAFEBABE 开头的，那它肯定不是java class文件</p>
</blockquote>
<p>ClassLoader 只负责class 文件的加载，至于它是否可以运行，则由 Execution Engine 决定。<br><a name="oT0aC"></a></p>
<h3 id="执行引擎-Execution-Engine"><a href="#执行引擎-Execution-Engine" class="headerlink" title="执行引擎-Execution Engine"></a>执行引擎-Execution Engine</h3><p>执行引擎，也叫 Interpreter。Class 文件被加载后，会把指令和数据信息放入内存中，Execution Engine 则负责把这些命令解释给操作系统，即将 JVM 指令集翻译为操作系统指令集。<br><a name="Q3Dka"></a></p>
<h3 id="本地接口-Native-Interface"><a href="#本地接口-Native-Interface" class="headerlink" title="本地接口-Native Interface"></a>本地接口-Native Interface</h3><p>本地接口的作用是融合不同的编程语言为Java 所用，初衷是融合C/C++ 程序<br />它的作用是调用不同语言的接口给 JAVA 用（现在主要是一些硬件交互），它会在 Native Method Stack 中记录对应的本地方法，然后调用该方法时就通过 Execution Engine 加载对应的本地 lib（本地方法库-native libraies）<br />原本多用于一些专业领域，如JAVA驱动，地图制作引擎等，现在关于这种本地方法接口的调用已经被类似于Socket通信，WebService等方式取代。<br><a name="kjfsH"></a></p>
<h3 id="运行时数据区-Runtime-Data-Area"><a href="#运行时数据区-Runtime-Data-Area" class="headerlink" title="运行时数据区-Runtime Data Area"></a>运行时数据区-Runtime Data Area</h3><p>Runtime Data Area 是存放数据的，分为五部分：Stack（虚拟机栈），Heap（堆），Method Area（方法区），PC Register（程序计数器），Native Method Stack（本地方法栈）<br />几乎所有的关于 Java 内存方面的问题，都是集中在这块<br /><br><img src="https://cdn.jsdelivr.net/gh/FoamTomato/images@main/imgs/2d4872048ed0b91a683b003723556ebe.jpg"><br><a name="TRBH3"></a></p>
<h4 id="线程私有的内存区域"><a href="#线程私有的内存区域" class="headerlink" title="线程私有的内存区域"></a>线程私有的内存区域</h4><p><a name="nZXWS"></a></p>
<h5 id="程序计数器（Program-Counter-Register）"><a href="#程序计数器（Program-Counter-Register）" class="headerlink" title="程序计数器（Program Counter Register）"></a>程序计数器（Program Counter Register）</h5><p>它是一块较小的内存空间（可能位于cpu的寄存器，有待确认），可以看做是当前字节码指令执行的行号指示器，记录了当前正在执行的虚拟机字节码指令地址，每条线程都要有一个独立的程序计数器，这类内存也称为“线程私有”的内存。<br />虚拟机的概念模型里，字节码解析器的工作是通过改变这个计数器的值来选取下一条需要执行的字节码指令，比如分支、循环、跳转、异常处理、线程恢复等基础功能都需要依赖这个计数器来完成。<br />由于JVM的多线程是通过线程轮流切换并分配处理器执行时间的方式来实现的，也就是说在任何时刻，一个处理器（或者说一个内核）都只会执行一条线程中的指令。<br />每个线程都有各自独立的程序计数器，注意如果正在执行的是 Native方法，则程序计数器为空（Undifined），并且 JVM 规范中并没有对程序计数器定义 <strong>OutOfMemoryError</strong> 异常。<br><a name="Y0H9f"></a></p>
<h5 id="虚拟机栈（VM-Stack）"><a href="#虚拟机栈（VM-Stack）" class="headerlink" title="虚拟机栈（VM Stack）"></a>虚拟机栈（VM Stack）</h5><p>虚拟机栈也是线程私有的，它描述的是<strong>Java方法执行的内存模型</strong>：每个方法在执行的同时都会创建一个栈帧（Stack Frame），用于存储局部变量表、操作数栈、动态链接、方法出口等信息，每一个方法从调用直至完成的过程，就对应着一个栈帧在虚拟机栈中入栈和出栈的过程。<br />虚拟机栈帧中，局部变量表是比较为人所熟知的，也就是平常所说的“栈”，局部变量表所需的内存空间在编译期间分配完成，当进入一个方法时，这个方法需要在栈帧中分配多大的局部变量空间是完全确定的，在方法运行期间不会改变局部变量表的大小。<br />生命周期与线程相同，不存在垃圾回收，线程结束，内存释放<br />虚拟机栈有两种异常情况：</p>
<ol>
<li><strong>StackOverflowError</strong>：线程请求的栈深度大于虚拟机所允许的深度，特别是方法的递归调用时（有空程序模拟一下）</li>
<li><strong>OutOfMemoryError</strong>：虚拟机栈无法满足线程所申请的空间需求，即使经过动态扩展仍然无法满足时抛出（有空程序模拟一下）</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/FoamTomato/images@main/imgs/1595409-20190613234744898-1374213696.png"><br><a name="d6pMq"></a></p>
<h5 id="本地方法栈（Native-Method-Stack）"><a href="#本地方法栈（Native-Method-Stack）" class="headerlink" title="本地方法栈（Native Method Stack）"></a>本地方法栈（Native Method Stack）</h5><p>本地方法栈与虚拟机栈相似，区别是虚拟机栈为执行 Java 方法服务，而本地方法栈则为 Native 方法服务，有些虚拟机将这两个区域合二为一。</p>
<ul>
<li>在Execution Engine执行引擎执行时，通过Native Interface 本地接口调用已登记的native library</li>
<li>本地方法栈中抛出异常的情况与虚拟机栈相同，本地方法栈也会在栈深度溢出或者栈扩展失败时分别抛出StackOverflowError和OutOfMemoryError异常</li>
</ul>
<p>使用场景：与一些底层系统如操作系统或某些硬件交换信息，如打印机<br><a name="dZdAm"></a></p>
<h4 id="线程共享的内存区域"><a href="#线程共享的内存区域" class="headerlink" title="线程共享的内存区域"></a>线程共享的内存区域</h4><p><a name="JWESp"></a></p>
<h5 id="堆（Heap）"><a href="#堆（Heap）" class="headerlink" title="堆（Heap）"></a>堆（Heap）</h5><p>对于<strong>java应用程序</strong>来讲，堆是<strong>jvm</strong>所管理的内存中最大的一块。是被所有线程共享的一块区域，并在虚拟机启动时创建。此区域的唯一目的就是存放对象实例，<strong>java</strong>程序里“几乎”所有的对象实例都会在这里创建并分配内存。</p>
<ul>
<li><strong>所有的对象实例以及数组都应当在堆上分配</strong></li>
</ul>
<p>堆也是垃圾收集器所管理的主要区域，因此很多时候也被称作<strong>GC堆</strong>。<br><a name="XZqvL"></a></p>
<h6 id="从内存回收的角度来看"><a href="#从内存回收的角度来看" class="headerlink" title="从内存回收的角度来看"></a>从内存回收的角度来看</h6><p>由于现在收集器基本都采用分代收集算法，因此堆还可以被细分为：<strong>新生代和老年代</strong>。<br />再继续细分可以分为：<strong>Eden空间、From Survivor空间（s0）、To Survivor空间(s1)等</strong><br><a name="BEJXr"></a></p>
<h6 id="从内存分配的角度来看"><a href="#从内存分配的角度来看" class="headerlink" title="从内存分配的角度来看"></a>从内存分配的角度来看</h6><p>线程共享的堆中还可以划分出多个线程私有的分配缓冲区（Thread Local Allocation Buffer，TLAB）<br />堆可以是物理上不连续的空间，只要逻辑上是连续的即可，-Xmx和-Xms参数可以控制堆的最大和最小值</p>
<ul>
<li>堆的空间大小不满足时将抛出OutOfMemoryError异常<br><a name="XbLdT"></a><h5 id="方法区（Method-Area）"><a href="#方法区（Method-Area）" class="headerlink" title="方法区（Method Area）"></a>方法区（Method Area）</h5>用于存储已被虚拟机加载的类信息、常量、静态变量、JIT编译后的代码等数据。<br />Java虚拟机规范将方法区描述为堆的一个逻辑部分，但是它却有一个别名叫做Non-Heap（非堆）,目的应该是与java堆区分开来。<br />误区：方法区不等于永久代<blockquote>
<p>很多人原因把方法区称作“永久代”（Permanent Generation），本质上两者并不等价，只是HotSpot虚拟机垃圾回收器团队把GC分代收集扩展到了方法区，或者说是用来永久代来实现方法区而已，这样能省去专门为方法区编写内存管理的代码，但是在Jdk8也移除了“永久代”，使用Native Memory来实现方法区</p>
</blockquote>
</li>
</ul>
<p>在方法区中有一部分区域用来存储编译期产生的各种字面量和符号引用，这部分内容将在类加载后进入方法区的运行时常量池中存放。这里需要说明一点，常量并不是只能在编译期产生，运行期间也会产生新的常量并被发在常量池中，如 String 类的 intern() 方法。<br />方法区同样会抛出OutOfMemoryError异常<br><a name="ARZYT"></a></p>
<h5 id="直接内存"><a href="#直接内存" class="headerlink" title="直接内存"></a>直接内存</h5><p>注意直接内存不属于虚拟机运行时数据区的一部分，也不是 JVM 规范中定义的内存区域，其主要用于 JDK1.4 引入的基于通道(Channel)和缓冲区(Buffer)的 NIO 类，可以避免在 Native 堆和 Java 堆之间来回复制数据从而提高性能。<br />该部分内存分配不受 Java 堆内存大小的限制，但是肯定也受限于机器硬件内存的限制，在设置虚拟机参数的时候，不能忽略直接内存，把实际内存设置为-Xmx，使得内存区域的总和大于物理内存的限制，从而导致动态扩展时出现OutOfMemoryError异常。<br><a name="MoXoE"></a></p>
<h2 id="栈帧构成（Stack-Frame）"><a href="#栈帧构成（Stack-Frame）" class="headerlink" title="栈帧构成（Stack Frame）"></a>栈帧构成（Stack Frame）</h2><blockquote>
<p>一个栈帧需要分配多少内存，不会受到程序运行期变量数据的影响，而仅仅取决于具体的虚拟机实现</p>
</blockquote>
<p>每一个栈帧都包括了局部变量表、操作数栈、动态连接、方法返回地址和一些额外的附加信息，方法从调用开始到执行完成，就对应着一个栈帧在虚拟机栈里面从入栈到出栈的过程<br />在编译程序代码的时候，栈帧中需要多大的局部变量表，多深的操作数栈都已经完全确定了，并且写入到方法表的Code属性中了，因此一个栈帧需要分配多少内存，不会受到程序运行期变量数据的影响，而仅仅取决于具体虚拟机的实现。<br /><strong>当前栈帧</strong><br />一个线程中的方法调用链可能会很长，很多方法都同时处于执行状态。<br />对于执行引擎来说，在活动线程中，只有位于栈顶的栈帧才是最有效的,称为当前栈帧(Current Stack Frame),与这个栈帧相关联的方法称为当前方法。<br />执行引擎运行的所有的字节码指令都只针对当前栈帧进行操作<br><a name="UfsED"></a></p>
<h3 id="局部变量表（Local-Variable-Table）"><a href="#局部变量表（Local-Variable-Table）" class="headerlink" title="局部变量表（Local Variable Table）"></a>局部变量表（<strong>Local Variable Table</strong>）</h3><p>局部变量表(Local Variable Table)是一组变量值存贮空间，用于存放方法参数和方法内定义的局部变量<br />在Java程序编译为Class文件时候，就在方法的Code属性的max_locals数据项中确定了该方法所需要分配的局部变量表的最大容量<br />局部变量表的容量以变量槽为最小单位<br><a name="qNhd4"></a></p>
<h4 id="变量槽（Variable-Slot）"><a href="#变量槽（Variable-Slot）" class="headerlink" title="变量槽（Variable Slot）"></a>变量槽（Variable Slot）</h4><p>每个变量槽都可以存储32位长度的内存空间，例如boolean、byte、char、short、int、float、reference和returnAddress<br />对于64位长度的数据类型（long，double），虚拟机会以高位对齐方式为其分配两个连续的Slot空间，也就是相当于把一次long和double数据类型读写分割成为两次32位读写。<br />为了节省栈帧空间，局部变量表中的Slot是可以重用的，方法体中定义的变量，其作用域并不一定会覆盖整个方法体，如果当前字节码PC计数器的值已经超过了某个变量的作用域，那么这个变量对应的Slot就可以交给其他变量使用。<br />这种机制有时候会影响垃圾回收行为（如大方法占用较多的Slot，执行完该方法的作用域后没有对Slot赋值或者清空设置null值，垃圾回收器便不能及时的回收该内存）<br />如果执行的是实例方法，那局部变量表中第 0 位索引的 Slot 默认是用于传递方法所属对象实例的引用（在方法中可以通过关键字 this 来访问到这个隐含的参数）<br />jvm不会给局部变量赋初始值，只给全局变量赋初始值。<br><a name="cQl6b"></a></p>
<h3 id="操作数栈（Operand-Stack）"><a href="#操作数栈（Operand-Stack）" class="headerlink" title="操作数栈（Operand Stack）"></a><strong>操作数栈（Operand Stack）</strong></h3><p>操作数栈（Operand Stack）也常称为操作栈，是一个后入先出栈。<br />在Class 文件的Code 属性的 max_stacks 指定了执行过程中最大的栈深度。<br />Java 虚拟机的解释执行引擎称为”基于栈的执行引擎“，这里的栈就是指操作数栈。</p>
<blockquote>
<p>当一个方法刚刚开始执行的时候，这个方法的操作数栈是空的，在方法执行的过程中，会有各种字节码指令往操作数栈中写入和提取内容，也就是出栈 / 入栈操作。例如，在做算术运算的时候是通过操作数栈来进行的，又或者在调用其它方法的时候是通过操作数栈来进行参数传递的</p>
</blockquote>
<p><a name="WSMmI"></a></p>
<h4 id="jvm对操作数栈的优化"><a href="#jvm对操作数栈的优化" class="headerlink" title="jvm对操作数栈的优化"></a>jvm对操作数栈的优化</h4><p>在概念模型中，两个栈帧是相互独立的。但是大多数虚拟机的实现都会进行优化，令两个栈帧出现一<strong>部分重叠</strong>。令下面的部分操作数栈与上面的局部变量表重叠在一块，这样在方法调用的时候可以共用一部分数据，<strong>无需进行额外的参数复制传递</strong><br />操作栈调用其它有返回结果的方法时，会把结果 push 到栈上（通过操作数栈来进行参数传递）<br><a name="XSsDT"></a></p>
<h3 id="动态链接（Dynamic-Linking）"><a href="#动态链接（Dynamic-Linking）" class="headerlink" title="动态链接（Dynamic Linking）"></a><strong>动态链接（Dynamic Linking）</strong></h3><p>每个栈帧都包含一个执行运行时常量池中该栈帧所属方法的引用，持有这个引用是为了支持方法调用过程中的动态连接（Dynamic Linking）<br />Class 文件中存放了大量的符号引用，字节码中的方法调用指令就是以常量池中指向方法的符号引用作为参数。这些符号引用一部分会在类加载阶段或第一次使用时转化为直接引用，这种转化称为<strong>静态解析</strong>。另一部分将在每一次运行期间转化为直接引用，这部分称为<strong>动态连接</strong>。<br><a name="haBHn"></a></p>
<h3 id="返回地址（Return-Address）"><a href="#返回地址（Return-Address）" class="headerlink" title="返回地址（Return Address）"></a><strong>返回地址（Return Address）</strong></h3><p><strong>当一个方法开始执行以后，只有两种方法可以退出当前方法</strong>：</p>
<ol>
<li>当执行遇到返回指令，会将返回值传递给上层的方法调用者，这种退出的方式称为正常完成出口（Normal Method Invocation Completion），一般来说，调用者的PC计数器可以作为返回地址。</li>
<li>当执行遇到异常，并且当前方法体内没有得到处理，就会导致方法退出，此时是没有返回值的，称为异常完成出口（Abrupt Method Invocation Completion），返回地址要通过异常处理器表来确定。</li>
</ol>
<p><strong>当方法返回时，可能进行3个操作</strong>：</p>
<ol>
<li>恢复上层方法的局部变量表和操作数栈</li>
<li>把返回值压入调用者调用者栈帧的操作数栈</li>
<li>调整 PC 计数器的值以指向方法调用指令后面的一条指令<br><a name="Zxlwk"></a><h3 id="附加信息（Additional-information）"><a href="#附加信息（Additional-information）" class="headerlink" title="附加信息（Additional information）"></a>附加信息（Additional information）</h3>虚拟机规范允许具体的虚拟机实现增加一些规范里没有描述的信息到栈帧之中，例如与调试相关的信息，这部分信息完全取决于具体的虚拟机实现。<br />在实际开发中，一般会把动态连接、方法返回地址与其他附加信息全部归为一类，称为栈帧信息。<br><a name="tURnW"></a><h3 id="帧数据区（Frame-Data）"><a href="#帧数据区（Frame-Data）" class="headerlink" title="帧数据区（Frame Data）"></a><strong>帧数据区（Frame Data）</strong></h3>帧数据区的大小依赖于 JVM 的具体实现<br />这部分的作用主要有三部分：</li>
</ol>
<ul>
<li>常量池中数据的解析</li>
<li>方法运行完后处理方法返回，恢复调用方现场</li>
<li>方法运行过程中抛出异常时的异常处理，存储有一个异常表，当出现异常时虚拟机查找相应的异常表看是否有相应的Catch语句，假设没有就抛出异常终止这种方法调<br><a name="W3IyT"></a><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><a href="https://java.jverson.com/jvm/jvm-components.html">https://java.jverson.com/jvm/jvm-components.html</a><br><a href="https://baijiahao.baidu.com/s?id=1720844278862268813&amp;wfr=spider&amp;for=pc">https://baijiahao.baidu.com/s?id=1720844278862268813&amp;wfr=spider&amp;for=pc</a><br><a href="https://blog.csdn.net/wendyyanan/article/details/104261162">https://blog.csdn.net/wendyyanan/article/details/104261162</a><br><a href="https://www.cnblogs.com/jhxxb/p/11001238.html">https://www.cnblogs.com/jhxxb/p/11001238.html</a><br><a href="https://juejin.cn/post/6844903655796113421">https://juejin.cn/post/6844903655796113421</a></li>
</ul>
]]></content>
      <tags>
        <tag>jvm</tag>
      </tags>
  </entry>
  <entry>
    <title>网页添加L2D猫</title>
    <url>/2022/07/30/0.3.0-%E7%BD%91%E9%A1%B5%E6%B7%BB%E5%8A%A0L2D%E7%8C%AB/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- saved from url=(0047)https://www.cnblogs.com/icemomo/p/16004713.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-cn&quot;</span> <span class="attr">style</span>=<span class="string">&quot;--olcb-folder-code-block-max-height:80vh;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;windows desktop landscape&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;light&quot;</span> <span class="attr">theme</span>=<span class="string">&quot;a&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;referrer&quot;</span> <span class="attr">content</span>=<span class="string">&quot;origin-when-cross-origin&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Cache-Control&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-transform&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Cache-Control&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-siteapp&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"><span class="selector-class">.heart</span>&#123;<span class="attribute">width</span>: <span class="number">10px</span>;<span class="attribute">height</span>: <span class="number">10px</span>;<span class="attribute">position</span>: fixed;<span class="attribute">background</span>: <span class="number">#f00</span>;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);-webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);-moz-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);&#125;<span class="selector-class">.heart</span>:after,.heart:before&#123;content: <span class="string">&#x27;&#x27;</span>;<span class="attribute">width</span>: inherit;<span class="attribute">height</span>: inherit;<span class="attribute">background</span>: inherit;<span class="attribute">border-radius</span>: <span class="number">50%</span>;-webkit-<span class="attribute">border-radius</span>: <span class="number">50%</span>;-moz-<span class="attribute">border-radius</span>: <span class="number">50%</span>;<span class="attribute">position</span>: absolute;&#125;<span class="selector-class">.heart</span>:after&#123;top: -<span class="number">5px</span>;&#125;<span class="selector-class">.heart</span>:before&#123;left: -<span class="number">5px</span>;&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;origin-trial&quot;</span> <span class="attr">content</span>=<span class="string">&quot;AzoawhTRDevLR66Y6MROu167EDncFPBvcKOaQispTo9ouEt5LvcBjnRFqiAByRT+2cDHG1Yj4dXwpLeIhc98/gIAAACFeyJvcmlnaW4iOiJodHRwczovL2RvdWJsZWNsaWNrLm5ldDo0NDMiLCJmZWF0dXJlIjoiUHJpdmFjeVNhbmRib3hBZHNBUElzIiwiZXhwaXJ5IjoxNjYxMjk5MTk5LCJpc1N1YmRvbWFpbiI6dHJ1ZSwiaXNUaGlyZFBhcnR5Ijp0cnVlfQ==&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;origin-trial&quot;</span> <span class="attr">content</span>=<span class="string">&quot;A6+nc62kbJgC46ypOwRsNW6RkDn2x7tgRh0wp7jb3DtFF7oEhu1hhm4rdZHZ6zXvnKZLlYcBlQUImC4d3kKihAcAAACLeyJvcmlnaW4iOiJodHRwczovL2dvb2dsZXN5bmRpY2F0aW9uLmNvbTo0NDMiLCJmZWF0dXJlIjoiUHJpdmFjeVNhbmRib3hBZHNBUElzIiwiZXhwaXJ5IjoxNjYxMjk5MTk5LCJpc1N1YmRvbWFpbiI6dHJ1ZSwiaXNUaGlyZFBhcnR5Ijp0cnVlfQ==&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;origin-trial&quot;</span> <span class="attr">content</span>=<span class="string">&quot;A/9La288e7MDEU2ifusFnMg1C2Ij6uoa/Z/ylwJIXSsWfK37oESIPbxbt4IU86OGqDEPnNVruUiMjfKo65H/CQwAAACLeyJvcmlnaW4iOiJodHRwczovL2dvb2dsZXRhZ3NlcnZpY2VzLmNvbTo0NDMiLCJmZWF0dXJlIjoiUHJpdmFjeVNhbmRib3hBZHNBUElzIiwiZXhwaXJ5IjoxNjYxMjk5MTk5LCJpc1N1YmRvbWFpbiI6dHJ1ZSwiaXNUaGlyZFBhcnR5Ijp0cnVlfQ==&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./Java读取配置文件的几种方式 - 冰莫莫 - 博客园_files/pubads_impl_2022071401.js.下载&quot;</span> <span class="attr">async</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./Java读取配置文件的几种方式 - 冰莫莫 - 博客园_files/L2Dwidget.min.js.下载&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.live2d-widget-dialog-container</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">height</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">    <span class="attribute">bottom</span>: <span class="number">65%</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">right</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">transform-origin</span>: right;</span></span><br><span class="line"><span class="css">    <span class="attribute">padding</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="css">    -webkit-<span class="attribute">font-smoothing</span>: antialiased;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.live2d-widget-dialog</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">color</span>: <span class="number">#917159</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">padding</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="built_in">rgb</span>(<span class="number">236</span>, <span class="number">203</span>, <span class="number">180</span>);</span></span><br><span class="line"><span class="css">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">236</span>, <span class="number">203</span>, <span class="number">180</span>, <span class="number">0.14</span>);</span></span><br><span class="line"><span class="css">    <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="css">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">2deg</span>);</span></span><br><span class="line"><span class="css">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">transition</span>: <span class="number">200ms</span> opacity;</span></span><br><span class="line"><span class="css">    <span class="attribute">box-shadow</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.12</span>) <span class="number">0px</span> <span class="number">1px</span> <span class="number">6px</span>, <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.12</span>) <span class="number">0px</span> <span class="number">1px</span> <span class="number">4px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">animation</span>: live2d-widget-dialog-tingle <span class="number">4s</span> ease-in-out <span class="number">0s</span> infinite alternate;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  <span class="keyword">@keyframes</span> live2d-widget-dialog-tingle &#123;</span></span><br><span class="line"><span class="css">    <span class="number">0%</span> &#123; <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(-<span class="number">2deg</span>); &#125;</span></span><br><span class="line"><span class="css">    <span class="number">100%</span> &#123; <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">1px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">2deg</span>); &#125;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">async</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./Java读取配置文件的几种方式 - 冰莫莫 - 博客园_files/L2Dwidget.0.min.js.下载&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">&quot;skin-custom no-navbar hljs-engine&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">   L2Dwidget.init(</span></span><br><span class="line"><span class="javascript">     　&#123;　<span class="string">&quot;model&quot;</span>: &#123; </span></span><br><span class="line"><span class="javascript">　　　　<span class="attr">jsonPath</span>: <span class="string">&quot;https://unpkg.com/live2d-widget-model-hijiki@1.0.5/assets/hijiki.model.json&quot;</span>,<span class="comment">//这是插件模型，可以任意选择想要添加的2d动画</span></span></span><br><span class="line"><span class="javascript">　　　　<span class="string">&quot;scale&quot;</span>: <span class="number">1</span> </span></span><br><span class="line"><span class="javascript">　　&#125;&#125;,</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">     &#123;</span></span><br><span class="line"><span class="javascript">      <span class="string">&quot;display&quot;</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;superSample&quot;</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;width&quot;</span>: <span class="number">200</span>,<span class="comment">//宽度</span></span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;height&quot;</span>: <span class="number">400</span>,<span class="comment">//高度</span></span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;position&quot;</span>: <span class="string">&quot;left&quot;</span>,<span class="comment">//位置，right,left</span></span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;hOffset&quot;</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;vOffset&quot;</span>: <span class="number">0</span></span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">   &#125;);</span></span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.$silence = &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">defaultTheme</span>: <span class="string">&#x27;c&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">navbars</span>: [</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">title</span>: <span class="string">&#x27;首页&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">url</span>: <span class="string">&#x27;https://www.cnblogs.com/icemomo&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">title</span>: <span class="string">&#x27;标签&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">url</span>: <span class="string">&#x27;https://www.cnblogs.com/icemomo/tag/&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;],</span></span><br><span class="line"><span class="javascript">    <span class="attr">favicon</span>:<span class="string">&#x27;https://blog-static.cnblogs.com/files/blogs/740138/anido-geh1u-001.ico?t=1646927784&#x27;</span>,</span></span><br><span class="line"><span class="javascript">     <span class="attr">defaultMode</span>: <span class="string">&#x27;auto&#x27;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">hljsln</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">catalog</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">enable</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">index</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">active</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">levels</span>: [<span class="string">&#x27;h2&#x27;</span>, <span class="string">&#x27;h3&#x27;</span>, <span class="string">&#x27;h4&#x27;</span>]</span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">    <span class="attr">avatar</span>:<span class="string">&#x27;https://s1.ax1x.com/2022/03/10/b5p0e0.jpg&#x27;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">enable</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">signature</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">enable</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">author</span>: <span class="literal">null</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">license</span>: [<span class="string">&#x27;署名-非商业性使用-相同方式共享 4.0 国际&#x27;</span>, <span class="string">&#x27;https://creativecommons.org/licenses/by-nc-sa/4.0/&#x27;</span>],</span></span><br><span class="line"><span class="javascript">        <span class="attr">remark</span>: <span class="string">&#x27;转载请注明出处&#x27;</span>,</span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">    <span class="attr">github</span>: <span class="string">&#x27;https://github.com/icemomo-hgy&#x27;</span>,</span></span><br><span class="line"><span class="javascript">     <span class="attr">sponsor</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">enable</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">text</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">wechat</span>: <span class="string">&#x27;https://s1.ax1x.com/2022/03/10/b5StDx.jpg&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">alipay</span>:  <span class="string">&#x27;https://images.cnblogs.com/cnblogs_com/blogs/740138/galleries/2122692/o_220311012057_d8cb988f0f3669b0e9d18b910d05514.jpg&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2022/07/31/Ob1rWKGsDRMgUNn.png"></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*! https://github.com/xiazeyu/live2d-widget.js built@2019-4-2 16:24:00 */</span></span><br><span class="line">webpackJsonpL2Dwidget([<span class="number">0</span>],&#123;<span class="number">79</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="string">&quot;use strict&quot;</span>;<span class="built_in">Object</span>.defineProperty(e,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),e.captureFrame=e.theRealInit=<span class="keyword">void</span> <span class="number">0</span>;<span class="keyword">var</span> r,o=i(<span class="number">26</span>),n=i(<span class="number">83</span>),s=i(<span class="number">80</span>),_=i(<span class="number">81</span>),a=i(<span class="number">86</span>),h=i(<span class="number">84</span>),l=i(<span class="number">82</span>),$=i(<span class="number">39</span>),u=(r=$)&amp;&amp;r.__esModule?r:&#123;<span class="attr">default</span>:r&#125;;<span class="keyword">var</span> p=<span class="literal">null</span>,c=<span class="keyword">void</span> <span class="number">0</span>,f=!<span class="number">1</span>,g=<span class="literal">null</span>,y=<span class="literal">null</span>,d=<span class="literal">null</span>,m=<span class="literal">null</span>,T=!<span class="number">1</span>,P=<span class="number">.5</span>,S=<span class="literal">null</span>;<span class="function"><span class="keyword">function</span> <span class="title">v</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">if</span>(e.x&lt;i.left+i.width&amp;&amp;e.y&lt;i.top+i.height&amp;&amp;e.x&gt;i.left&amp;&amp;e.y&gt;i.top)<span class="keyword">return</span> e;<span class="keyword">var</span> r=t.x-e.x,o=t.y-e.y;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> <span class="number">180</span>*<span class="built_in">Math</span>.acos((i=&#123;<span class="attr">x</span>:<span class="number">0</span>,<span class="attr">y</span>:<span class="number">1</span>&#125;,o=t,n=e,s=<span class="built_in">Math</span>.sqrt(o*o+n*n),r=&#123;<span class="attr">x</span>:o/s,<span class="attr">y</span>:n/s&#125;,i.x*r.x+i.y*r.y))/<span class="built_in">Math</span>.PI;<span class="keyword">var</span> i,r,o,n,s&#125;<span class="keyword">var</span> s=n(r,o);e.x&lt;t.x&amp;&amp;(s=<span class="number">360</span>-s);<span class="keyword">var</span> _=<span class="number">360</span>-n(i.left-t.x,-<span class="number">1</span>*(i.top-t.y)),a=<span class="number">360</span>-n(i.left-t.x,-<span class="number">1</span>*(i.top+i.height-t.y)),h=n(i.left+i.width-t.x,-<span class="number">1</span>*(i.top-t.y)),l=n(i.left+i.width-t.x,-<span class="number">1</span>*(i.top+i.height-t.y)),$=o/r,u=&#123;&#125;;<span class="keyword">if</span>(s&lt;h)&#123;<span class="keyword">var</span> p=i.top-t.y,c=p/$;u=&#123;<span class="attr">y</span>:t.y+p,<span class="attr">x</span>:t.x+c&#125;&#125;<span class="keyword">else</span> <span class="keyword">if</span>(s&lt;l)&#123;<span class="keyword">var</span> f=i.left+i.width-t.x,g=f*$;u=&#123;<span class="attr">y</span>:t.y+g,<span class="attr">x</span>:t.x+f&#125;&#125;<span class="keyword">else</span> <span class="keyword">if</span>(s&lt;a)&#123;<span class="keyword">var</span> y=i.top+i.height-t.y,d=y/$;u=&#123;<span class="attr">y</span>:t.y+y,<span class="attr">x</span>:t.x+d&#125;&#125;<span class="keyword">else</span> <span class="keyword">if</span>(s&lt;_)&#123;<span class="keyword">var</span> m=t.x-i.left,T=m*$;u=&#123;<span class="attr">y</span>:t.y-T,<span class="attr">x</span>:t.x-m&#125;&#125;<span class="keyword">else</span>&#123;<span class="keyword">var</span> P=i.top-t.y,S=P/$;u=&#123;<span class="attr">y</span>:t.y+P,<span class="attr">x</span>:t.x+S&#125;&#125;<span class="keyword">return</span> u&#125;<span class="function"><span class="keyword">function</span> <span class="title">L</span>(<span class="params">t</span>)</span>&#123;T=!<span class="number">0</span>;<span class="keyword">var</span> e=n.currCanvas.getBoundingClientRect(),i=w(t.clientX-e.left),r=D(t.clientY-e.top),o=v(&#123;<span class="attr">x</span>:e.left+e.width/<span class="number">2</span>,<span class="attr">y</span>:e.top+e.height*P&#125;,&#123;<span class="attr">x</span>:t.clientX,<span class="attr">y</span>:t.clientY&#125;,e),s=x(o.x-e.left),_=I(o.y-e.top);l.cDefine.DEBUG_MOUSE_LOG&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;modelTapEvent onMouseDown device( x:&quot;</span>+t.clientX+<span class="string">&quot; y:&quot;</span>+t.clientY+<span class="string">&quot; ) view( x:&quot;</span>+s+<span class="string">&quot; y:&quot;</span>+_+<span class="string">&quot;)&quot;</span>),i,r,S.emit(<span class="string">&quot;tap&quot;</span>,t),p.tapEvent(s,_)&#125;<span class="function"><span class="keyword">function</span> <span class="title">M</span>(<span class="params"></span>)</span>&#123;T&amp;&amp;(T=!<span class="number">1</span>),g.setPoint(<span class="number">0</span>,<span class="number">0</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">E</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(<span class="string">&quot;mousedown&quot;</span>==t.type)L(t);<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;mousemove&quot;</span>==t.type)!<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;T=!<span class="number">0</span>;<span class="keyword">var</span> e=n.currCanvas.getBoundingClientRect(),i=w(t.clientX-e.left),r=D(t.clientY-e.top),o=v(&#123;<span class="attr">x</span>:e.left+e.width/<span class="number">2</span>,<span class="attr">y</span>:e.top+e.height*P&#125;,&#123;<span class="attr">x</span>:t.clientX,<span class="attr">y</span>:t.clientY&#125;,e),s=x(o.x-e.left),_=I(o.y-e.top);l.cDefine.DEBUG_MOUSE_LOG&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;modelTurnHead onMouseMove device( x:&quot;</span>+t.clientX+<span class="string">&quot; y:&quot;</span>+t.clientY+<span class="string">&quot; ) view( x:&quot;</span>+s+<span class="string">&quot; y:&quot;</span>+_+<span class="string">&quot;)&quot;</span>),i,r,g.setPoint(s,_)&#125;(t);<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;mouseup&quot;</span>==t.type)&#123;<span class="keyword">if</span>(<span class="string">&quot;button&quot;</span><span class="keyword">in</span> t&amp;&amp;<span class="number">0</span>!=t.button)<span class="keyword">return</span>&#125;<span class="keyword">else</span><span class="string">&quot;mouseleave&quot;</span>==t.type&amp;&amp;M()&#125;<span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e,i,r,o,s,_,a,h=t.touches[<span class="number">0</span>];<span class="string">&quot;touchstart&quot;</span>==t.type?<span class="number">1</span>==t.touches.length&amp;&amp;L(h):<span class="string">&quot;touchmove&quot;</span>==t.type?(e=h,i=n.currCanvas.getBoundingClientRect(),r=w(e.clientX-i.left),o=D(e.clientY-i.top),s=v(&#123;<span class="attr">x</span>:i.left+i.width/<span class="number">2</span>,<span class="attr">y</span>:i.top+i.height*P&#125;,&#123;<span class="attr">x</span>:e.clientX,<span class="attr">y</span>:e.clientY&#125;,i),_=x(s.x-i.left),a=I(s.y-i.top),l.cDefine.DEBUG_MOUSE_LOG&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;followPointer onMouseMove device( x:&quot;</span>+e.clientX+<span class="string">&quot; y:&quot;</span>+e.clientY+<span class="string">&quot; ) view( x:&quot;</span>+_+<span class="string">&quot; y:&quot;</span>+a+<span class="string">&quot;)&quot;</span>),T&amp;&amp;(r,o,g.setPoint(_,a))):<span class="string">&quot;touchend&quot;</span>==t.type&amp;&amp;M()&#125;<span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=m.transformX(t);<span class="keyword">return</span> y.invertTransformX(e)&#125;<span class="function"><span class="keyword">function</span> <span class="title">I</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=m.transformY(t);<span class="keyword">return</span> y.invertTransformY(e)&#125;<span class="function"><span class="keyword">function</span> <span class="title">w</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> m.transformX(t)&#125;<span class="function"><span class="keyword">function</span> <span class="title">D</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> m.transformY(t)&#125;e.theRealInit=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;(<span class="number">0</span>,n.createElement)(),n.currCanvas.addEventListener&amp;&amp;(<span class="built_in">window</span>.addEventListener(<span class="string">&quot;click&quot;</span>,E),<span class="built_in">window</span>.addEventListener(<span class="string">&quot;mousedown&quot;</span>,E),<span class="built_in">window</span>.addEventListener(<span class="string">&quot;mousemove&quot;</span>,E),<span class="built_in">window</span>.addEventListener(<span class="string">&quot;mouseup&quot;</span>,E),<span class="built_in">document</span>.addEventListener(<span class="string">&quot;mouseleave&quot;</span>,E),<span class="built_in">window</span>.addEventListener(<span class="string">&quot;touchstart&quot;</span>,A),<span class="built_in">window</span>.addEventListener(<span class="string">&quot;touchend&quot;</span>,A),<span class="built_in">window</span>.addEventListener(<span class="string">&quot;touchmove&quot;</span>,A)),p=<span class="keyword">new</span> a.cManager(S),g=<span class="keyword">new</span> _.L2DTargetPoint;<span class="keyword">var</span> e,i,r=n.currCanvas.getBoundingClientRect(),$=r.height/r.width,T=l.cDefine.VIEW_LOGICAL_LEFT,P=l.cDefine.VIEW_LOGICAL_RIGHT,v=-$,L=$;(y=<span class="keyword">new</span> _.L2DViewMatrix).setScreenRect(T,P,v,L),y.setMaxScreenRect(l.cDefine.VIEW_LOGICAL_MAX_LEFT,l.cDefine.VIEW_LOGICAL_MAX_RIGHT,l.cDefine.VIEW_LOGICAL_MAX_BOTTOM,l.cDefine.VIEW_LOGICAL_MAX_TOP),e=u.default.mobile()&amp;&amp;o.config.mobile.scale||o.config.model.scale,y.adjustScale(<span class="number">0</span>,<span class="number">0</span>,e),(d=<span class="keyword">new</span> _.L2DMatrix44).multScale(<span class="number">1</span>,r.width/r.height),(m=<span class="keyword">new</span> _.L2DMatrix44).multTranslate(-r.width/<span class="number">2</span>,-r.height/<span class="number">2</span>),m.multScale(<span class="number">2</span>/r.width,-<span class="number">2</span>/r.height),s.Live2D.setGL(n.currWebGL),n.currWebGL.clearColor(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),i=o.config.model.jsonPath,p.reloadFlg=!<span class="number">0</span>,p.count++,p.changeModel(n.currWebGL,i),f||(f=!<span class="number">0</span>,<span class="function"><span class="keyword">function</span> <span class="title">t</span>(<span class="params"></span>)</span>&#123;!<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;h.MatrixStack.reset(),h.MatrixStack.loadIdentity(),g.update(),p.setDrag(g.getX(),g.getY()),n.currWebGL.clear(n.currWebGL.COLOR_BUFFER_BIT),h.MatrixStack.multMatrix(d.getArray()),h.MatrixStack.multMatrix(y.getArray()),h.MatrixStack.push();<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;p.numModels();t++)&#123;<span class="keyword">var</span> e=p.getModel(t);<span class="keyword">if</span>(<span class="literal">null</span>==e)<span class="keyword">return</span>;e.initialized&amp;&amp;!e.updating&amp;&amp;(e.update(),e.draw(n.currWebGL))&#125;h.MatrixStack.pop()&#125;();<span class="keyword">var</span> e=<span class="built_in">window</span>.requestAnimationFrame||<span class="built_in">window</span>.mozRequestAnimationFrame||<span class="built_in">window</span>.webkitRequestAnimationFrame||<span class="built_in">window</span>.msRequestAnimationFrame;e(t,n.currCanvas),<span class="keyword">void</span> <span class="number">0</span>!==c&amp;&amp;(c(n.currCanvas.toDataURL()),c=<span class="keyword">void</span> <span class="number">0</span>)&#125;())&#125;,e.captureFrame=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;c=t&#125;&#125;,<span class="number">80</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="string">&quot;use strict&quot;</span>;(<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">Object</span>.defineProperty(e,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;);<span class="keyword">var</span> i=!<span class="number">0</span>;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>._$MT=<span class="literal">null</span>,<span class="built_in">this</span>._$5S=<span class="literal">null</span>,<span class="built_in">this</span>._$NP=<span class="number">0</span>,r._$42++,<span class="built_in">this</span>._$5S=<span class="keyword">new</span> U(<span class="built_in">this</span>))&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(!i)&#123;<span class="built_in">this</span>.clipContextList=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>.glcontext=t.gl,<span class="built_in">this</span>.dp_webgl=t,<span class="built_in">this</span>.curFrameNo=<span class="number">0</span>,<span class="built_in">this</span>.firstError_clipInNotUpdate=!<span class="number">0</span>,<span class="built_in">this</span>.colorBuffer=<span class="number">0</span>,<span class="built_in">this</span>.isInitGLFBFunc=!<span class="number">1</span>,<span class="built_in">this</span>.tmpBoundsOnModel=<span class="keyword">new</span> P,_t.glContext.length&gt;_t.frameBuffers.length&amp;&amp;(<span class="built_in">this</span>.curFrameNo=<span class="built_in">this</span>.getMaskRenderTexture()),<span class="built_in">this</span>.tmpModelToViewMatrix=<span class="keyword">new</span> O,<span class="built_in">this</span>.tmpMatrix2=<span class="keyword">new</span> O,<span class="built_in">this</span>.tmpMatrixForMask=<span class="keyword">new</span> O,<span class="built_in">this</span>.tmpMatrixForDraw=<span class="keyword">new</span> O,<span class="built_in">this</span>.CHANNEL_COLORS=<span class="keyword">new</span> <span class="built_in">Array</span>;<span class="keyword">var</span> e=<span class="keyword">new</span> E;(e=<span class="keyword">new</span> E).r=<span class="number">0</span>,e.g=<span class="number">0</span>,e.b=<span class="number">0</span>,e.a=<span class="number">1</span>,<span class="built_in">this</span>.CHANNEL_COLORS.push(e),(e=<span class="keyword">new</span> E).r=<span class="number">1</span>,e.g=<span class="number">0</span>,e.b=<span class="number">0</span>,e.a=<span class="number">0</span>,<span class="built_in">this</span>.CHANNEL_COLORS.push(e),(e=<span class="keyword">new</span> E).r=<span class="number">0</span>,e.g=<span class="number">1</span>,e.b=<span class="number">0</span>,e.a=<span class="number">0</span>,<span class="built_in">this</span>.CHANNEL_COLORS.push(e),(e=<span class="keyword">new</span> E).r=<span class="number">0</span>,e.g=<span class="number">0</span>,e.b=<span class="number">1</span>,e.a=<span class="number">0</span>,<span class="built_in">this</span>.CHANNEL_COLORS.push(e);<span class="keyword">for</span>(<span class="keyword">var</span> r=<span class="number">0</span>;r&lt;<span class="built_in">this</span>.CHANNEL_COLORS.length;r++)<span class="built_in">this</span>.dp_webgl.setChannelFlagAsColor(r,<span class="built_in">this</span>.CHANNEL_COLORS[r])&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="built_in">this</span>.clipIDList=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>.clipIDList=i,<span class="built_in">this</span>.clippingMaskDrawIndexList=<span class="keyword">new</span> <span class="built_in">Array</span>;<span class="keyword">for</span>(<span class="keyword">var</span> r=<span class="number">0</span>;r&lt;i.length;r++)<span class="built_in">this</span>.clippingMaskDrawIndexList.push(e.getDrawDataIndex(i[r]));<span class="built_in">this</span>.clippedDrawContextList=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>.isUsing=!<span class="number">0</span>,<span class="built_in">this</span>.layoutChannelNo=<span class="number">0</span>,<span class="built_in">this</span>.layoutBounds=<span class="keyword">new</span> P,<span class="built_in">this</span>.allClippedDrawRect=<span class="keyword">new</span> P,<span class="built_in">this</span>.matrixForMask=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">16</span>),<span class="built_in">this</span>.matrixForDraw=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">16</span>),<span class="built_in">this</span>.owner=t&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>._$dP=<span class="literal">null</span>,<span class="built_in">this</span>._$eo=<span class="literal">null</span>,<span class="built_in">this</span>._$V0=<span class="literal">null</span>,<span class="built_in">this</span>._$dP=<span class="number">1e3</span>,<span class="built_in">this</span>._$eo=<span class="number">1e3</span>,<span class="built_in">this</span>._$V0=<span class="number">1</span>,<span class="built_in">this</span>._$a0())&#125;<span class="function"><span class="keyword">function</span> <span class="title">_</span>(<span class="params"></span>)</span>&#123;&#125;<span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>.x=<span class="literal">null</span>,<span class="built_in">this</span>.y=<span class="literal">null</span>,<span class="built_in">this</span>.width=<span class="literal">null</span>,<span class="built_in">this</span>.height=<span class="literal">null</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">h</span>(<span class="params">t</span>)</span>&#123;i||it.prototype.constructor.call(<span class="built_in">this</span>,t)&#125;<span class="function"><span class="keyword">function</span> <span class="title">l</span>(<span class="params">t</span>)</span>&#123;i||it.prototype.constructor.call(<span class="built_in">this</span>,t)&#125;<span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>._$vo=<span class="literal">null</span>,<span class="built_in">this</span>._$F2=<span class="literal">null</span>,<span class="built_in">this</span>._$ao=<span class="number">400</span>,<span class="built_in">this</span>._$1S=<span class="number">400</span>,$._$<span class="number">42</span>++)&#125;<span class="function"><span class="keyword">function</span> <span class="title">u</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>.p1=<span class="keyword">new</span> p,<span class="built_in">this</span>.p2=<span class="keyword">new</span> p,<span class="built_in">this</span>._$Fo=<span class="number">0</span>,<span class="built_in">this</span>._$Db=<span class="number">0</span>,<span class="built_in">this</span>._$L2=<span class="number">0</span>,<span class="built_in">this</span>._$M2=<span class="number">0</span>,<span class="built_in">this</span>._$ks=<span class="number">0</span>,<span class="built_in">this</span>._$9b=<span class="number">0</span>,<span class="built_in">this</span>._$iP=<span class="number">0</span>,<span class="built_in">this</span>._$iT=<span class="number">0</span>,<span class="built_in">this</span>._$lL=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>._$qP=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>.setup(<span class="number">.3</span>,<span class="number">.5</span>,<span class="number">.1</span>))&#125;<span class="function"><span class="keyword">function</span> <span class="title">p</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$p=<span class="number">1</span>,<span class="built_in">this</span>.x=<span class="number">0</span>,<span class="built_in">this</span>.y=<span class="number">0</span>,<span class="built_in">this</span>.vx=<span class="number">0</span>,<span class="built_in">this</span>.vy=<span class="number">0</span>,<span class="built_in">this</span>.ax=<span class="number">0</span>,<span class="built_in">this</span>.ay=<span class="number">0</span>,<span class="built_in">this</span>.fx=<span class="number">0</span>,<span class="built_in">this</span>.fy=<span class="number">0</span>,<span class="built_in">this</span>._$s0=<span class="number">0</span>,<span class="built_in">this</span>._$70=<span class="number">0</span>,<span class="built_in">this</span>._$7L=<span class="number">0</span>,<span class="built_in">this</span>._$HL=<span class="number">0</span>&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="built_in">this</span>._$wL=<span class="literal">null</span>,<span class="built_in">this</span>.scale=<span class="literal">null</span>,<span class="built_in">this</span>._$V0=<span class="literal">null</span>,<span class="built_in">this</span>._$wL=t,<span class="built_in">this</span>.scale=e,<span class="built_in">this</span>._$V0=i&#125;<span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">t,e,i,r</span>)</span>&#123;c.prototype.constructor.call(<span class="built_in">this</span>,e,i,r),<span class="built_in">this</span>._$tL=<span class="literal">null</span>,<span class="built_in">this</span>._$tL=t&#125;<span class="function"><span class="keyword">function</span> <span class="title">g</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="built_in">this</span>._$wL=<span class="literal">null</span>,<span class="built_in">this</span>.scale=<span class="literal">null</span>,<span class="built_in">this</span>._$V0=<span class="literal">null</span>,<span class="built_in">this</span>._$wL=t,<span class="built_in">this</span>.scale=e,<span class="built_in">this</span>._$V0=i&#125;<span class="function"><span class="keyword">function</span> <span class="title">y</span>(<span class="params">t,e,i,r</span>)</span>&#123;g.prototype.constructor.call(<span class="built_in">this</span>,e,i,r),<span class="built_in">this</span>._$YP=<span class="literal">null</span>,<span class="built_in">this</span>._$YP=t&#125;<span class="function"><span class="keyword">function</span> <span class="title">d</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>._$fL=<span class="number">0</span>,<span class="built_in">this</span>._$gL=<span class="number">0</span>,<span class="built_in">this</span>._$B0=<span class="number">1</span>,<span class="built_in">this</span>._$z0=<span class="number">1</span>,<span class="built_in">this</span>._$qT=<span class="number">0</span>,<span class="built_in">this</span>.reflectX=!<span class="number">1</span>,<span class="built_in">this</span>.reflectY=!<span class="number">1</span>)&#125;r._$0s=<span class="number">1</span>,r._$4s=<span class="number">2</span>,r._$42=<span class="number">0</span>,r._$62=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">try</span>&#123;<span class="keyword">if</span>(e <span class="keyword">instanceof</span> <span class="built_in">ArrayBuffer</span>&amp;&amp;(e=<span class="keyword">new</span> <span class="built_in">DataView</span>(e)),!(e <span class="keyword">instanceof</span> <span class="built_in">DataView</span>))<span class="keyword">throw</span> <span class="keyword">new</span> ht(<span class="string">&quot;_$SS#loadModel(b) / b _$x be DataView or ArrayBuffer&quot;</span>);<span class="keyword">var</span> i,o=<span class="keyword">new</span> Pt(e),n=o._$ST(),s=o._$ST(),a=o._$ST();<span class="keyword">if</span>(<span class="number">109</span>!=n||<span class="number">111</span>!=s||<span class="number">99</span>!=a)<span class="keyword">throw</span> <span class="keyword">new</span> ht(<span class="string">&quot;_$gi _$C _$li , _$Q0 _$P0.&quot;</span>);<span class="keyword">if</span>(i=o._$ST(),o._$gr(i),i&gt;G._$T7)<span class="keyword">throw</span> t._$NP|=r._$4s,<span class="keyword">new</span> ht(<span class="string">&quot;_$gi _$C _$li , _$n0 _$_ version _$li ( SDK : &quot;</span>+G._$T7+<span class="string">&quot; &lt; _$f0 : &quot;</span>+i+<span class="string">&quot; )@_$SS#loadModel()\n&quot;</span>);<span class="keyword">var</span> h=o._$nP();<span class="keyword">if</span>(i&gt;=G._$s7)&#123;<span class="keyword">var</span> l=o._$9T(),$=o._$9T();<span class="keyword">if</span>(-<span class="number">30584</span>!=l||-<span class="number">30584</span>!=$)<span class="keyword">throw</span> t._$NP|=r._$0s,<span class="keyword">new</span> ht(<span class="string">&quot;_$gi _$C _$li , _$0 _$6 _$Ui.&quot;</span>)&#125;t._$KS(h);<span class="keyword">var</span> u=t.getModelContext();u.setDrawParam(t.getDrawParam()),u.init()&#125;<span class="keyword">catch</span>(t)&#123;_._$Rb(t)&#125;&#125;,r.prototype._$KS=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$MT=t&#125;,r.prototype.getModelImpl=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>._$MT&amp;&amp;(<span class="built_in">this</span>._$MT=<span class="keyword">new</span> $,<span class="built_in">this</span>._$MT._$zP()),<span class="built_in">this</span>._$MT&#125;,r.prototype.getCanvasWidth=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>._$MT?<span class="number">0</span>:<span class="built_in">this</span>._$MT.getCanvasWidth()&#125;,r.prototype.getCanvasHeight=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>._$MT?<span class="number">0</span>:<span class="built_in">this</span>._$MT.getCanvasHeight()&#125;,r.prototype.getParamFloat=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span><span class="string">&quot;number&quot;</span>!=<span class="keyword">typeof</span> t&amp;&amp;(t=<span class="built_in">this</span>._$5S.getParamIndex(l.getID(t))),<span class="built_in">this</span>._$5S.getParamFloat(t)&#125;,r.prototype.setParamFloat=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="string">&quot;number&quot;</span>!=<span class="keyword">typeof</span> t&amp;&amp;(t=<span class="built_in">this</span>._$5S.getParamIndex(l.getID(t))),<span class="built_in">arguments</span>.length&lt;<span class="number">3</span>&amp;&amp;(i=<span class="number">1</span>),<span class="built_in">this</span>._$5S.setParamFloat(t,<span class="built_in">this</span>._$5S.getParamFloat(t)*(<span class="number">1</span>-i)+e*i)&#125;,r.prototype.addToParamFloat=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="string">&quot;number&quot;</span>!=<span class="keyword">typeof</span> t&amp;&amp;(t=<span class="built_in">this</span>._$5S.getParamIndex(l.getID(t))),<span class="built_in">arguments</span>.length&lt;<span class="number">3</span>&amp;&amp;(i=<span class="number">1</span>),<span class="built_in">this</span>._$5S.setParamFloat(t,<span class="built_in">this</span>._$5S.getParamFloat(t)+e*i)&#125;,r.prototype.multParamFloat=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="string">&quot;number&quot;</span>!=<span class="keyword">typeof</span> t&amp;&amp;(t=<span class="built_in">this</span>._$5S.getParamIndex(l.getID(t))),<span class="built_in">arguments</span>.length&lt;<span class="number">3</span>&amp;&amp;(i=<span class="number">1</span>),<span class="built_in">this</span>._$5S.setParamFloat(t,<span class="built_in">this</span>._$5S.getParamFloat(t)*(<span class="number">1</span>+(e-<span class="number">1</span>)*i))&#125;,r.prototype.getParamIndex=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$5S.getParamIndex(l.getID(t))&#125;,r.prototype.loadParam=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$5S.loadParam()&#125;,r.prototype.saveParam=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$5S.saveParam()&#125;,r.prototype.init=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$5S.init()&#125;,r.prototype.update=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$5S.update()&#125;,r.prototype._$Rs=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> _._$li(<span class="string">&quot;_$60 _$PT _$Rs()&quot;</span>),-<span class="number">1</span>&#125;,r.prototype._$Ds=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;_._$li(<span class="string">&quot;_$60 _$PT _$SS#_$Ds() \n&quot;</span>)&#125;,r.prototype._$K2=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,r.prototype.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,r.prototype.getModelContext=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$5S&#125;,r.prototype._$s2=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$NP&#125;,r.prototype._$P7=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="keyword">var</span> o=-<span class="number">1</span>,n=<span class="number">0</span>,s=<span class="built_in">this</span>;<span class="keyword">if</span>(<span class="number">0</span>!=i)<span class="keyword">if</span>(<span class="number">1</span>==t.length)&#123;p=t[<span class="number">0</span>];<span class="keyword">var</span> _=<span class="number">0</span>!=s.getParamFloat(p),a=(c=e[<span class="number">0</span>],s.getPartsOpacity(c)),h=i/r;_?(a+=h)&gt;<span class="number">1</span>&amp;&amp;(a=<span class="number">1</span>):(a-=h)&lt;<span class="number">0</span>&amp;&amp;(a=<span class="number">0</span>),s.setPartsOpacity(c,a)&#125;<span class="keyword">else</span>&#123;<span class="keyword">for</span>(u=<span class="number">0</span>;u&lt;t.length;u++)&#123;p=t[u];<span class="keyword">if</span>(f=<span class="number">0</span>!=s.getParamFloat(p))&#123;<span class="keyword">if</span>(o&gt;=<span class="number">0</span>)<span class="keyword">break</span>;o=u;c=e[u];n=s.getPartsOpacity(c),(n+=i/r)&gt;<span class="number">1</span>&amp;&amp;(n=<span class="number">1</span>)&#125;&#125;o&lt;<span class="number">0</span>&amp;&amp;(<span class="built_in">console</span>.log(<span class="string">&quot;No _$wi _$q0/ _$U default[%s]&quot;</span>,t[<span class="number">0</span>]),o=<span class="number">0</span>,n=<span class="number">1</span>,s.loadParam(),s.setParamFloat(t[o],n),s.saveParam());<span class="keyword">for</span>(u=<span class="number">0</span>;u&lt;t.length;u++)&#123;c=e[u];<span class="keyword">if</span>(o==u)s.setPartsOpacity(c,n);<span class="keyword">else</span>&#123;<span class="keyword">var</span> l,$=s.getPartsOpacity(c);(<span class="number">1</span>-(l=n&lt;<span class="number">.5</span>?-<span class="number">.5</span>*n/<span class="number">.5</span>+<span class="number">1</span>:<span class="number">.5</span>*(<span class="number">1</span>-n)/<span class="number">.5</span>))*(<span class="number">1</span>-n)&gt;<span class="number">.15</span>&amp;&amp;(l=<span class="number">1</span>-<span class="number">.15</span>/(<span class="number">1</span>-n)),$&gt;l&amp;&amp;($=l),s.setPartsOpacity(c,$)&#125;&#125;&#125;<span class="keyword">else</span> <span class="keyword">for</span>(<span class="keyword">var</span> u=<span class="number">0</span>;u&lt;t.length;u++)&#123;<span class="keyword">var</span> p=t[u],c=e[u],f=<span class="number">0</span>!=s.getParamFloat(p);s.setPartsOpacity(c,f?<span class="number">1</span>:<span class="number">0</span>)&#125;&#125;,r.prototype.setPartsOpacity=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="string">&quot;number&quot;</span>!=<span class="keyword">typeof</span> t&amp;&amp;(t=<span class="built_in">this</span>._$5S.getPartsDataIndex(h.getID(t))),<span class="built_in">this</span>._$5S.setPartsOpacity(t,e)&#125;,r.prototype.getPartsDataIndex=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> t <span class="keyword">instanceof</span> h||(t=h.getID(t)),<span class="built_in">this</span>._$5S.getPartsDataIndex(t)&#125;,r.prototype.getPartsOpacity=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span><span class="string">&quot;number&quot;</span>!=<span class="keyword">typeof</span> t&amp;&amp;(t=<span class="built_in">this</span>._$5S.getPartsDataIndex(h.getID(t))),t&lt;<span class="number">0</span>?<span class="number">0</span>:<span class="built_in">this</span>._$5S.getPartsOpacity(t)&#125;,r.prototype.getDrawParam=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,r.prototype.getDrawDataIndex=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$5S.getDrawDataIndex(R.getID(t))&#125;,r.prototype.getDrawData=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$5S.getDrawData(t)&#125;,r.prototype.getTransformedPoints=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="built_in">this</span>._$5S._$C2(t);<span class="keyword">return</span> e <span class="keyword">instanceof</span> $t?e.getTransformedPoints():<span class="literal">null</span>&#125;,r.prototype.getIndexArray=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(t&lt;<span class="number">0</span>||t&gt;=<span class="built_in">this</span>._$5S._$aS.length)<span class="keyword">return</span> <span class="literal">null</span>;<span class="keyword">var</span> e=<span class="built_in">this</span>._$5S._$aS[t];<span class="keyword">return</span> <span class="literal">null</span>!=e&amp;&amp;e.getType()==W._$wb&amp;&amp;e <span class="keyword">instanceof</span> lt?e.getIndexArray():<span class="literal">null</span>&#125;,o.CHANNEL_COUNT=<span class="number">4</span>,o.RENDER_TEXTURE_USE_MIPMAP=!<span class="number">1</span>,o.NOT_USED_FRAME=-<span class="number">100</span>,o.prototype._$L7=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">if</span>(<span class="built_in">this</span>.tmpModelToViewMatrix&amp;&amp;(<span class="built_in">this</span>.tmpModelToViewMatrix=<span class="literal">null</span>),<span class="built_in">this</span>.tmpMatrix2&amp;&amp;(<span class="built_in">this</span>.tmpMatrix2=<span class="literal">null</span>),<span class="built_in">this</span>.tmpMatrixForMask&amp;&amp;(<span class="built_in">this</span>.tmpMatrixForMask=<span class="literal">null</span>),<span class="built_in">this</span>.tmpMatrixForDraw&amp;&amp;(<span class="built_in">this</span>.tmpMatrixForDraw=<span class="literal">null</span>),<span class="built_in">this</span>.tmpBoundsOnModel&amp;&amp;(<span class="built_in">this</span>.tmpBoundsOnModel=<span class="literal">null</span>),<span class="built_in">this</span>.CHANNEL_COLORS)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="built_in">this</span>.CHANNEL_COLORS.length-<span class="number">1</span>;t&gt;=<span class="number">0</span>;--t)<span class="built_in">this</span>.CHANNEL_COLORS.splice(t,<span class="number">1</span>);<span class="built_in">this</span>.CHANNEL_COLORS=[]&#125;<span class="built_in">this</span>.releaseShader()&#125;,o.prototype.releaseShader=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=_t.frameBuffers.length,e=<span class="number">0</span>;e&lt;t;e++)<span class="built_in">this</span>.gl.deleteFramebuffer(_t.frameBuffers[e].framebuffer);_t.frameBuffers=[],_t.glContext=[]&#125;,o.prototype.init=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> r=<span class="number">0</span>;r&lt;e.length;r++)&#123;<span class="keyword">var</span> o=e[r].getClipIDList();<span class="keyword">if</span>(<span class="literal">null</span>!=o)&#123;<span class="keyword">var</span> s=<span class="built_in">this</span>.findSameClip(o);<span class="literal">null</span>==s&amp;&amp;(s=<span class="keyword">new</span> n(<span class="built_in">this</span>,t,o),<span class="built_in">this</span>.clipContextList.push(s));<span class="keyword">var</span> _=e[r].getDrawDataID(),a=t.getDrawDataIndex(_);s.addClippedDrawData(_,a),i[r].clipBufPre_clipContext=s&#125;&#125;&#125;,o.prototype.getMaskRenderTexture=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t;<span class="keyword">return</span> t=<span class="built_in">this</span>.dp_webgl.createFramebuffer(),_t.frameBuffers[<span class="built_in">this</span>.dp_webgl.glno]=t,<span class="built_in">this</span>.dp_webgl.glno&#125;,o.prototype.setupClip=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>,r=<span class="number">0</span>;r&lt;<span class="built_in">this</span>.clipContextList.length;r++)&#123;<span class="keyword">var</span> o=<span class="built_in">this</span>.clipContextList[r];<span class="built_in">this</span>.calcClippedDrawTotalBounds(t,o),o.isUsing&amp;&amp;i++&#125;<span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;<span class="keyword">var</span> n=e.gl.getParameter(e.gl.FRAMEBUFFER_BINDING),s=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">4</span>);s[<span class="number">0</span>]=<span class="number">0</span>,s[<span class="number">1</span>]=<span class="number">0</span>,s[<span class="number">2</span>]=e.gl.canvas.width,s[<span class="number">3</span>]=e.gl.canvas.height,e.gl.viewport(<span class="number">0</span>,<span class="number">0</span>,_t.clippingMaskBufferSize,_t.clippingMaskBufferSize),<span class="built_in">this</span>.setupLayoutBounds(i),e.gl.bindFramebuffer(e.gl.FRAMEBUFFER,_t.frameBuffers[<span class="built_in">this</span>.curFrameNo].framebuffer),e.gl.clearColor(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),e.gl.clear(e.gl.COLOR_BUFFER_BIT);<span class="keyword">for</span>(r=<span class="number">0</span>;r&lt;<span class="built_in">this</span>.clipContextList.length;r++)&#123;<span class="keyword">var</span> _=(o=<span class="built_in">this</span>.clipContextList[r]).allClippedDrawRect,a=(o.layoutChannelNo,o.layoutBounds);<span class="built_in">this</span>.tmpBoundsOnModel._$jL(_),<span class="built_in">this</span>.tmpBoundsOnModel.expand(<span class="number">.05</span>*_.width,<span class="number">.05</span>*_.height);<span class="keyword">var</span> h=a.width/<span class="built_in">this</span>.tmpBoundsOnModel.width,l=a.height/<span class="built_in">this</span>.tmpBoundsOnModel.height;<span class="built_in">this</span>.tmpMatrix2.identity(),<span class="built_in">this</span>.tmpMatrix2.translate(-<span class="number">1</span>,-<span class="number">1</span>,<span class="number">0</span>),<span class="built_in">this</span>.tmpMatrix2.scale(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>),<span class="built_in">this</span>.tmpMatrix2.translate(a.x,a.y,<span class="number">0</span>),<span class="built_in">this</span>.tmpMatrix2.scale(h,l,<span class="number">1</span>),<span class="built_in">this</span>.tmpMatrix2.translate(-<span class="built_in">this</span>.tmpBoundsOnModel.x,-<span class="built_in">this</span>.tmpBoundsOnModel.y,<span class="number">0</span>),<span class="built_in">this</span>.tmpMatrixForMask.setMatrix(<span class="built_in">this</span>.tmpMatrix2.m),<span class="built_in">this</span>.tmpMatrix2.identity(),<span class="built_in">this</span>.tmpMatrix2.translate(a.x,a.y,<span class="number">0</span>),<span class="built_in">this</span>.tmpMatrix2.scale(h,l,<span class="number">1</span>),<span class="built_in">this</span>.tmpMatrix2.translate(-<span class="built_in">this</span>.tmpBoundsOnModel.x,-<span class="built_in">this</span>.tmpBoundsOnModel.y,<span class="number">0</span>),<span class="built_in">this</span>.tmpMatrixForDraw.setMatrix(<span class="built_in">this</span>.tmpMatrix2.m);<span class="keyword">for</span>(<span class="keyword">var</span> $=<span class="built_in">this</span>.tmpMatrixForMask.getArray(),u=<span class="number">0</span>;u&lt;<span class="number">16</span>;u++)o.matrixForMask[u]=$[u];<span class="keyword">var</span> p=<span class="built_in">this</span>.tmpMatrixForDraw.getArray();<span class="keyword">for</span>(u=<span class="number">0</span>;u&lt;<span class="number">16</span>;u++)o.matrixForDraw[u]=p[u];<span class="keyword">for</span>(<span class="keyword">var</span> c=o.clippingMaskDrawIndexList.length,f=<span class="number">0</span>;f&lt;c;f++)&#123;<span class="keyword">var</span> g=o.clippingMaskDrawIndexList[f],y=t.getDrawData(g),d=t._$C2(g);e.setClipBufPre_clipContextForMask(o),y.draw(e,t,d)&#125;&#125;e.gl.bindFramebuffer(e.gl.FRAMEBUFFER,n),e.setClipBufPre_clipContextForMask(<span class="literal">null</span>),e.gl.viewport(s[<span class="number">0</span>],s[<span class="number">1</span>],s[<span class="number">2</span>],s[<span class="number">3</span>])&#125;&#125;,o.prototype.getColorBuffer=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.colorBuffer&#125;,o.prototype.findSameClip=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;<span class="built_in">this</span>.clipContextList.length;e++)&#123;<span class="keyword">var</span> i=<span class="built_in">this</span>.clipContextList[e],r=i.clipIDList.length;<span class="keyword">if</span>(r==t.length)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>,n=<span class="number">0</span>;n&lt;r;n++)<span class="keyword">for</span>(<span class="keyword">var</span> s=i.clipIDList[n],_=<span class="number">0</span>;_&lt;r;_++)<span class="keyword">if</span>(t[_]==s)&#123;o++;<span class="keyword">break</span>&#125;<span class="keyword">if</span>(o==r)<span class="keyword">return</span> i&#125;&#125;<span class="keyword">return</span> <span class="literal">null</span>&#125;,o.prototype.calcClippedDrawTotalBounds=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> i=t._$Ri.getModelImpl().getCanvasWidth(),r=t._$Ri.getModelImpl().getCanvasHeight(),o=i&gt;r?i:r,n=o,s=o,_=<span class="number">0</span>,a=<span class="number">0</span>,h=e.clippedDrawContextList.length,l=<span class="number">0</span>;l&lt;h;l++)&#123;<span class="keyword">var</span> $=e.clippedDrawContextList[l].drawDataIndex,u=t._$C2($);<span class="keyword">if</span>(u._$yo())&#123;<span class="keyword">for</span>(<span class="keyword">var</span> p=u.getTransformedPoints(),c=p.length,f=[],g=[],y=<span class="number">0</span>,d=B._$i2;d&lt;c;d+=B._$No)f[y]=p[d],g[y]=p[d+<span class="number">1</span>],y++;<span class="keyword">var</span> m=<span class="built_in">Math</span>.min.apply(<span class="literal">null</span>,f),T=<span class="built_in">Math</span>.min.apply(<span class="literal">null</span>,g),P=<span class="built_in">Math</span>.max.apply(<span class="literal">null</span>,f),S=<span class="built_in">Math</span>.max.apply(<span class="literal">null</span>,g);m&lt;n&amp;&amp;(n=m),T&lt;s&amp;&amp;(s=T),P&gt;_&amp;&amp;(_=P),S&gt;a&amp;&amp;(a=S)&#125;&#125;<span class="keyword">if</span>(n==o)e.allClippedDrawRect.x=<span class="number">0</span>,e.allClippedDrawRect.y=<span class="number">0</span>,e.allClippedDrawRect.width=<span class="number">0</span>,e.allClippedDrawRect.height=<span class="number">0</span>,e.isUsing=!<span class="number">1</span>;<span class="keyword">else</span>&#123;<span class="keyword">var</span> v=_-n,L=a-s;e.allClippedDrawRect.x=n,e.allClippedDrawRect.y=s,e.allClippedDrawRect.width=v,e.allClippedDrawRect.height=L,e.isUsing=!<span class="number">0</span>&#125;&#125;,o.prototype.setupLayoutBounds=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=t/o.CHANNEL_COUNT,i=t%o.CHANNEL_COUNT;e=~~e,i=~~i;<span class="keyword">for</span>(<span class="keyword">var</span> r=<span class="number">0</span>,n=<span class="number">0</span>;n&lt;o.CHANNEL_COUNT;n++)&#123;<span class="keyword">var</span> s=e+(n&lt;i?<span class="number">1</span>:<span class="number">0</span>);<span class="keyword">if</span>(<span class="number">0</span>==s);<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">1</span>==s)($=<span class="built_in">this</span>.clipContextList[r++]).layoutChannelNo=n,$.layoutBounds.x=<span class="number">0</span>,$.layoutBounds.y=<span class="number">0</span>,$.layoutBounds.width=<span class="number">1</span>,$.layoutBounds.height=<span class="number">1</span>;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">2</span>==s)<span class="keyword">for</span>(<span class="keyword">var</span> a=<span class="number">0</span>;a&lt;s;a++)&#123;<span class="keyword">var</span> h=<span class="number">0</span>;l=~~(l=a%<span class="number">2</span>),($=<span class="built_in">this</span>.clipContextList[r++]).layoutChannelNo=n,$.layoutBounds.x=<span class="number">.5</span>*l,$.layoutBounds.y=<span class="number">0</span>,$.layoutBounds.width=<span class="number">.5</span>,$.layoutBounds.height=<span class="number">1</span>&#125;<span class="keyword">else</span> <span class="keyword">if</span>(s&lt;=<span class="number">4</span>)<span class="keyword">for</span>(a=<span class="number">0</span>;a&lt;s;a++)&#123;l=~~(l=a%<span class="number">2</span>),h=~~(h=a/<span class="number">2</span>),($=<span class="built_in">this</span>.clipContextList[r++]).layoutChannelNo=n,$.layoutBounds.x=<span class="number">.5</span>*l,$.layoutBounds.y=<span class="number">.5</span>*h,$.layoutBounds.width=<span class="number">.5</span>,$.layoutBounds.height=<span class="number">.5</span>&#125;<span class="keyword">else</span> <span class="keyword">if</span>(s&lt;=<span class="number">9</span>)<span class="keyword">for</span>(a=<span class="number">0</span>;a&lt;s;a++)&#123;<span class="keyword">var</span> l,$;l=~~(l=a%<span class="number">3</span>),h=~~(h=a/<span class="number">3</span>),($=<span class="built_in">this</span>.clipContextList[r++]).layoutChannelNo=n,$.layoutBounds.x=l/<span class="number">3</span>,$.layoutBounds.y=h/<span class="number">3</span>,$.layoutBounds.width=<span class="number">1</span>/<span class="number">3</span>,$.layoutBounds.height=<span class="number">1</span>/<span class="number">3</span>&#125;<span class="keyword">else</span> _._$li(<span class="string">&quot;_$6 _$0P mask count : %d&quot;</span>,s)&#125;&#125;,n.prototype.addClippedDrawData=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=<span class="keyword">new</span> <span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>._$gP=t,<span class="built_in">this</span>.drawDataIndex=e&#125;(t,e);<span class="built_in">this</span>.clippedDrawContextList.push(i)&#125;,s._$JT=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">var</span> r=t/e,o=i/e,n=<span class="number">1</span>-(<span class="number">1</span>-o)*(<span class="number">1</span>-o),s=<span class="number">1</span>-(<span class="number">1</span>-o)*(<span class="number">1</span>-o),_=<span class="number">1</span>/<span class="number">3</span>*(<span class="number">1</span>-o)*n+(o*(<span class="number">2</span>/<span class="number">3</span>)+<span class="number">1</span>/<span class="number">3</span>*(<span class="number">1</span>-o))*(<span class="number">1</span>-n),a=(o+<span class="number">2</span>/<span class="number">3</span>*(<span class="number">1</span>-o))*s+(o*(<span class="number">1</span>/<span class="number">3</span>)+<span class="number">2</span>/<span class="number">3</span>*(<span class="number">1</span>-o))*(<span class="number">1</span>-s),h=<span class="number">1</span>-<span class="number">3</span>*a+<span class="number">3</span>*_-<span class="number">0</span>,l=<span class="number">3</span>*a-<span class="number">6</span>*_+<span class="number">0</span>,$=<span class="number">3</span>*_-<span class="number">0</span>;<span class="keyword">if</span>(r&lt;=<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;<span class="keyword">if</span>(r&gt;=<span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;<span class="keyword">var</span> u=r*r;<span class="keyword">return</span> h*(r*u)+l*u+$*r+<span class="number">0</span>&#125;,s.prototype._$a0=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,s.prototype.setFadeIn=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$dP=t&#125;,s.prototype.setFadeOut=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$eo=t&#125;,s.prototype._$pT=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$V0=t&#125;,s.prototype.getFadeOut=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$eo&#125;,s.prototype._$4T=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$eo&#125;,s.prototype._$mT=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$V0&#125;,s.prototype.getDurationMSec=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span>-<span class="number">1</span>&#125;,s.prototype.getLoopDurationMSec=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span>-<span class="number">1</span>&#125;,s.prototype.updateParam=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">if</span>(e._$AT&amp;&amp;!e._$9L)&#123;<span class="keyword">var</span> i=x.getUserTimeMSec();<span class="keyword">if</span>(e._$z2&lt;<span class="number">0</span>)&#123;e._$z2=i,e._$bs=i;<span class="keyword">var</span> r=<span class="built_in">this</span>.getDurationMSec();e._$Do&lt;<span class="number">0</span>&amp;&amp;(e._$Do=r&lt;=<span class="number">0</span>?-<span class="number">1</span>:e._$z2+r)&#125;<span class="keyword">var</span> o=<span class="built_in">this</span>._$V0;<span class="number">0</span>&lt;=(o=o*(<span class="number">0</span>==<span class="built_in">this</span>._$dP?<span class="number">1</span>:at._$r2((i-e._$bs)/<span class="built_in">this</span>._$dP))*(<span class="number">0</span>==<span class="built_in">this</span>._$eo||e._$Do&lt;<span class="number">0</span>?<span class="number">1</span>:at._$r2((e._$Do-i)/<span class="built_in">this</span>._$eo)))&amp;&amp;o&lt;=<span class="number">1</span>||<span class="built_in">console</span>.log(<span class="string">&quot;### assert!! ### &quot;</span>),<span class="built_in">this</span>.updateParamExe(t,i,o,e),e._$Do&gt;<span class="number">0</span>&amp;&amp;e._$Do&lt;i&amp;&amp;(e._$9L=!<span class="number">0</span>)&#125;&#125;,s.prototype.updateParamExe=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;&#125;,_._$8s=<span class="number">0</span>,_._$fT=<span class="keyword">new</span> <span class="built_in">Object</span>,_.start=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=_._$fT[t];<span class="literal">null</span>==e&amp;&amp;((e=<span class="keyword">new</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$r=<span class="literal">null</span>,<span class="built_in">this</span>._$0S=<span class="literal">null</span>&#125;)._$r=t,_._$fT[t]=e),e._$0S=x.getSystemTimeMSec()&#125;,_.dump=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=_._$fT[t];<span class="keyword">if</span>(<span class="literal">null</span>!=e)&#123;<span class="keyword">var</span> i=x.getSystemTimeMSec()-e._$0S;<span class="keyword">return</span> <span class="built_in">console</span>.log(t+<span class="string">&quot; : &quot;</span>+i+<span class="string">&quot;ms&quot;</span>),i&#125;<span class="keyword">return</span>-<span class="number">1</span>&#125;,_.end=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=_._$fT[t];<span class="keyword">return</span> <span class="literal">null</span>!=e?x.getSystemTimeMSec()-e._$0S:-<span class="number">1</span>&#125;,_._$li=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">&quot;_$li : &quot;</span>+t+<span class="string">&quot;\n&quot;</span>,e)&#125;,_._$Ji=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">console</span>.log(t,e)&#125;,_._$dL=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">console</span>.log(t,e),<span class="built_in">console</span>.log(<span class="string">&quot;\n&quot;</span>)&#125;,_._$KL=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;e;i++)i%<span class="number">16</span>==<span class="number">0</span>&amp;&amp;i&gt;<span class="number">0</span>?<span class="built_in">console</span>.log(<span class="string">&quot;\n&quot;</span>):i%<span class="number">8</span>==<span class="number">0</span>&amp;&amp;i&gt;<span class="number">0</span>&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;  &quot;</span>),<span class="built_in">console</span>.log(<span class="string">&quot;%02X &quot;</span>,<span class="number">255</span>&amp;t[i]);<span class="built_in">console</span>.log(<span class="string">&quot;\n&quot;</span>)&#125;,_._$nr=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">&quot;%s\n&quot;</span>,t);<span class="keyword">for</span>(<span class="keyword">var</span> r=e.length,o=<span class="number">0</span>;o&lt;r;++o)<span class="built_in">console</span>.log(<span class="string">&quot;%5d&quot;</span>,e[o]),<span class="built_in">console</span>.log(<span class="string">&quot;%s\n&quot;</span>,i),<span class="built_in">console</span>.log(<span class="string">&quot;,&quot;</span>);<span class="built_in">console</span>.log(<span class="string">&quot;\n&quot;</span>)&#125;,_._$Rb=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">&quot;dump exception : &quot;</span>+t),<span class="built_in">console</span>.log(<span class="string">&quot;stack :: &quot;</span>+t.stack)&#125;,a.prototype._$8P=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="number">.5</span>*(<span class="built_in">this</span>.x+<span class="built_in">this</span>.x+<span class="built_in">this</span>.width)&#125;,a.prototype._$6P=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="number">.5</span>*(<span class="built_in">this</span>.y+<span class="built_in">this</span>.y+<span class="built_in">this</span>.height)&#125;,a.prototype._$EL=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.x+<span class="built_in">this</span>.width&#125;,a.prototype._$5T=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.y+<span class="built_in">this</span>.height&#125;,a.prototype._$jL=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="built_in">this</span>.x=t,<span class="built_in">this</span>.y=e,<span class="built_in">this</span>.width=i,<span class="built_in">this</span>.height=r&#125;,a.prototype._$jL=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.x=t.x,<span class="built_in">this</span>.y=t.y,<span class="built_in">this</span>.width=t.width,<span class="built_in">this</span>.height=t.height&#125;,h.prototype=<span class="keyword">new</span> it,h._$tP=<span class="keyword">new</span> <span class="built_in">Object</span>,h._$27=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;h._$tP.clear()&#125;,h.getID=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=h._$tP[t];<span class="keyword">return</span> <span class="literal">null</span>==e&amp;&amp;(e=<span class="keyword">new</span> h(t),h._$tP[t]=e),e&#125;,h.prototype._$3s=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">new</span> h&#125;,l.prototype=<span class="keyword">new</span> it,l._$tP=<span class="keyword">new</span> <span class="built_in">Object</span>,l._$27=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;l._$tP.clear()&#125;,l.getID=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=l._$tP[t];<span class="keyword">return</span> <span class="literal">null</span>==e&amp;&amp;(e=<span class="keyword">new</span> l(t),l._$tP[t]=e),e&#125;,l.prototype._$3s=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">new</span> l&#125;,$._$<span class="number">42</span>=<span class="number">0</span>,$.prototype._$zP=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="literal">null</span>==<span class="built_in">this</span>._$vo&amp;&amp;(<span class="built_in">this</span>._$vo=<span class="keyword">new</span> rt),<span class="literal">null</span>==<span class="built_in">this</span>._$F2&amp;&amp;(<span class="built_in">this</span>._$F2=<span class="keyword">new</span> <span class="built_in">Array</span>)&#125;,$.prototype.getCanvasWidth=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$ao&#125;,$.prototype.getCanvasHeight=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$1S&#125;,$.prototype._$F0=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$vo=t._$nP(),<span class="built_in">this</span>._$F2=t._$nP(),<span class="built_in">this</span>._$ao=t._$6L(),<span class="built_in">this</span>._$1S=t._$6L()&#125;,$.prototype._$6S=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$F2.push(t)&#125;,$.prototype._$Xr=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$F2&#125;,$.prototype._$E2=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$vo&#125;,u.prototype.setup=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="built_in">this</span>._$ks=<span class="built_in">this</span>._$Yb(),<span class="built_in">this</span>.p2._$xT(),<span class="number">3</span>==<span class="built_in">arguments</span>.length&amp;&amp;(<span class="built_in">this</span>._$Fo=t,<span class="built_in">this</span>._$L2=e,<span class="built_in">this</span>.p1._$p=i,<span class="built_in">this</span>.p2._$p=i,<span class="built_in">this</span>.p2.y=t,<span class="built_in">this</span>.setup())&#125;,u.prototype.getPhysicsPoint1=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.p1&#125;,u.prototype.getPhysicsPoint2=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.p2&#125;,u.prototype._$qr=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$Db&#125;,u.prototype._$pr=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$Db=t&#125;,u.prototype._$5r=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$M2&#125;,u.prototype._$Cs=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$9b&#125;,u.prototype._$Yb=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span>-<span class="number">180</span>*<span class="built_in">Math</span>.atan2(<span class="built_in">this</span>.p1.x-<span class="built_in">this</span>.p2.x,-(<span class="built_in">this</span>.p1.y-<span class="built_in">this</span>.p2.y))/<span class="built_in">Math</span>.PI&#125;,u.prototype.addSrcParam=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="keyword">var</span> o=<span class="keyword">new</span> f(t,e,i,r);<span class="built_in">this</span>._$lL.push(o)&#125;,u.prototype.addTargetParam=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="keyword">var</span> o=<span class="keyword">new</span> y(t,e,i,r);<span class="built_in">this</span>._$qP.push(o)&#125;,u.prototype.update=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">if</span>(<span class="number">0</span>==<span class="built_in">this</span>._$iP)<span class="keyword">return</span> <span class="built_in">this</span>._$iP=<span class="built_in">this</span>._$iT=e,<span class="keyword">void</span>(<span class="built_in">this</span>._$Fo=<span class="built_in">Math</span>.sqrt((<span class="built_in">this</span>.p1.x-<span class="built_in">this</span>.p2.x)*(<span class="built_in">this</span>.p1.x-<span class="built_in">this</span>.p2.x)+(<span class="built_in">this</span>.p1.y-<span class="built_in">this</span>.p2.y)*(<span class="built_in">this</span>.p1.y-<span class="built_in">this</span>.p2.y)));<span class="keyword">var</span> i=(e-<span class="built_in">this</span>._$iT)/<span class="number">1e3</span>;<span class="keyword">if</span>(<span class="number">0</span>!=i)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> r=<span class="built_in">this</span>._$lL.length-<span class="number">1</span>;r&gt;=<span class="number">0</span>;--r)&#123;<span class="built_in">this</span>._$lL[r]._$oP(t,<span class="built_in">this</span>)&#125;<span class="built_in">this</span>._$oo(t,i),<span class="built_in">this</span>._$M2=<span class="built_in">this</span>._$Yb(),<span class="built_in">this</span>._$9b=(<span class="built_in">this</span>._$M2-<span class="built_in">this</span>._$ks)/i,<span class="built_in">this</span>._$ks=<span class="built_in">this</span>._$M2&#125;<span class="keyword">for</span>(r=<span class="built_in">this</span>._$qP.length-<span class="number">1</span>;r&gt;=<span class="number">0</span>;--r)&#123;<span class="built_in">this</span>._$qP[r]._$YS(t,<span class="built_in">this</span>)&#125;<span class="built_in">this</span>._$iT=e&#125;,u.prototype._$oo=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;e&lt;<span class="number">.033</span>&amp;&amp;(e=<span class="number">.033</span>);<span class="keyword">var</span> i=<span class="number">1</span>/e;<span class="built_in">this</span>.p1.vx=(<span class="built_in">this</span>.p1.x-<span class="built_in">this</span>.p1._$s0)*i,<span class="built_in">this</span>.p1.vy=(<span class="built_in">this</span>.p1.y-<span class="built_in">this</span>.p1._$70)*i,<span class="built_in">this</span>.p1.ax=(<span class="built_in">this</span>.p1.vx-<span class="built_in">this</span>.p1._$7L)*i,<span class="built_in">this</span>.p1.ay=(<span class="built_in">this</span>.p1.vy-<span class="built_in">this</span>.p1._$HL)*i,<span class="built_in">this</span>.p1.fx=<span class="built_in">this</span>.p1.ax*<span class="built_in">this</span>.p1._$p,<span class="built_in">this</span>.p1.fy=<span class="built_in">this</span>.p1.ay*<span class="built_in">this</span>.p1._$p,<span class="built_in">this</span>.p1._$xT();<span class="keyword">var</span> r,o,n=-<span class="built_in">Math</span>.atan2(<span class="built_in">this</span>.p1.y-<span class="built_in">this</span>.p2.y,<span class="built_in">this</span>.p1.x-<span class="built_in">this</span>.p2.x),s=<span class="built_in">Math</span>.cos(n),_=<span class="built_in">Math</span>.sin(n),a=<span class="number">9.8</span>*<span class="built_in">this</span>.p2._$p,h=<span class="built_in">this</span>._$Db*vt._$bS,l=a*<span class="built_in">Math</span>.cos(n-h);r=l*_,o=l*s;<span class="keyword">var</span> $=-<span class="built_in">this</span>.p1.fx*_*_,u=-<span class="built_in">this</span>.p1.fy*_*s,p=-<span class="built_in">this</span>.p2.vx*<span class="built_in">this</span>._$L2,c=-<span class="built_in">this</span>.p2.vy*<span class="built_in">this</span>._$L2;<span class="built_in">this</span>.p2.fx=r+$+p,<span class="built_in">this</span>.p2.fy=o+u+c,<span class="built_in">this</span>.p2.ax=<span class="built_in">this</span>.p2.fx/<span class="built_in">this</span>.p2._$p,<span class="built_in">this</span>.p2.ay=<span class="built_in">this</span>.p2.fy/<span class="built_in">this</span>.p2._$p,<span class="built_in">this</span>.p2.vx+=<span class="built_in">this</span>.p2.ax*e,<span class="built_in">this</span>.p2.vy+=<span class="built_in">this</span>.p2.ay*e,<span class="built_in">this</span>.p2.x+=<span class="built_in">this</span>.p2.vx*e,<span class="built_in">this</span>.p2.y+=<span class="built_in">this</span>.p2.vy*e;<span class="keyword">var</span> f=<span class="built_in">Math</span>.sqrt((<span class="built_in">this</span>.p1.x-<span class="built_in">this</span>.p2.x)*(<span class="built_in">this</span>.p1.x-<span class="built_in">this</span>.p2.x)+(<span class="built_in">this</span>.p1.y-<span class="built_in">this</span>.p2.y)*(<span class="built_in">this</span>.p1.y-<span class="built_in">this</span>.p2.y));<span class="built_in">this</span>.p2.x=<span class="built_in">this</span>.p1.x+<span class="built_in">this</span>._$Fo*(<span class="built_in">this</span>.p2.x-<span class="built_in">this</span>.p1.x)/f,<span class="built_in">this</span>.p2.y=<span class="built_in">this</span>.p1.y+<span class="built_in">this</span>._$Fo*(<span class="built_in">this</span>.p2.y-<span class="built_in">this</span>.p1.y)/f,<span class="built_in">this</span>.p2.vx=(<span class="built_in">this</span>.p2.x-<span class="built_in">this</span>.p2._$s0)*i,<span class="built_in">this</span>.p2.vy=(<span class="built_in">this</span>.p2.y-<span class="built_in">this</span>.p2._$70)*i,<span class="built_in">this</span>.p2._$xT()&#125;,p.prototype._$xT=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$s0=<span class="built_in">this</span>.x,<span class="built_in">this</span>._$70=<span class="built_in">this</span>.y,<span class="built_in">this</span>._$7L=<span class="built_in">this</span>.vx,<span class="built_in">this</span>._$HL=<span class="built_in">this</span>.vy&#125;,c.prototype._$oP=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;&#125;,f.prototype=<span class="keyword">new</span> c,f.prototype._$oP=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=<span class="built_in">this</span>.scale*t.getParamFloat(<span class="built_in">this</span>._$wL),r=e.getPhysicsPoint1();<span class="keyword">switch</span>(<span class="built_in">this</span>._$tL)&#123;<span class="attr">default</span>:<span class="keyword">case</span> u.Src.SRC_TO_X:r.x=r.x+(i-r.x)*<span class="built_in">this</span>._$V0;<span class="keyword">break</span>;<span class="keyword">case</span> u.Src.SRC_TO_Y:r.y=r.y+(i-r.y)*<span class="built_in">this</span>._$V0;<span class="keyword">break</span>;<span class="keyword">case</span> u.Src.SRC_TO_G_ANGLE:<span class="keyword">var</span> o=e._$qr();o+=(i-o)*<span class="built_in">this</span>._$V0,e._$pr(o)&#125;&#125;,g.prototype._$YS=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;&#125;,y.prototype=<span class="keyword">new</span> g,y.prototype._$YS=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">switch</span>(<span class="built_in">this</span>._$YP)&#123;<span class="attr">default</span>:<span class="keyword">case</span> u.Target.TARGET_FROM_ANGLE:t.setParamFloat(<span class="built_in">this</span>._$wL,<span class="built_in">this</span>.scale*e._$5r(),<span class="built_in">this</span>._$V0);<span class="keyword">break</span>;<span class="keyword">case</span> u.Target.TARGET_FROM_ANGLE_V:t.setParamFloat(<span class="built_in">this</span>._$wL,<span class="built_in">this</span>.scale*e._$Cs(),<span class="built_in">this</span>._$V0)&#125;&#125;,u.Src=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,u.Src.SRC_TO_X=<span class="string">&quot;SRC_TO_X&quot;</span>,u.Src.SRC_TO_Y=<span class="string">&quot;SRC_TO_Y&quot;</span>,u.Src.SRC_TO_G_ANGLE=<span class="string">&quot;SRC_TO_G_ANGLE&quot;</span>,u.Target=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,u.Target.TARGET_FROM_ANGLE=<span class="string">&quot;TARGET_FROM_ANGLE&quot;</span>,u.Target.TARGET_FROM_ANGLE_V=<span class="string">&quot;TARGET_FROM_ANGLE_V&quot;</span>,d.prototype.init=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$fL=t._$fL,<span class="built_in">this</span>._$gL=t._$gL,<span class="built_in">this</span>._$B0=t._$B0,<span class="built_in">this</span>._$z0=t._$z0,<span class="built_in">this</span>._$qT=t._$qT,<span class="built_in">this</span>.reflectX=t.reflectX,<span class="built_in">this</span>.reflectY=t.reflectY&#125;,d.prototype._$F0=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$fL=t._$_T(),<span class="built_in">this</span>._$gL=t._$_T(),<span class="built_in">this</span>._$B0=t._$_T(),<span class="built_in">this</span>._$z0=t._$_T(),<span class="built_in">this</span>._$qT=t._$_T(),t.getFormatVersion()&gt;=G.LIVE2D_FORMAT_VERSION_V2_10_SDK2&amp;&amp;(<span class="built_in">this</span>.reflectX=t._$po(),<span class="built_in">this</span>.reflectY=t._$po())&#125;,d.prototype._$e=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;<span class="keyword">var</span> T=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;<span class="function"><span class="keyword">function</span> <span class="title">P</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>.x=<span class="literal">null</span>,<span class="built_in">this</span>.y=<span class="literal">null</span>,<span class="built_in">this</span>.width=<span class="literal">null</span>,<span class="built_in">this</span>.height=<span class="literal">null</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">S</span>(<span class="params"></span>)</span>&#123;&#125;<span class="function"><span class="keyword">function</span> <span class="title">v</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>.x=<span class="literal">null</span>,<span class="built_in">this</span>.y=<span class="literal">null</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">L</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>._$gP=<span class="literal">null</span>,<span class="built_in">this</span>._$dr=<span class="literal">null</span>,<span class="built_in">this</span>._$GS=<span class="literal">null</span>,<span class="built_in">this</span>._$qb=<span class="literal">null</span>,<span class="built_in">this</span>._$Lb=<span class="literal">null</span>,<span class="built_in">this</span>._$mS=<span class="literal">null</span>,<span class="built_in">this</span>.clipID=<span class="literal">null</span>,<span class="built_in">this</span>.clipIDList=<span class="keyword">new</span> <span class="built_in">Array</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">M</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>._$Eb=M._$ps,<span class="built_in">this</span>._$lT=<span class="number">1</span>,<span class="built_in">this</span>._$C0=<span class="number">1</span>,<span class="built_in">this</span>._$tT=<span class="number">1</span>,<span class="built_in">this</span>._$WL=<span class="number">1</span>,<span class="built_in">this</span>.culling=!<span class="number">1</span>,<span class="built_in">this</span>.matrix4x4=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">16</span>),<span class="built_in">this</span>.premultipliedAlpha=!<span class="number">1</span>,<span class="built_in">this</span>.anisotropy=<span class="number">0</span>,<span class="built_in">this</span>.clippingProcess=M.CLIPPING_PROCESS_NONE,<span class="built_in">this</span>.clipBufPre_clipContextMask=<span class="literal">null</span>,<span class="built_in">this</span>.clipBufPre_clipContextDraw=<span class="literal">null</span>,<span class="built_in">this</span>.CHANNEL_COLORS=<span class="keyword">new</span> <span class="built_in">Array</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">E</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>.a=<span class="number">1</span>,<span class="built_in">this</span>.r=<span class="number">1</span>,<span class="built_in">this</span>.g=<span class="number">1</span>,<span class="built_in">this</span>.b=<span class="number">1</span>,<span class="built_in">this</span>.scale=<span class="number">1</span>,<span class="built_in">this</span>._$ho=<span class="number">1</span>,<span class="built_in">this</span>.blendMode=_t.L2D_COLOR_BLEND_MODE_MULT)&#125;<span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>._$kP=<span class="literal">null</span>,<span class="built_in">this</span>._$dr=<span class="literal">null</span>,<span class="built_in">this</span>._$Ai=!<span class="number">0</span>,<span class="built_in">this</span>._$mS=<span class="literal">null</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params"></span>)</span>&#123;&#125;<span class="function"><span class="keyword">function</span> <span class="title">I</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>._$VP=<span class="number">0</span>,<span class="built_in">this</span>._$wL=<span class="literal">null</span>,<span class="built_in">this</span>._$GP=<span class="literal">null</span>,<span class="built_in">this</span>._$8o=I._$ds,<span class="built_in">this</span>._$2r=-<span class="number">1</span>,<span class="built_in">this</span>._$O2=<span class="number">0</span>,<span class="built_in">this</span>._$ri=<span class="number">0</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">w</span>(<span class="params"></span>)</span>&#123;&#125;<span class="function"><span class="keyword">function</span> <span class="title">D</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>._$Ob=<span class="literal">null</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">O</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.m=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">16</span>),<span class="built_in">this</span>.identity()&#125;<span class="function"><span class="keyword">function</span> <span class="title">R</span>(<span class="params">t</span>)</span>&#123;i||it.prototype.constructor.call(<span class="built_in">this</span>,t)&#125;<span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>._$7=<span class="number">1</span>,<span class="built_in">this</span>._$f=<span class="number">0</span>,<span class="built_in">this</span>._$H=<span class="number">0</span>,<span class="built_in">this</span>._$g=<span class="number">1</span>,<span class="built_in">this</span>._$k=<span class="number">0</span>,<span class="built_in">this</span>._$w=<span class="number">0</span>,<span class="built_in">this</span>._$hi=STATE_IDENTITY,<span class="built_in">this</span>._$Z=_$pS)&#125;<span class="function"><span class="keyword">function</span> <span class="title">F</span>(<span class="params"></span>)</span>&#123;i||(s.prototype.constructor.call(<span class="built_in">this</span>),<span class="built_in">this</span>.motions=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>._$7r=<span class="literal">null</span>,<span class="built_in">this</span>._$7r=F._$Co++,<span class="built_in">this</span>._$D0=<span class="number">30</span>,<span class="built_in">this</span>._$yT=<span class="number">0</span>,<span class="built_in">this</span>._$E=!<span class="number">0</span>,<span class="built_in">this</span>.loopFadeIn=!<span class="number">0</span>,<span class="built_in">this</span>._$AS=-<span class="number">1</span>,_$a0())&#125;<span class="function"><span class="keyword">function</span> <span class="title">C</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$P=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">100</span>),<span class="built_in">this</span>.size=<span class="number">0</span>&#125;<span class="function"><span class="keyword">function</span> <span class="title">N</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$4P=<span class="literal">null</span>,<span class="built_in">this</span>._$I0=<span class="literal">null</span>,<span class="built_in">this</span>._$RP=<span class="literal">null</span>&#125;<span class="function"><span class="keyword">function</span> <span class="title">B</span>(<span class="params"></span>)</span>&#123;&#125;<span class="function"><span class="keyword">function</span> <span class="title">G</span>(<span class="params"></span>)</span>&#123;&#125;<span class="function"><span class="keyword">function</span> <span class="title">U</span>(<span class="params">t</span>)</span>&#123;i||(<span class="built_in">this</span>._$QT=!<span class="number">0</span>,<span class="built_in">this</span>._$co=-<span class="number">1</span>,<span class="built_in">this</span>._$qo=<span class="number">0</span>,<span class="built_in">this</span>._$pb=<span class="keyword">new</span> <span class="built_in">Array</span>(U._$is),<span class="built_in">this</span>._$_2=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(U._$is),<span class="built_in">this</span>._$vr=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(U._$is),<span class="built_in">this</span>._$Rr=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(U._$is),<span class="built_in">this</span>._$Or=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(U._$is),<span class="built_in">this</span>._$fs=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(U._$is),<span class="built_in">this</span>._$Js=<span class="keyword">new</span> <span class="built_in">Array</span>(U._$is),<span class="built_in">this</span>._$3S=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>._$aS=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>._$Bo=<span class="literal">null</span>,<span class="built_in">this</span>._$F2=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>._$db=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>._$8b=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>._$Hr=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>._$Ws=<span class="literal">null</span>,<span class="built_in">this</span>._$Vs=<span class="literal">null</span>,<span class="built_in">this</span>._$Er=<span class="literal">null</span>,<span class="built_in">this</span>._$Es=<span class="keyword">new</span> <span class="built_in">Int16Array</span>(B._$Qb),<span class="built_in">this</span>._$ZP=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">2</span>*B._$1r),<span class="built_in">this</span>._$Ri=t,<span class="built_in">this</span>._$b0=U._$HP++,<span class="built_in">this</span>.clipManager=<span class="literal">null</span>,<span class="built_in">this</span>.dp_webgl=<span class="literal">null</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">Y</span>(<span class="params"></span>)</span>&#123;&#125;<span class="function"><span class="keyword">function</span> <span class="title">k</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>._$12=<span class="literal">null</span>,<span class="built_in">this</span>._$bb=<span class="literal">null</span>,<span class="built_in">this</span>._$_L=<span class="literal">null</span>,<span class="built_in">this</span>._$jo=<span class="literal">null</span>,<span class="built_in">this</span>._$iL=<span class="literal">null</span>,<span class="built_in">this</span>._$0L=<span class="literal">null</span>,<span class="built_in">this</span>._$Br=<span class="literal">null</span>,<span class="built_in">this</span>._$Dr=<span class="literal">null</span>,<span class="built_in">this</span>._$Cb=<span class="literal">null</span>,<span class="built_in">this</span>._$mr=<span class="literal">null</span>,<span class="built_in">this</span>._$_L=V.STATE_FIRST,<span class="built_in">this</span>._$Br=<span class="number">4e3</span>,<span class="built_in">this</span>._$Dr=<span class="number">100</span>,<span class="built_in">this</span>._$Cb=<span class="number">50</span>,<span class="built_in">this</span>._$mr=<span class="number">150</span>,<span class="built_in">this</span>._$jo=!<span class="number">0</span>,<span class="built_in">this</span>._$iL=<span class="string">&quot;PARAM_EYE_L_OPEN&quot;</span>,<span class="built_in">this</span>._$0L=<span class="string">&quot;PARAM_EYE_R_OPEN&quot;</span>)&#125;T._$ni=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r,o,n,s,_,a</span>)</span>&#123;<span class="keyword">var</span> h=s*n-_*o;<span class="keyword">if</span>(<span class="number">0</span>==h)<span class="keyword">return</span> <span class="literal">null</span>;<span class="keyword">var</span> l,$=((t-i)*n-(e-r)*o)/h;<span class="keyword">return</span> l=<span class="number">0</span>!=o?(t-i-$*s)/o:(e-r-$*_)/n,<span class="built_in">isNaN</span>(l)&amp;&amp;(l=(t-i-$*s)/o,<span class="built_in">isNaN</span>(l)&amp;&amp;(l=(e-r-$*_)/n),<span class="built_in">isNaN</span>(l)&amp;&amp;(<span class="built_in">console</span>.log(<span class="string">&quot;a is NaN @UtVector#_$ni() &quot;</span>),<span class="built_in">console</span>.log(<span class="string">&quot;v1x : &quot;</span>+o),<span class="built_in">console</span>.log(<span class="string">&quot;v1x != 0 ? &quot;</span>+(<span class="number">0</span>!=o)))),<span class="literal">null</span>==a?<span class="keyword">new</span> <span class="built_in">Array</span>(l,$):(a[<span class="number">0</span>]=l,a[<span class="number">1</span>]=$,a)&#125;,P.prototype._$8P=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.x+<span class="number">.5</span>*<span class="built_in">this</span>.width&#125;,P.prototype._$6P=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.y+<span class="number">.5</span>*<span class="built_in">this</span>.height&#125;,P.prototype._$EL=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.x+<span class="built_in">this</span>.width&#125;,P.prototype._$5T=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.y+<span class="built_in">this</span>.height&#125;,P.prototype._$jL=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="built_in">this</span>.x=t,<span class="built_in">this</span>.y=e,<span class="built_in">this</span>.width=i,<span class="built_in">this</span>.height=r&#125;,P.prototype._$jL=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.x=t.x,<span class="built_in">this</span>.y=t.y,<span class="built_in">this</span>.width=t.width,<span class="built_in">this</span>.height=t.height&#125;,P.prototype.contains=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.x&lt;=<span class="built_in">this</span>.x&amp;&amp;<span class="built_in">this</span>.y&lt;=<span class="built_in">this</span>.y&amp;&amp;<span class="built_in">this</span>.x&lt;=<span class="built_in">this</span>.x+<span class="built_in">this</span>.width&amp;&amp;<span class="built_in">this</span>.y&lt;=<span class="built_in">this</span>.y+<span class="built_in">this</span>.height&#125;,P.prototype.expand=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>.x-=t,<span class="built_in">this</span>.y-=e,<span class="built_in">this</span>.width+=<span class="number">2</span>*t,<span class="built_in">this</span>.height+=<span class="number">2</span>*e&#125;,S._$Z2=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="keyword">var</span> o=e._$Q2(t,i),n=t._$vs(),s=t._$Tr();<span class="keyword">if</span>(e._$zr(n,s,o),o&lt;=<span class="number">0</span>)<span class="keyword">return</span> r[n[<span class="number">0</span>]];<span class="keyword">if</span>(<span class="number">1</span>==o)<span class="keyword">return</span>(_=r[n[<span class="number">0</span>]])+((a=r[n[<span class="number">1</span>]])-_)*($=s[<span class="number">0</span>])|<span class="number">0</span>;<span class="keyword">if</span>(<span class="number">2</span>==o)&#123;<span class="keyword">var</span> _=r[n[<span class="number">0</span>]],a=r[n[<span class="number">1</span>]],h=r[n[<span class="number">2</span>]],l=r[n[<span class="number">3</span>]],$=s[<span class="number">0</span>],u=s[<span class="number">1</span>];<span class="keyword">return</span>(S=_+(a-_)*$|<span class="number">0</span>)+((h+(l-h)*$|<span class="number">0</span>)-S)*u|<span class="number">0</span>&#125;<span class="keyword">if</span>(<span class="number">3</span>==o)&#123;<span class="keyword">var</span> p=r[n[<span class="number">0</span>]],c=r[n[<span class="number">1</span>]],f=r[n[<span class="number">2</span>]],g=r[n[<span class="number">3</span>]],y=r[n[<span class="number">4</span>]],d=r[n[<span class="number">5</span>]],m=r[n[<span class="number">6</span>]],T=r[n[<span class="number">7</span>]],P=($=s[<span class="number">0</span>],u=s[<span class="number">1</span>],s[<span class="number">2</span>]);<span class="keyword">return</span>(S=(_=p+(c-p)*$|<span class="number">0</span>)+((a=f+(g-f)*$|<span class="number">0</span>)-_)*u|<span class="number">0</span>)+(((h=y+(d-y)*$|<span class="number">0</span>)+((l=m+(T-m)*$|<span class="number">0</span>)-h)*u|<span class="number">0</span>)-S)*P|<span class="number">0</span>&#125;<span class="keyword">if</span>(<span class="number">4</span>==o)&#123;<span class="keyword">var</span> S,v=r[n[<span class="number">0</span>]],L=r[n[<span class="number">1</span>]],M=r[n[<span class="number">2</span>]],E=r[n[<span class="number">3</span>]],A=r[n[<span class="number">4</span>]],x=r[n[<span class="number">5</span>]],I=r[n[<span class="number">6</span>]],w=r[n[<span class="number">7</span>]],D=r[n[<span class="number">8</span>]],O=r[n[<span class="number">9</span>]],R=r[n[<span class="number">10</span>]],b=r[n[<span class="number">11</span>]],F=r[n[<span class="number">12</span>]],C=r[n[<span class="number">13</span>]],N=r[n[<span class="number">14</span>]],B=r[n[<span class="number">15</span>]],G=($=s[<span class="number">0</span>],u=s[<span class="number">1</span>],P=s[<span class="number">2</span>],s[<span class="number">3</span>]);<span class="keyword">return</span>(S=(_=(p=v+(L-v)*$|<span class="number">0</span>)+((c=M+(E-M)*$|<span class="number">0</span>)-p)*u|<span class="number">0</span>)+((a=(f=A+(x-A)*$|<span class="number">0</span>)+((g=I+(w-I)*$|<span class="number">0</span>)-f)*u|<span class="number">0</span>)-_)*P|<span class="number">0</span>)+(((h=(y=D+(O-D)*$|<span class="number">0</span>)+((d=R+(b-R)*$|<span class="number">0</span>)-y)*u|<span class="number">0</span>)+((l=(m=F+(C-F)*$|<span class="number">0</span>)+((T=N+(B-N)*$|<span class="number">0</span>)-m)*u|<span class="number">0</span>)-h)*P|<span class="number">0</span>)-S)*G|<span class="number">0</span>&#125;<span class="keyword">for</span>(<span class="keyword">var</span> U=<span class="number">1</span>&lt;&lt;o,Y=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(U),k=<span class="number">0</span>;k&lt;U;k++)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> V=k,X=<span class="number">1</span>,z=<span class="number">0</span>;z&lt;o;z++)X*=V%<span class="number">2</span>==<span class="number">0</span>?<span class="number">1</span>-s[z]:s[z],V/=<span class="number">2</span>;Y[k]=X&#125;<span class="keyword">for</span>(<span class="keyword">var</span> H=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(U),W=<span class="number">0</span>;W&lt;U;W++)H[W]=r[n[W]];<span class="keyword">var</span> j=<span class="number">0</span>;<span class="keyword">for</span>(W=<span class="number">0</span>;W&lt;U;W++)j+=Y[W]*H[W];<span class="keyword">return</span> j+<span class="number">.5</span>|<span class="number">0</span>&#125;,S._$br=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="keyword">var</span> o=e._$Q2(t,i),n=t._$vs(),s=t._$Tr();<span class="keyword">if</span>(e._$zr(n,s,o),o&lt;=<span class="number">0</span>)<span class="keyword">return</span> r[n[<span class="number">0</span>]];<span class="keyword">if</span>(<span class="number">1</span>==o)<span class="keyword">return</span>(_=r[n[<span class="number">0</span>]])+((a=r[n[<span class="number">1</span>]])-_)*($=s[<span class="number">0</span>]);<span class="keyword">if</span>(<span class="number">2</span>==o)&#123;<span class="keyword">var</span> _=r[n[<span class="number">0</span>]],a=r[n[<span class="number">1</span>]],h=r[n[<span class="number">2</span>]],l=r[n[<span class="number">3</span>]],$=s[<span class="number">0</span>];<span class="keyword">return</span>(<span class="number">1</span>-(T=s[<span class="number">1</span>]))*(_+(a-_)*$)+T*(h+(l-h)*$)&#125;<span class="keyword">if</span>(<span class="number">3</span>==o)&#123;<span class="keyword">var</span> u=r[n[<span class="number">0</span>]],p=r[n[<span class="number">1</span>]],c=r[n[<span class="number">2</span>]],f=r[n[<span class="number">3</span>]],g=r[n[<span class="number">4</span>]],y=r[n[<span class="number">5</span>]],d=r[n[<span class="number">6</span>]],m=r[n[<span class="number">7</span>]],T=($=s[<span class="number">0</span>],s[<span class="number">1</span>]);<span class="keyword">return</span>(<span class="number">1</span>-(N=s[<span class="number">2</span>]))*((<span class="number">1</span>-T)*(u+(p-u)*$)+T*(c+(f-c)*$))+N*((<span class="number">1</span>-T)*(g+(y-g)*$)+T*(d+(m-d)*$))&#125;<span class="keyword">if</span>(<span class="number">4</span>==o)&#123;<span class="keyword">var</span> P=r[n[<span class="number">0</span>]],S=r[n[<span class="number">1</span>]],v=r[n[<span class="number">2</span>]],L=r[n[<span class="number">3</span>]],M=r[n[<span class="number">4</span>]],E=r[n[<span class="number">5</span>]],A=r[n[<span class="number">6</span>]],x=r[n[<span class="number">7</span>]],I=r[n[<span class="number">8</span>]],w=r[n[<span class="number">9</span>]],D=r[n[<span class="number">10</span>]],O=r[n[<span class="number">11</span>]],R=r[n[<span class="number">12</span>]],b=r[n[<span class="number">13</span>]],F=r[n[<span class="number">14</span>]],C=r[n[<span class="number">15</span>]],N=($=s[<span class="number">0</span>],T=s[<span class="number">1</span>],s[<span class="number">2</span>]),B=s[<span class="number">3</span>];<span class="keyword">return</span>(<span class="number">1</span>-B)*((<span class="number">1</span>-N)*((<span class="number">1</span>-T)*(P+(S-P)*$)+T*(v+(L-v)*$))+N*((<span class="number">1</span>-T)*(M+(E-M)*$)+T*(A+(x-A)*$)))+B*((<span class="number">1</span>-N)*((<span class="number">1</span>-T)*(I+(w-I)*$)+T*(D+(O-D)*$))+N*((<span class="number">1</span>-T)*(R+(b-R)*$)+T*(F+(C-F)*$)))&#125;<span class="keyword">for</span>(<span class="keyword">var</span> G=<span class="number">1</span>&lt;&lt;o,U=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(G),Y=<span class="number">0</span>;Y&lt;G;Y++)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> k=Y,V=<span class="number">1</span>,X=<span class="number">0</span>;X&lt;o;X++)V*=k%<span class="number">2</span>==<span class="number">0</span>?<span class="number">1</span>-s[X]:s[X],k/=<span class="number">2</span>;U[Y]=V&#125;<span class="keyword">for</span>(<span class="keyword">var</span> z=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(G),H=<span class="number">0</span>;H&lt;G;H++)z[H]=r[n[H]];<span class="keyword">var</span> W=<span class="number">0</span>;<span class="keyword">for</span>(H=<span class="number">0</span>;H&lt;G;H++)W+=U[H]*z[H];<span class="keyword">return</span> W&#125;,S._$Vr=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r,o,n,s,_</span>)</span>&#123;<span class="keyword">var</span> a=e._$Q2(t,i),h=t._$vs(),l=t._$Tr();e._$zr(h,l,a);<span class="keyword">var</span> $=<span class="number">2</span>*r,u=s;<span class="keyword">if</span>(a&lt;=<span class="number">0</span>)&#123;<span class="keyword">var</span> p=o[h[<span class="number">0</span>]];<span class="keyword">if</span>(<span class="number">2</span>==_&amp;&amp;<span class="number">0</span>==s)x._$jT(p,<span class="number">0</span>,n,<span class="number">0</span>,$);<span class="keyword">else</span> <span class="keyword">for</span>(<span class="keyword">var</span> c=<span class="number">0</span>;c&lt;$;)n[u]=p[c++],n[u+<span class="number">1</span>]=p[c++],u+=_&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">1</span>==a)&#123;p=o[h[<span class="number">0</span>]];<span class="keyword">var</span> f=o[h[<span class="number">1</span>]],g=<span class="number">1</span>-(m=l[<span class="number">0</span>]);<span class="keyword">for</span>(c=<span class="number">0</span>;c&lt;$;)n[u]=p[c]*g+f[c]*m,++c,n[u+<span class="number">1</span>]=p[c]*g+f[c]*m,++c,u+=_&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">2</span>==a)&#123;p=o[h[<span class="number">0</span>]],f=o[h[<span class="number">1</span>]];<span class="keyword">var</span> y=o[h[<span class="number">2</span>]],d=o[h[<span class="number">3</span>]],m=l[<span class="number">0</span>],T=(k=<span class="number">1</span>-(R=l[<span class="number">1</span>]))*(g=<span class="number">1</span>-m),P=k*m,S=R*g,v=R*m;<span class="keyword">for</span>(c=<span class="number">0</span>;c&lt;$;)n[u]=T*p[c]+P*f[c]+S*y[c]+v*d[c],++c,n[u+<span class="number">1</span>]=T*p[c]+P*f[c]+S*y[c]+v*d[c],++c,u+=_&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">3</span>==a)&#123;<span class="keyword">var</span> L=o[h[<span class="number">0</span>]],M=o[h[<span class="number">1</span>]],E=o[h[<span class="number">2</span>]],A=o[h[<span class="number">3</span>]],I=o[h[<span class="number">4</span>]],w=o[h[<span class="number">5</span>]],D=o[h[<span class="number">6</span>]],O=o[h[<span class="number">7</span>]],R=(m=l[<span class="number">0</span>],l[<span class="number">1</span>]),b=(V=<span class="number">1</span>-(st=l[<span class="number">2</span>]))*(k=<span class="number">1</span>-R)*(g=<span class="number">1</span>-m),F=V*k*m,C=V*R*g,N=V*R*m,B=st*k*g,G=st*k*m,U=st*R*g,Y=st*R*m;<span class="keyword">for</span>(c=<span class="number">0</span>;c&lt;$;)n[u]=b*L[c]+F*M[c]+C*E[c]+N*A[c]+B*I[c]+G*w[c]+U*D[c]+Y*O[c],++c,n[u+<span class="number">1</span>]=b*L[c]+F*M[c]+C*E[c]+N*A[c]+B*I[c]+G*w[c]+U*D[c]+Y*O[c],++c,u+=_&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">4</span>==a)&#123;<span class="keyword">var</span> k,V,X=o[h[<span class="number">0</span>]],z=o[h[<span class="number">1</span>]],H=o[h[<span class="number">2</span>]],W=o[h[<span class="number">3</span>]],j=o[h[<span class="number">4</span>]],q=o[h[<span class="number">5</span>]],J=o[h[<span class="number">6</span>]],Q=o[h[<span class="number">7</span>]],Z=o[h[<span class="number">8</span>]],K=o[h[<span class="number">9</span>]],tt=o[h[<span class="number">10</span>]],et=o[h[<span class="number">11</span>]],it=o[h[<span class="number">12</span>]],rt=o[h[<span class="number">13</span>]],ot=o[h[<span class="number">14</span>]],nt=o[h[<span class="number">15</span>]],st=(m=l[<span class="number">0</span>],R=l[<span class="number">1</span>],l[<span class="number">2</span>]),_t=l[<span class="number">3</span>],at=<span class="number">1</span>-_t,ht=at*(V=<span class="number">1</span>-st)*(k=<span class="number">1</span>-R)*(g=<span class="number">1</span>-m),lt=at*V*k*m,$t=at*V*R*g,ut=at*V*R*m,pt=at*st*k*g,ct=at*st*k*m,ft=at*st*R*g,gt=at*st*R*m,yt=_t*V*k*g,dt=_t*V*k*m,mt=_t*V*R*g,Tt=_t*V*R*m,Pt=_t*st*k*g,St=_t*st*k*m,vt=_t*st*R*g,Lt=_t*st*R*m;<span class="keyword">for</span>(c=<span class="number">0</span>;c&lt;$;)n[u]=ht*X[c]+lt*z[c]+$t*H[c]+ut*W[c]+pt*j[c]+ct*q[c]+ft*J[c]+gt*Q[c]+yt*Z[c]+dt*K[c]+mt*tt[c]+Tt*et[c]+Pt*it[c]+St*rt[c]+vt*ot[c]+Lt*nt[c],++c,n[u+<span class="number">1</span>]=ht*X[c]+lt*z[c]+$t*H[c]+ut*W[c]+pt*j[c]+ct*q[c]+ft*J[c]+gt*Q[c]+yt*Z[c]+dt*K[c]+mt*tt[c]+Tt*et[c]+Pt*it[c]+St*rt[c]+vt*ot[c]+Lt*nt[c],++c,u+=_&#125;<span class="keyword">else</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> Mt=<span class="number">1</span>&lt;&lt;a,Et=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(Mt),At=<span class="number">0</span>;At&lt;Mt;At++)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> xt=At,It=<span class="number">1</span>,wt=<span class="number">0</span>;wt&lt;a;wt++)It*=xt%<span class="number">2</span>==<span class="number">0</span>?<span class="number">1</span>-l[wt]:l[wt],xt/=<span class="number">2</span>;Et[At]=It&#125;<span class="keyword">for</span>(<span class="keyword">var</span> Dt=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(Mt),Ot=<span class="number">0</span>;Ot&lt;Mt;Ot++)Dt[Ot]=o[h[Ot]];<span class="keyword">for</span>(c=<span class="number">0</span>;c&lt;$;)&#123;<span class="keyword">var</span> Rt=<span class="number">0</span>,bt=<span class="number">0</span>,Ft=c+<span class="number">1</span>;<span class="keyword">for</span>(Ot=<span class="number">0</span>;Ot&lt;Mt;Ot++)Rt+=Et[Ot]*Dt[Ot][c],bt+=Et[Ot]*Dt[Ot][Ft];c+=<span class="number">2</span>,n[u]=Rt,n[u+<span class="number">1</span>]=bt,u+=_&#125;&#125;&#125;,v.prototype._$HT=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>.x=t,<span class="built_in">this</span>.y=e&#125;,v.prototype._$HT=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.x=t.x,<span class="built_in">this</span>.y=t.y&#125;,L._$ur=-<span class="number">2</span>,L._$ES=<span class="number">500</span>,L._$wb=<span class="number">2</span>,L._$8S=<span class="number">3</span>,L._$52=L._$ES,L._$R2=L._$ES,L._$or=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> L._$52&#125;,L._$Pr=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> L._$R2&#125;,L.prototype.convertClipIDForV2_11=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=[];<span class="keyword">return</span> <span class="literal">null</span>==t?<span class="literal">null</span>:<span class="number">0</span>==t.length?<span class="literal">null</span>:<span class="regexp">/,/</span>.test(t)?e=t.id.split(<span class="string">&quot;,&quot;</span>):(e.push(t.id),e)&#125;,L.prototype._$F0=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$gP=t._$nP(),<span class="built_in">this</span>._$dr=t._$nP(),<span class="built_in">this</span>._$GS=t._$nP(),<span class="built_in">this</span>._$qb=t._$6L(),<span class="built_in">this</span>._$Lb=t._$cS(),<span class="built_in">this</span>._$mS=t._$Tb(),t.getFormatVersion()&gt;=G._$T7?(<span class="built_in">this</span>.clipID=t._$nP(),<span class="built_in">this</span>.clipIDList=<span class="built_in">this</span>.convertClipIDForV2_11(<span class="built_in">this</span>.clipID)):<span class="built_in">this</span>.clipIDList=[],<span class="built_in">this</span>._$MS(<span class="built_in">this</span>._$Lb)&#125;,L.prototype.getClipIDList=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.clipIDList&#125;,L.prototype.init=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;&#125;,L.prototype._$Nr=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">if</span>(e._$IS[<span class="number">0</span>]=!<span class="number">1</span>,e._$Us=S._$Z2(t,<span class="built_in">this</span>._$GS,e._$IS,<span class="built_in">this</span>._$Lb),_t._$Zs);<span class="keyword">else</span> <span class="keyword">if</span>(e._$IS[<span class="number">0</span>])<span class="keyword">return</span>;e._$7s=S._$br(t,<span class="built_in">this</span>._$GS,e._$IS,<span class="built_in">this</span>._$mS)&#125;,L.prototype._$2b=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;&#125;,L.prototype.getDrawDataID=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$gP&#125;,L.prototype._$j2=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$gP=t&#125;,L.prototype.getOpacity=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> e._$7s&#125;,L.prototype._$zS=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> e._$Us&#125;,L.prototype._$MS=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=t.length-<span class="number">1</span>;e&gt;=<span class="number">0</span>;--e)&#123;<span class="keyword">var</span> i=t[e];i&lt;L._$52?L._$52=i:i&gt;L._$R2&amp;&amp;(L._$R2=i)&#125;&#125;,L.prototype.getTargetBaseDataID=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$dr&#125;,L.prototype._$gs=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$dr=t&#125;,L.prototype._$32=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>!=<span class="built_in">this</span>._$dr&amp;&amp;<span class="built_in">this</span>._$dr!=yt._$2o()&#125;,L.prototype.preDraw=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;&#125;,L.prototype.draw=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;&#125;,L.prototype.getType=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,L.prototype._$B2=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;&#125;,M._$ps=<span class="number">32</span>,M.CLIPPING_PROCESS_NONE=<span class="number">0</span>,M.CLIPPING_PROCESS_OVERWRITE_ALPHA=<span class="number">1</span>,M.CLIPPING_PROCESS_MULTIPLY_ALPHA=<span class="number">2</span>,M.CLIPPING_PROCESS_DRAW=<span class="number">3</span>,M.CLIPPING_PROCESS_CLEAR_ALPHA=<span class="number">4</span>,M.prototype.setChannelFlagAsColor=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>.CHANNEL_COLORS[t]=e&#125;,M.prototype.getChannelFlagAsColor=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.CHANNEL_COLORS[t]&#125;,M.prototype._$ZT=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,M.prototype._$Uo=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r,o,n,s</span>)</span>&#123;&#125;,M.prototype._$Rs=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span>-<span class="number">1</span>&#125;,M.prototype._$Ds=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;&#125;,M.prototype.setBaseColor=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;t&lt;<span class="number">0</span>?t=<span class="number">0</span>:t&gt;<span class="number">1</span>&amp;&amp;(t=<span class="number">1</span>),e&lt;<span class="number">0</span>?e=<span class="number">0</span>:e&gt;<span class="number">1</span>&amp;&amp;(e=<span class="number">1</span>),i&lt;<span class="number">0</span>?i=<span class="number">0</span>:i&gt;<span class="number">1</span>&amp;&amp;(i=<span class="number">1</span>),r&lt;<span class="number">0</span>?r=<span class="number">0</span>:r&gt;<span class="number">1</span>&amp;&amp;(r=<span class="number">1</span>),<span class="built_in">this</span>._$lT=t,<span class="built_in">this</span>._$C0=e,<span class="built_in">this</span>._$tT=i,<span class="built_in">this</span>._$WL=r&#125;,M.prototype._$WP=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.culling=t&#125;,M.prototype.setMatrix=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;<span class="number">16</span>;e++)<span class="built_in">this</span>.matrix4x4[e]=t[e]&#125;,M.prototype._$IT=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.matrix4x4&#125;,M.prototype.setPremultipliedAlpha=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.premultipliedAlpha=t&#125;,M.prototype.isPremultipliedAlpha=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.premultipliedAlpha&#125;,M.prototype.setAnisotropy=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.anisotropy=t&#125;,M.prototype.getAnisotropy=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.anisotropy&#125;,M.prototype.getClippingProcess=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.clippingProcess&#125;,M.prototype.setClippingProcess=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.clippingProcess=t&#125;,M.prototype.setClipBufPre_clipContextForMask=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.clipBufPre_clipContextMask=t&#125;,M.prototype.getClipBufPre_clipContextMask=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.clipBufPre_clipContextMask&#125;,M.prototype.setClipBufPre_clipContextForDraw=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.clipBufPre_clipContextDraw=t&#125;,M.prototype.getClipBufPre_clipContextDraw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.clipBufPre_clipContextDraw&#125;,A._$ur=-<span class="number">2</span>,A._$c2=<span class="number">1</span>,A._$_b=<span class="number">2</span>,A.prototype._$F0=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$kP=t._$nP(),<span class="built_in">this</span>._$dr=t._$nP()&#125;,A.prototype.readV2_opacity=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;t.getFormatVersion()&gt;=G.LIVE2D_FORMAT_VERSION_V2_10_SDK2&amp;&amp;(<span class="built_in">this</span>._$mS=t._$Tb())&#125;,A.prototype.init=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;&#125;,A.prototype._$Nr=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;&#125;,A.prototype.interpolateOpacity=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="literal">null</span>==<span class="built_in">this</span>._$mS?i.setInterpolatedOpacity(<span class="number">1</span>):i.setInterpolatedOpacity(S._$br(t,e,r,<span class="built_in">this</span>._$mS))&#125;,A.prototype._$2b=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;&#125;,A.prototype._$nb=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r,o,n,s</span>)</span>&#123;&#125;,A.prototype.getType=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,A.prototype._$gs=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$dr=t&#125;,A.prototype._$a2=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$kP=t&#125;,A.prototype.getTargetBaseDataID=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$dr&#125;,A.prototype.getBaseDataID=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$kP&#125;,A.prototype._$32=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>!=<span class="built_in">this</span>._$dr&amp;&amp;<span class="built_in">this</span>._$dr!=yt._$2o()&#125;,x._$W2=<span class="number">0</span>,x._$CS=x._$W2,x._$Mo=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span>!<span class="number">0</span>&#125;,x._$XP=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">try</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=getTimeMSec();getTimeMSec()-e&lt;t;);&#125;<span class="keyword">catch</span>(t)&#123;t._$Rb()&#125;&#125;,x.getUserTimeMSec=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> x._$CS==x._$W2?x.getSystemTimeMSec():x._$CS&#125;,x.setUserTimeMSec=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;x._$CS=t&#125;,x.updateUserTimeMSec=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> x._$CS=x.getSystemTimeMSec()&#125;,x.getTimeMSec=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span>(<span class="keyword">new</span> <span class="built_in">Date</span>).getTime()&#125;,x.getSystemTimeMSec=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span>(<span class="keyword">new</span> <span class="built_in">Date</span>).getTime()&#125;,x._$Q=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;&#125;,x._$jT=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r,o</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="number">0</span>;n&lt;o;n++)i[r+n]=t[e+n]&#125;,I._$ds=-<span class="number">2</span>,I.prototype._$F0=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$wL=t._$nP(),<span class="built_in">this</span>._$VP=t._$6L(),<span class="built_in">this</span>._$GP=t._$nP()&#125;,I.prototype.getParamIndex=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$2r!=t&amp;&amp;(<span class="built_in">this</span>._$8o=I._$ds),<span class="built_in">this</span>._$8o&#125;,I.prototype._$Pb=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>._$8o=t,<span class="built_in">this</span>._$2r=e&#125;,I.prototype.getParamID=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$wL&#125;,I.prototype._$yP=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$wL=t&#125;,I.prototype._$N2=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$VP&#125;,I.prototype._$d2=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$GP&#125;,I.prototype._$t2=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>._$VP=t,<span class="built_in">this</span>._$GP=e&#125;,I.prototype._$Lr=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$O2&#125;,I.prototype._$wr=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$O2=t&#125;,I.prototype._$SL=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$ri&#125;,I.prototype._$AL=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$ri=t&#125;,w.startsWith=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">var</span> r=e+i.length;<span class="keyword">if</span>(r&gt;=t.length)<span class="keyword">return</span>!<span class="number">1</span>;<span class="keyword">for</span>(<span class="keyword">var</span> o=e;o&lt;r;o++)<span class="keyword">if</span>(w.getChar(t,o)!=i.charAt(o-e))<span class="keyword">return</span>!<span class="number">1</span>;<span class="keyword">return</span>!<span class="number">0</span>&#125;,w.getChar=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">String</span>.fromCharCode(t.getUint8(e))&#125;,w.createString=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> r=<span class="keyword">new</span> <span class="built_in">ArrayBuffer</span>(<span class="number">2</span>*i),o=<span class="keyword">new</span> <span class="built_in">Uint16Array</span>(r),n=<span class="number">0</span>;n&lt;i;n++)o[n]=t.getUint8(e+n);<span class="keyword">return</span> <span class="built_in">String</span>.fromCharCode.apply(<span class="literal">null</span>,o)&#125;,w._$LS=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;t <span class="keyword">instanceof</span> <span class="built_in">ArrayBuffer</span>&amp;&amp;(t=<span class="keyword">new</span> <span class="built_in">DataView</span>(t));<span class="keyword">var</span> o=i,n=!<span class="number">1</span>,s=!<span class="number">1</span>,_=<span class="number">0</span>,a=w.getChar(t,o);<span class="string">&quot;-&quot;</span>==a&amp;&amp;(n=!<span class="number">0</span>,o++);<span class="keyword">for</span>(<span class="keyword">var</span> h=!<span class="number">1</span>;o&lt;e;o++)&#123;<span class="keyword">switch</span>(a=w.getChar(t,o))&#123;<span class="keyword">case</span><span class="string">&quot;0&quot;</span>:_*=<span class="number">10</span>;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;1&quot;</span>:_=<span class="number">10</span>*_+<span class="number">1</span>;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;2&quot;</span>:_=<span class="number">10</span>*_+<span class="number">2</span>;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;3&quot;</span>:_=<span class="number">10</span>*_+<span class="number">3</span>;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;4&quot;</span>:_=<span class="number">10</span>*_+<span class="number">4</span>;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;5&quot;</span>:_=<span class="number">10</span>*_+<span class="number">5</span>;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;6&quot;</span>:_=<span class="number">10</span>*_+<span class="number">6</span>;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;7&quot;</span>:_=<span class="number">10</span>*_+<span class="number">7</span>;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;8&quot;</span>:_=<span class="number">10</span>*_+<span class="number">8</span>;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;9&quot;</span>:_=<span class="number">10</span>*_+<span class="number">9</span>;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;.&quot;</span>:s=!<span class="number">0</span>,o++,h=!<span class="number">0</span>;<span class="keyword">break</span>;<span class="keyword">default</span>:h=!<span class="number">0</span>&#125;<span class="keyword">if</span>(h)<span class="keyword">break</span>&#125;<span class="keyword">if</span>(s)<span class="keyword">for</span>(<span class="keyword">var</span> l=<span class="number">.1</span>,$=!<span class="number">1</span>;o&lt;e;o++)&#123;<span class="keyword">switch</span>(a=w.getChar(t,o))&#123;<span class="keyword">case</span><span class="string">&quot;0&quot;</span>:<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;1&quot;</span>:_+=<span class="number">1</span>*l;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;2&quot;</span>:_+=<span class="number">2</span>*l;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;3&quot;</span>:_+=<span class="number">3</span>*l;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;4&quot;</span>:_+=<span class="number">4</span>*l;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;5&quot;</span>:_+=<span class="number">5</span>*l;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;6&quot;</span>:_+=<span class="number">6</span>*l;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;7&quot;</span>:_+=<span class="number">7</span>*l;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;8&quot;</span>:_+=<span class="number">8</span>*l;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;9&quot;</span>:_+=<span class="number">9</span>*l;<span class="keyword">break</span>;<span class="keyword">default</span>:$=!<span class="number">0</span>&#125;<span class="keyword">if</span>(l*=<span class="number">.1</span>,$)<span class="keyword">break</span>&#125;<span class="keyword">return</span> n&amp;&amp;(_=-_),r[<span class="number">0</span>]=o,_&#125;,D.prototype._$zP=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$Ob=<span class="keyword">new</span> <span class="built_in">Array</span>&#125;,D.prototype._$F0=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$Ob=t._$nP()&#125;,D.prototype._$Ur=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(t._$WS())<span class="keyword">return</span>!<span class="number">0</span>;<span class="keyword">for</span>(<span class="keyword">var</span> e=t._$v2(),i=<span class="built_in">this</span>._$Ob.length-<span class="number">1</span>;i&gt;=<span class="number">0</span>;--i)&#123;<span class="keyword">var</span> r=<span class="built_in">this</span>._$Ob[i].getParamIndex(e);<span class="keyword">if</span>(r==I._$ds&amp;&amp;(r=t.getParamIndex(<span class="built_in">this</span>._$Ob[i].getParamID())),t._$Xb(r))<span class="keyword">return</span>!<span class="number">0</span>&#125;<span class="keyword">return</span>!<span class="number">1</span>&#125;,D.prototype._$Q2=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> i,r,o=<span class="built_in">this</span>._$Ob.length,n=t._$v2(),s=<span class="number">0</span>,_=<span class="number">0</span>;_&lt;o;_++)&#123;<span class="keyword">var</span> a=<span class="built_in">this</span>._$Ob[_];<span class="keyword">if</span>((i=a.getParamIndex(n))==I._$ds&amp;&amp;(i=t.getParamIndex(a.getParamID()),a._$Pb(i,n)),i&lt;<span class="number">0</span>)<span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;err 23242 : &quot;</span>+a.getParamID());<span class="keyword">var</span> h=i&lt;<span class="number">0</span>?<span class="number">0</span>:t.getParamFloat(i);r=a._$N2();<span class="keyword">var</span> l,$,u=a._$d2(),p=-<span class="number">1</span>,c=<span class="number">0</span>;<span class="keyword">if</span>(r&lt;<span class="number">1</span>);<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">1</span>==r)(l=u[<span class="number">0</span>])-B._$J&lt;h&amp;&amp;h&lt;l+B._$J?(p=<span class="number">0</span>,c=<span class="number">0</span>):(p=<span class="number">0</span>,e[<span class="number">0</span>]=!<span class="number">0</span>);<span class="keyword">else</span> <span class="keyword">if</span>(h&lt;(l=u[<span class="number">0</span>])-B._$J)p=<span class="number">0</span>,e[<span class="number">0</span>]=!<span class="number">0</span>;<span class="keyword">else</span> <span class="keyword">if</span>(h&lt;l+B._$J)p=<span class="number">0</span>;<span class="keyword">else</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> f=!<span class="number">1</span>,g=<span class="number">1</span>;g&lt;r;++g)&#123;<span class="keyword">if</span>(h&lt;($=u[g])+B._$J)&#123;$-B._$J&lt;h?p=g:(p=g-<span class="number">1</span>,c=(h-l)/($-l),s++),f=!<span class="number">0</span>;<span class="keyword">break</span>&#125;l=$&#125;f||(p=r-<span class="number">1</span>,c=<span class="number">0</span>,e[<span class="number">0</span>]=!<span class="number">0</span>)&#125;a._$wr(p),a._$AL(c)&#125;<span class="keyword">return</span> s&#125;,D.prototype._$zr=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">var</span> r=<span class="number">1</span>&lt;&lt;i;r+<span class="number">1</span>&gt;B._$Qb&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;err 23245\n&quot;</span>);<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="built_in">this</span>._$Ob.length,n=<span class="number">1</span>,s=<span class="number">1</span>,_=<span class="number">0</span>,a=<span class="number">0</span>;a&lt;r;++a)t[a]=<span class="number">0</span>;<span class="keyword">for</span>(<span class="keyword">var</span> h=<span class="number">0</span>;h&lt;o;++h)&#123;<span class="keyword">var</span> l=<span class="built_in">this</span>._$Ob[h];<span class="keyword">if</span>(<span class="number">0</span>==l._$SL())&#123;<span class="keyword">if</span>(($=l._$Lr()*n)&lt;<span class="number">0</span>&amp;&amp;_t._$3T)<span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;err 23246&quot;</span>);<span class="keyword">for</span>(a=<span class="number">0</span>;a&lt;r;++a)t[a]+=$&#125;<span class="keyword">else</span>&#123;<span class="keyword">var</span> $=n*l._$Lr(),u=n*(l._$Lr()+<span class="number">1</span>);<span class="keyword">for</span>(a=<span class="number">0</span>;a&lt;r;++a)t[a]+=(a/s|<span class="number">0</span>)%<span class="number">2</span>==<span class="number">0</span>?$:u;e[_++]=l._$SL(),s*=<span class="number">2</span>&#125;n*=l._$N2()&#125;t[r]=<span class="number">65535</span>,e[_]=-<span class="number">1</span>&#125;,D.prototype._$h2=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> r=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(e),o=<span class="number">0</span>;o&lt;e;++o)r[o]=i[o];<span class="keyword">var</span> n=<span class="keyword">new</span> I;n._$yP(t),n._$t2(e,r),<span class="built_in">this</span>._$Ob.push(n)&#125;,D.prototype._$J2=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=t,i=<span class="built_in">this</span>._$Ob.length,r=<span class="number">0</span>;r&lt;i;++r)&#123;<span class="keyword">var</span> o=<span class="built_in">this</span>._$Ob[r],n=o._$N2(),s=e%o._$N2(),_=o._$d2()[s];<span class="built_in">console</span>.log(<span class="string">&quot;%s[%d]=%7.2f / &quot;</span>,o.getParamID(),s,_),e/=n&#125;<span class="built_in">console</span>.log(<span class="string">&quot;\n&quot;</span>)&#125;,D.prototype.getParamCount=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$Ob.length&#125;,D.prototype._$zs=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$Ob&#125;,O.prototype.identity=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;<span class="number">16</span>;t++)<span class="built_in">this</span>.m[t]=t%<span class="number">5</span>==<span class="number">0</span>?<span class="number">1</span>:<span class="number">0</span>&#125;,O.prototype.getArray=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.m&#125;,O.prototype.getCopyMatrix=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="built_in">this</span>.m)&#125;,O.prototype.setMatrix=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(<span class="literal">null</span>!=t&amp;&amp;<span class="number">16</span>==t.length)<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;<span class="number">16</span>;e++)<span class="built_in">this</span>.m[e]=t[e]&#125;,O.prototype.mult=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==e?<span class="literal">null</span>:(<span class="built_in">this</span>==e?<span class="built_in">this</span>.mult_safe(<span class="built_in">this</span>.m,t.m,e.m,i):<span class="built_in">this</span>.mult_fast(<span class="built_in">this</span>.m,t.m,e.m,i),e)&#125;,O.prototype.mult_safe=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="keyword">if</span>(t==i)&#123;<span class="keyword">var</span> o=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">16</span>);<span class="built_in">this</span>.mult_fast(t,e,o,r);<span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="number">15</span>;n&gt;=<span class="number">0</span>;--n)i[n]=o[n]&#125;<span class="keyword">else</span> <span class="built_in">this</span>.mult_fast(t,e,i,r)&#125;,O.prototype.mult_fast=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;r?(i[<span class="number">0</span>]=t[<span class="number">0</span>]*e[<span class="number">0</span>]+t[<span class="number">4</span>]*e[<span class="number">1</span>]+t[<span class="number">8</span>]*e[<span class="number">2</span>],i[<span class="number">4</span>]=t[<span class="number">0</span>]*e[<span class="number">4</span>]+t[<span class="number">4</span>]*e[<span class="number">5</span>]+t[<span class="number">8</span>]*e[<span class="number">6</span>],i[<span class="number">8</span>]=t[<span class="number">0</span>]*e[<span class="number">8</span>]+t[<span class="number">4</span>]*e[<span class="number">9</span>]+t[<span class="number">8</span>]*e[<span class="number">10</span>],i[<span class="number">12</span>]=t[<span class="number">0</span>]*e[<span class="number">12</span>]+t[<span class="number">4</span>]*e[<span class="number">13</span>]+t[<span class="number">8</span>]*e[<span class="number">14</span>]+t[<span class="number">12</span>],i[<span class="number">1</span>]=t[<span class="number">1</span>]*e[<span class="number">0</span>]+t[<span class="number">5</span>]*e[<span class="number">1</span>]+t[<span class="number">9</span>]*e[<span class="number">2</span>],i[<span class="number">5</span>]=t[<span class="number">1</span>]*e[<span class="number">4</span>]+t[<span class="number">5</span>]*e[<span class="number">5</span>]+t[<span class="number">9</span>]*e[<span class="number">6</span>],i[<span class="number">9</span>]=t[<span class="number">1</span>]*e[<span class="number">8</span>]+t[<span class="number">5</span>]*e[<span class="number">9</span>]+t[<span class="number">9</span>]*e[<span class="number">10</span>],i[<span class="number">13</span>]=t[<span class="number">1</span>]*e[<span class="number">12</span>]+t[<span class="number">5</span>]*e[<span class="number">13</span>]+t[<span class="number">9</span>]*e[<span class="number">14</span>]+t[<span class="number">13</span>],i[<span class="number">2</span>]=t[<span class="number">2</span>]*e[<span class="number">0</span>]+t[<span class="number">6</span>]*e[<span class="number">1</span>]+t[<span class="number">10</span>]*e[<span class="number">2</span>],i[<span class="number">6</span>]=t[<span class="number">2</span>]*e[<span class="number">4</span>]+t[<span class="number">6</span>]*e[<span class="number">5</span>]+t[<span class="number">10</span>]*e[<span class="number">6</span>],i[<span class="number">10</span>]=t[<span class="number">2</span>]*e[<span class="number">8</span>]+t[<span class="number">6</span>]*e[<span class="number">9</span>]+t[<span class="number">10</span>]*e[<span class="number">10</span>],i[<span class="number">14</span>]=t[<span class="number">2</span>]*e[<span class="number">12</span>]+t[<span class="number">6</span>]*e[<span class="number">13</span>]+t[<span class="number">10</span>]*e[<span class="number">14</span>]+t[<span class="number">14</span>],i[<span class="number">3</span>]=i[<span class="number">7</span>]=i[<span class="number">11</span>]=<span class="number">0</span>,i[<span class="number">15</span>]=<span class="number">1</span>):(i[<span class="number">0</span>]=t[<span class="number">0</span>]*e[<span class="number">0</span>]+t[<span class="number">4</span>]*e[<span class="number">1</span>]+t[<span class="number">8</span>]*e[<span class="number">2</span>]+t[<span class="number">12</span>]*e[<span class="number">3</span>],i[<span class="number">4</span>]=t[<span class="number">0</span>]*e[<span class="number">4</span>]+t[<span class="number">4</span>]*e[<span class="number">5</span>]+t[<span class="number">8</span>]*e[<span class="number">6</span>]+t[<span class="number">12</span>]*e[<span class="number">7</span>],i[<span class="number">8</span>]=t[<span class="number">0</span>]*e[<span class="number">8</span>]+t[<span class="number">4</span>]*e[<span class="number">9</span>]+t[<span class="number">8</span>]*e[<span class="number">10</span>]+t[<span class="number">12</span>]*e[<span class="number">11</span>],i[<span class="number">12</span>]=t[<span class="number">0</span>]*e[<span class="number">12</span>]+t[<span class="number">4</span>]*e[<span class="number">13</span>]+t[<span class="number">8</span>]*e[<span class="number">14</span>]+t[<span class="number">12</span>]*e[<span class="number">15</span>],i[<span class="number">1</span>]=t[<span class="number">1</span>]*e[<span class="number">0</span>]+t[<span class="number">5</span>]*e[<span class="number">1</span>]+t[<span class="number">9</span>]*e[<span class="number">2</span>]+t[<span class="number">13</span>]*e[<span class="number">3</span>],i[<span class="number">5</span>]=t[<span class="number">1</span>]*e[<span class="number">4</span>]+t[<span class="number">5</span>]*e[<span class="number">5</span>]+t[<span class="number">9</span>]*e[<span class="number">6</span>]+t[<span class="number">13</span>]*e[<span class="number">7</span>],i[<span class="number">9</span>]=t[<span class="number">1</span>]*e[<span class="number">8</span>]+t[<span class="number">5</span>]*e[<span class="number">9</span>]+t[<span class="number">9</span>]*e[<span class="number">10</span>]+t[<span class="number">13</span>]*e[<span class="number">11</span>],i[<span class="number">13</span>]=t[<span class="number">1</span>]*e[<span class="number">12</span>]+t[<span class="number">5</span>]*e[<span class="number">13</span>]+t[<span class="number">9</span>]*e[<span class="number">14</span>]+t[<span class="number">13</span>]*e[<span class="number">15</span>],i[<span class="number">2</span>]=t[<span class="number">2</span>]*e[<span class="number">0</span>]+t[<span class="number">6</span>]*e[<span class="number">1</span>]+t[<span class="number">10</span>]*e[<span class="number">2</span>]+t[<span class="number">14</span>]*e[<span class="number">3</span>],i[<span class="number">6</span>]=t[<span class="number">2</span>]*e[<span class="number">4</span>]+t[<span class="number">6</span>]*e[<span class="number">5</span>]+t[<span class="number">10</span>]*e[<span class="number">6</span>]+t[<span class="number">14</span>]*e[<span class="number">7</span>],i[<span class="number">10</span>]=t[<span class="number">2</span>]*e[<span class="number">8</span>]+t[<span class="number">6</span>]*e[<span class="number">9</span>]+t[<span class="number">10</span>]*e[<span class="number">10</span>]+t[<span class="number">14</span>]*e[<span class="number">11</span>],i[<span class="number">14</span>]=t[<span class="number">2</span>]*e[<span class="number">12</span>]+t[<span class="number">6</span>]*e[<span class="number">13</span>]+t[<span class="number">10</span>]*e[<span class="number">14</span>]+t[<span class="number">14</span>]*e[<span class="number">15</span>],i[<span class="number">3</span>]=t[<span class="number">3</span>]*e[<span class="number">0</span>]+t[<span class="number">7</span>]*e[<span class="number">1</span>]+t[<span class="number">11</span>]*e[<span class="number">2</span>]+t[<span class="number">15</span>]*e[<span class="number">3</span>],i[<span class="number">7</span>]=t[<span class="number">3</span>]*e[<span class="number">4</span>]+t[<span class="number">7</span>]*e[<span class="number">5</span>]+t[<span class="number">11</span>]*e[<span class="number">6</span>]+t[<span class="number">15</span>]*e[<span class="number">7</span>],i[<span class="number">11</span>]=t[<span class="number">3</span>]*e[<span class="number">8</span>]+t[<span class="number">7</span>]*e[<span class="number">9</span>]+t[<span class="number">11</span>]*e[<span class="number">10</span>]+t[<span class="number">15</span>]*e[<span class="number">11</span>],i[<span class="number">15</span>]=t[<span class="number">3</span>]*e[<span class="number">12</span>]+t[<span class="number">7</span>]*e[<span class="number">13</span>]+t[<span class="number">11</span>]*e[<span class="number">14</span>]+t[<span class="number">15</span>]*e[<span class="number">15</span>])&#125;,O.prototype.translate=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="built_in">this</span>.m[<span class="number">12</span>]=<span class="built_in">this</span>.m[<span class="number">0</span>]*t+<span class="built_in">this</span>.m[<span class="number">4</span>]*e+<span class="built_in">this</span>.m[<span class="number">8</span>]*i+<span class="built_in">this</span>.m[<span class="number">12</span>],<span class="built_in">this</span>.m[<span class="number">13</span>]=<span class="built_in">this</span>.m[<span class="number">1</span>]*t+<span class="built_in">this</span>.m[<span class="number">5</span>]*e+<span class="built_in">this</span>.m[<span class="number">9</span>]*i+<span class="built_in">this</span>.m[<span class="number">13</span>],<span class="built_in">this</span>.m[<span class="number">14</span>]=<span class="built_in">this</span>.m[<span class="number">2</span>]*t+<span class="built_in">this</span>.m[<span class="number">6</span>]*e+<span class="built_in">this</span>.m[<span class="number">10</span>]*i+<span class="built_in">this</span>.m[<span class="number">14</span>],<span class="built_in">this</span>.m[<span class="number">15</span>]=<span class="built_in">this</span>.m[<span class="number">3</span>]*t+<span class="built_in">this</span>.m[<span class="number">7</span>]*e+<span class="built_in">this</span>.m[<span class="number">11</span>]*i+<span class="built_in">this</span>.m[<span class="number">15</span>]&#125;,O.prototype.scale=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="built_in">this</span>.m[<span class="number">0</span>]*=t,<span class="built_in">this</span>.m[<span class="number">4</span>]*=e,<span class="built_in">this</span>.m[<span class="number">8</span>]*=i,<span class="built_in">this</span>.m[<span class="number">1</span>]*=t,<span class="built_in">this</span>.m[<span class="number">5</span>]*=e,<span class="built_in">this</span>.m[<span class="number">9</span>]*=i,<span class="built_in">this</span>.m[<span class="number">2</span>]*=t,<span class="built_in">this</span>.m[<span class="number">6</span>]*=e,<span class="built_in">this</span>.m[<span class="number">10</span>]*=i,<span class="built_in">this</span>.m[<span class="number">3</span>]*=t,<span class="built_in">this</span>.m[<span class="number">7</span>]*=e,<span class="built_in">this</span>.m[<span class="number">11</span>]*=i&#125;,O.prototype.rotateX=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=vt.fcos(t),i=vt._$9(t),r=<span class="built_in">this</span>.m[<span class="number">4</span>];<span class="built_in">this</span>.m[<span class="number">4</span>]=r*e+<span class="built_in">this</span>.m[<span class="number">8</span>]*i,<span class="built_in">this</span>.m[<span class="number">8</span>]=r*-i+<span class="built_in">this</span>.m[<span class="number">8</span>]*e,r=<span class="built_in">this</span>.m[<span class="number">5</span>],<span class="built_in">this</span>.m[<span class="number">5</span>]=r*e+<span class="built_in">this</span>.m[<span class="number">9</span>]*i,<span class="built_in">this</span>.m[<span class="number">9</span>]=r*-i+<span class="built_in">this</span>.m[<span class="number">9</span>]*e,r=<span class="built_in">this</span>.m[<span class="number">6</span>],<span class="built_in">this</span>.m[<span class="number">6</span>]=r*e+<span class="built_in">this</span>.m[<span class="number">10</span>]*i,<span class="built_in">this</span>.m[<span class="number">10</span>]=r*-i+<span class="built_in">this</span>.m[<span class="number">10</span>]*e,r=<span class="built_in">this</span>.m[<span class="number">7</span>],<span class="built_in">this</span>.m[<span class="number">7</span>]=r*e+<span class="built_in">this</span>.m[<span class="number">11</span>]*i,<span class="built_in">this</span>.m[<span class="number">11</span>]=r*-i+<span class="built_in">this</span>.m[<span class="number">11</span>]*e&#125;,O.prototype.rotateY=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=vt.fcos(t),i=vt._$9(t),r=<span class="built_in">this</span>.m[<span class="number">0</span>];<span class="built_in">this</span>.m[<span class="number">0</span>]=r*e+<span class="built_in">this</span>.m[<span class="number">8</span>]*-i,<span class="built_in">this</span>.m[<span class="number">8</span>]=r*i+<span class="built_in">this</span>.m[<span class="number">8</span>]*e,r=<span class="built_in">this</span>.m[<span class="number">1</span>],<span class="built_in">this</span>.m[<span class="number">1</span>]=r*e+<span class="built_in">this</span>.m[<span class="number">9</span>]*-i,<span class="built_in">this</span>.m[<span class="number">9</span>]=r*i+<span class="built_in">this</span>.m[<span class="number">9</span>]*e,r=m[<span class="number">2</span>],<span class="built_in">this</span>.m[<span class="number">2</span>]=r*e+<span class="built_in">this</span>.m[<span class="number">10</span>]*-i,<span class="built_in">this</span>.m[<span class="number">10</span>]=r*i+<span class="built_in">this</span>.m[<span class="number">10</span>]*e,r=m[<span class="number">3</span>],<span class="built_in">this</span>.m[<span class="number">3</span>]=r*e+<span class="built_in">this</span>.m[<span class="number">11</span>]*-i,<span class="built_in">this</span>.m[<span class="number">11</span>]=r*i+<span class="built_in">this</span>.m[<span class="number">11</span>]*e&#125;,O.prototype.rotateZ=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=vt.fcos(t),i=vt._$9(t),r=<span class="built_in">this</span>.m[<span class="number">0</span>];<span class="built_in">this</span>.m[<span class="number">0</span>]=r*e+<span class="built_in">this</span>.m[<span class="number">4</span>]*i,<span class="built_in">this</span>.m[<span class="number">4</span>]=r*-i+<span class="built_in">this</span>.m[<span class="number">4</span>]*e,r=<span class="built_in">this</span>.m[<span class="number">1</span>],<span class="built_in">this</span>.m[<span class="number">1</span>]=r*e+<span class="built_in">this</span>.m[<span class="number">5</span>]*i,<span class="built_in">this</span>.m[<span class="number">5</span>]=r*-i+<span class="built_in">this</span>.m[<span class="number">5</span>]*e,r=<span class="built_in">this</span>.m[<span class="number">2</span>],<span class="built_in">this</span>.m[<span class="number">2</span>]=r*e+<span class="built_in">this</span>.m[<span class="number">6</span>]*i,<span class="built_in">this</span>.m[<span class="number">6</span>]=r*-i+<span class="built_in">this</span>.m[<span class="number">6</span>]*e,r=<span class="built_in">this</span>.m[<span class="number">3</span>],<span class="built_in">this</span>.m[<span class="number">3</span>]=r*e+<span class="built_in">this</span>.m[<span class="number">7</span>]*i,<span class="built_in">this</span>.m[<span class="number">7</span>]=r*-i+<span class="built_in">this</span>.m[<span class="number">7</span>]*e&#125;,R.prototype=<span class="keyword">new</span> it,R._$tP=<span class="keyword">new</span> <span class="built_in">Object</span>,R._$27=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;R._$tP.clear()&#125;,R.getID=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=R._$tP[t];<span class="keyword">return</span> <span class="literal">null</span>==e&amp;&amp;(e=<span class="keyword">new</span> R(t),R._$tP[t]=e),e&#125;,R.prototype._$3s=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">new</span> R&#125;,b._$kS=-<span class="number">1</span>,b._$pS=<span class="number">0</span>,b._$hb=<span class="number">1</span>,b.STATE_IDENTITY=<span class="number">0</span>,b._$gb=<span class="number">1</span>,b._$fo=<span class="number">2</span>,b._$go=<span class="number">4</span>,b.prototype.transform=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">var</span> r,o,n,s,_,a,h=<span class="number">0</span>,l=<span class="number">0</span>;<span class="keyword">switch</span>(<span class="built_in">this</span>._$hi)&#123;<span class="attr">default</span>:<span class="keyword">return</span>;<span class="keyword">case</span> b._$go|b._$fo|b._$gb:<span class="keyword">for</span>(r=<span class="built_in">this</span>._$7,o=<span class="built_in">this</span>._$H,n=<span class="built_in">this</span>._$k,s=<span class="built_in">this</span>._$f,_=<span class="built_in">this</span>._$g,a=<span class="built_in">this</span>._$w;--i&gt;=<span class="number">0</span>;)&#123;<span class="keyword">var</span> $=t[h++],u=t[h++];e[l++]=r*$+o*u+n,e[l++]=s*$+_*u+a&#125;<span class="keyword">return</span>;<span class="keyword">case</span> b._$go|b._$fo:<span class="keyword">for</span>(r=<span class="built_in">this</span>._$7,o=<span class="built_in">this</span>._$H,s=<span class="built_in">this</span>._$f,_=<span class="built_in">this</span>._$g;--i&gt;=<span class="number">0</span>;)&#123;$=t[h++],u=t[h++];e[l++]=r*$+o*u,e[l++]=s*$+_*u&#125;<span class="keyword">return</span>;<span class="keyword">case</span> b._$go|b._$gb:<span class="keyword">for</span>(o=<span class="built_in">this</span>._$H,n=<span class="built_in">this</span>._$k,s=<span class="built_in">this</span>._$f,a=<span class="built_in">this</span>._$w;--i&gt;=<span class="number">0</span>;)&#123;$=t[h++];e[l++]=o*t[h++]+n,e[l++]=s*$+a&#125;<span class="keyword">return</span>;<span class="keyword">case</span> b._$go:<span class="keyword">for</span>(o=<span class="built_in">this</span>._$H,s=<span class="built_in">this</span>._$f;--i&gt;=<span class="number">0</span>;)&#123;$=t[h++];e[l++]=o*t[h++],e[l++]=s*$&#125;<span class="keyword">return</span>;<span class="keyword">case</span> b._$fo|b._$gb:<span class="keyword">for</span>(r=<span class="built_in">this</span>._$7,n=<span class="built_in">this</span>._$k,_=<span class="built_in">this</span>._$g,a=<span class="built_in">this</span>._$w;--i&gt;=<span class="number">0</span>;)e[l++]=r*t[h++]+n,e[l++]=_*t[h++]+a;<span class="keyword">return</span>;<span class="keyword">case</span> b._$fo:<span class="keyword">for</span>(r=<span class="built_in">this</span>._$7,_=<span class="built_in">this</span>._$g;--i&gt;=<span class="number">0</span>;)e[l++]=r*t[h++],e[l++]=_*t[h++];<span class="keyword">return</span>;<span class="keyword">case</span> b._$gb:<span class="keyword">for</span>(n=<span class="built_in">this</span>._$k,a=<span class="built_in">this</span>._$w;--i&gt;=<span class="number">0</span>;)e[l++]=t[h++]+n,e[l++]=t[h++]+a;<span class="keyword">return</span>;<span class="keyword">case</span> b.STATE_IDENTITY:<span class="keyword">return</span> <span class="keyword">void</span>(t==e&amp;&amp;h==l||x._$jT(t,h,e,l,<span class="number">2</span>*i))&#125;&#125;,b.prototype.update=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="number">0</span>==<span class="built_in">this</span>._$H&amp;&amp;<span class="number">0</span>==<span class="built_in">this</span>._$f?<span class="number">1</span>==<span class="built_in">this</span>._$7&amp;&amp;<span class="number">1</span>==<span class="built_in">this</span>._$g?<span class="number">0</span>==<span class="built_in">this</span>._$k&amp;&amp;<span class="number">0</span>==<span class="built_in">this</span>._$w?(<span class="built_in">this</span>._$hi=b.STATE_IDENTITY,<span class="built_in">this</span>._$Z=b._$pS):(<span class="built_in">this</span>._$hi=b._$gb,<span class="built_in">this</span>._$Z=b._$hb):<span class="number">0</span>==<span class="built_in">this</span>._$k&amp;&amp;<span class="number">0</span>==<span class="built_in">this</span>._$w?(<span class="built_in">this</span>._$hi=b._$fo,<span class="built_in">this</span>._$Z=b._$kS):(<span class="built_in">this</span>._$hi=b._$fo|b._$gb,<span class="built_in">this</span>._$Z=b._$kS):<span class="number">0</span>==<span class="built_in">this</span>._$7&amp;&amp;<span class="number">0</span>==<span class="built_in">this</span>._$g?<span class="number">0</span>==<span class="built_in">this</span>._$k&amp;&amp;<span class="number">0</span>==<span class="built_in">this</span>._$w?(<span class="built_in">this</span>._$hi=b._$go,<span class="built_in">this</span>._$Z=b._$kS):(<span class="built_in">this</span>._$hi=b._$go|b._$gb,<span class="built_in">this</span>._$Z=b._$kS):<span class="number">0</span>==<span class="built_in">this</span>._$k&amp;&amp;<span class="number">0</span>==<span class="built_in">this</span>._$w?(<span class="built_in">this</span>._$hi=b._$go|b._$fo,<span class="built_in">this</span>._$Z=b._$kS):(<span class="built_in">this</span>._$hi=b._$go|b._$fo|b._$gb,<span class="built_in">this</span>._$Z=b._$kS)&#125;,b.prototype._$RT=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$IT(t);<span class="keyword">var</span> e=t[<span class="number">0</span>],i=t[<span class="number">2</span>],r=t[<span class="number">1</span>],o=t[<span class="number">3</span>],n=<span class="built_in">Math</span>.sqrt(e*e+r*r),s=e*o-i*r;<span class="number">0</span>==n?_t._$so&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;affine._$RT() / rt==0&quot;</span>):(t[<span class="number">0</span>]=n,t[<span class="number">1</span>]=s/n,t[<span class="number">2</span>]=(r*o+e*i)/s,t[<span class="number">3</span>]=<span class="built_in">Math</span>.atan2(r,e))&#125;,b.prototype._$ho=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="keyword">var</span> o=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">6</span>),n=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">6</span>);t._$RT(o),e._$RT(n);<span class="keyword">var</span> s=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">6</span>);s[<span class="number">0</span>]=o[<span class="number">0</span>]+(n[<span class="number">0</span>]-o[<span class="number">0</span>])*i,s[<span class="number">1</span>]=o[<span class="number">1</span>]+(n[<span class="number">1</span>]-o[<span class="number">1</span>])*i,s[<span class="number">2</span>]=o[<span class="number">2</span>]+(n[<span class="number">2</span>]-o[<span class="number">2</span>])*i,s[<span class="number">3</span>]=o[<span class="number">3</span>]+(n[<span class="number">3</span>]-o[<span class="number">3</span>])*i,s[<span class="number">4</span>]=o[<span class="number">4</span>]+(n[<span class="number">4</span>]-o[<span class="number">4</span>])*i,s[<span class="number">5</span>]=o[<span class="number">5</span>]+(n[<span class="number">5</span>]-o[<span class="number">5</span>])*i,r._$CT(s)&#125;,b.prototype._$CT=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="built_in">Math</span>.cos(t[<span class="number">3</span>]),i=<span class="built_in">Math</span>.sin(t[<span class="number">3</span>]);<span class="built_in">this</span>._$7=t[<span class="number">0</span>]*e,<span class="built_in">this</span>._$f=t[<span class="number">0</span>]*i,<span class="built_in">this</span>._$H=t[<span class="number">1</span>]*(t[<span class="number">2</span>]*e-i),<span class="built_in">this</span>._$g=t[<span class="number">1</span>]*(t[<span class="number">2</span>]*i+e),<span class="built_in">this</span>._$k=t[<span class="number">4</span>],<span class="built_in">this</span>._$w=t[<span class="number">5</span>],<span class="built_in">this</span>.update()&#125;,b.prototype._$IT=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;t[<span class="number">0</span>]=<span class="built_in">this</span>._$7,t[<span class="number">1</span>]=<span class="built_in">this</span>._$f,t[<span class="number">2</span>]=<span class="built_in">this</span>._$H,t[<span class="number">3</span>]=<span class="built_in">this</span>._$g,t[<span class="number">4</span>]=<span class="built_in">this</span>._$k,t[<span class="number">5</span>]=<span class="built_in">this</span>._$w&#125;,F.prototype=<span class="keyword">new</span> s,F._$cs=<span class="string">&quot;VISIBLE:&quot;</span>,F._$ar=<span class="string">&quot;LAYOUT:&quot;</span>,F._$Co=<span class="number">0</span>,F._$D2=[],F._$1T=<span class="number">1</span>,F.loadMotion=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="keyword">new</span> F,i=[<span class="number">0</span>],r=t.length;e._$yT=<span class="number">0</span>;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;r;++o)&#123;<span class="keyword">var</span> n=<span class="number">255</span>&amp;t[o];<span class="keyword">if</span>(<span class="string">&quot;\n&quot;</span>!=n&amp;&amp;<span class="string">&quot;\r&quot;</span>!=n)<span class="keyword">if</span>(<span class="string">&quot;#&quot;</span>!=n)<span class="keyword">if</span>(<span class="string">&quot;$&quot;</span>!=n)&#123;<span class="keyword">if</span>(<span class="string">&quot;a&quot;</span>&lt;=n&amp;&amp;n&lt;=<span class="string">&quot;z&quot;</span>||<span class="string">&quot;A&quot;</span>&lt;=n&amp;&amp;n&lt;=<span class="string">&quot;Z&quot;</span>||<span class="string">&quot;_&quot;</span>==n)&#123;<span class="keyword">for</span>(h=o,l=-<span class="number">1</span>;o&lt;r&amp;&amp;(<span class="string">&quot;\r&quot;</span>!=(n=<span class="number">255</span>&amp;t[o])&amp;&amp;<span class="string">&quot;\n&quot;</span>!=n);++o)<span class="keyword">if</span>(<span class="string">&quot;=&quot;</span>==n)&#123;l=o;<span class="keyword">break</span>&#125;<span class="keyword">if</span>(l&gt;=<span class="number">0</span>)&#123;<span class="keyword">var</span> s=<span class="keyword">new</span> N;w.startsWith(t,h,F._$cs)?(s._$RP=N._$hs,s._$4P=<span class="keyword">new</span> <span class="built_in">String</span>(t,h,l-h)):w.startsWith(t,h,F._$ar)?(s._$4P=<span class="keyword">new</span> <span class="built_in">String</span>(t,h+<span class="number">7</span>,l-h-<span class="number">7</span>),w.startsWith(t,h+<span class="number">7</span>,<span class="string">&quot;ANCHOR_X&quot;</span>)?s._$RP=N._$xs:w.startsWith(t,h+<span class="number">7</span>,<span class="string">&quot;ANCHOR_Y&quot;</span>)?s._$RP=N._$us:w.startsWith(t,h+<span class="number">7</span>,<span class="string">&quot;SCALE_X&quot;</span>)?s._$RP=N._$qs:w.startsWith(t,h+<span class="number">7</span>,<span class="string">&quot;SCALE_Y&quot;</span>)?s._$RP=N._$Ys:w.startsWith(t,h+<span class="number">7</span>,<span class="string">&quot;X&quot;</span>)?s._$RP=N._$ws:w.startsWith(t,h+<span class="number">7</span>,<span class="string">&quot;Y&quot;</span>)&amp;&amp;(s._$RP=N._$Ns)):(s._$RP=N._$Fr,s._$4P=<span class="keyword">new</span> <span class="built_in">String</span>(t,h,l-h)),e.motions.push(s);<span class="keyword">var</span> _=<span class="number">0</span>;<span class="keyword">for</span>(F._$D2.clear(),o=l+<span class="number">1</span>;o&lt;r&amp;&amp;(<span class="string">&quot;\r&quot;</span>!=(n=<span class="number">255</span>&amp;t[o])&amp;&amp;<span class="string">&quot;\n&quot;</span>!=n);++o)<span class="keyword">if</span>(<span class="string">&quot;,&quot;</span>!=n&amp;&amp;<span class="string">&quot; &quot;</span>!=n&amp;&amp;<span class="string">&quot;\t&quot;</span>!=n)&#123;u=w._$LS(t,r,o,i);<span class="keyword">if</span>(i[<span class="number">0</span>]&gt;<span class="number">0</span>)&#123;F._$D2.push(u),_++;<span class="keyword">var</span> a=i[<span class="number">0</span>];<span class="keyword">if</span>(a&lt;o)&#123;<span class="built_in">console</span>.log(<span class="string">&quot;_$n0 _$hi . @Live2DMotion loadMotion()\n&quot;</span>);<span class="keyword">break</span>&#125;o=a&#125;&#125;s._$I0=F._$D2._$BL(),_&gt;e._$yT&amp;&amp;(e._$yT=_)&#125;&#125;&#125;<span class="keyword">else</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> h=o,l=-<span class="number">1</span>;o&lt;r&amp;&amp;(<span class="string">&quot;\r&quot;</span>!=(n=<span class="number">255</span>&amp;t[o])&amp;&amp;<span class="string">&quot;\n&quot;</span>!=n);++o)<span class="keyword">if</span>(<span class="string">&quot;=&quot;</span>==n)&#123;l=o;<span class="keyword">break</span>&#125;<span class="keyword">var</span> $=!<span class="number">1</span>;<span class="keyword">if</span>(l&gt;=<span class="number">0</span>)<span class="keyword">for</span>(l==h+<span class="number">4</span>&amp;&amp;<span class="string">&quot;f&quot;</span>==t[h+<span class="number">1</span>]&amp;&amp;<span class="string">&quot;p&quot;</span>==t[h+<span class="number">2</span>]&amp;&amp;<span class="string">&quot;s&quot;</span>==t[h+<span class="number">3</span>]&amp;&amp;($=!<span class="number">0</span>),o=l+<span class="number">1</span>;o&lt;r&amp;&amp;(<span class="string">&quot;\r&quot;</span>!=(n=<span class="number">255</span>&amp;t[o])&amp;&amp;<span class="string">&quot;\n&quot;</span>!=n);++o)<span class="keyword">if</span>(<span class="string">&quot;,&quot;</span>!=n&amp;&amp;<span class="string">&quot; &quot;</span>!=n&amp;&amp;<span class="string">&quot;\t&quot;</span>!=n)&#123;<span class="keyword">var</span> u=w._$LS(t,r,o,i);i[<span class="number">0</span>]&gt;<span class="number">0</span>&amp;&amp;$&amp;&amp;<span class="number">5</span>&lt;u&amp;&amp;u&lt;<span class="number">121</span>&amp;&amp;(e._$D0=u),o=i[<span class="number">0</span>]&#125;<span class="keyword">for</span>(;o&lt;r&amp;&amp;(<span class="string">&quot;\n&quot;</span>!=t[o]&amp;&amp;<span class="string">&quot;\r&quot;</span>!=t[o]);++o);&#125;<span class="keyword">else</span> <span class="keyword">for</span>(;o&lt;r&amp;&amp;(<span class="string">&quot;\n&quot;</span>!=t[o]&amp;&amp;<span class="string">&quot;\r&quot;</span>!=t[o]);++o);&#125;<span class="keyword">return</span> e._$AS=<span class="number">1e3</span>*e._$yT/e._$D0|<span class="number">0</span>,e&#125;,F.prototype.getDurationMSec=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$AS&#125;,F.prototype.dump=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;<span class="built_in">this</span>.motions.length;t++)&#123;<span class="keyword">var</span> e=<span class="built_in">this</span>.motions[t];<span class="built_in">console</span>.log(<span class="string">&quot;_$wL[%s] [%d]. &quot;</span>,e._$4P,e._$I0.length);<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;e._$I0.length&amp;&amp;i&lt;<span class="number">10</span>;i++)<span class="built_in">console</span>.log(<span class="string">&quot;%5.2f ,&quot;</span>,e._$I0[i]);<span class="built_in">console</span>.log(<span class="string">&quot;\n&quot;</span>)&#125;&#125;,F.prototype.updateParamExe=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=(e-r._$z2)*<span class="built_in">this</span>._$D0/<span class="number">1e3</span>,n=<span class="number">0</span>|o,s=o-n,_=<span class="number">0</span>;_&lt;<span class="built_in">this</span>.motions.length;_++)&#123;<span class="keyword">var</span> a=<span class="built_in">this</span>.motions[_],h=a._$I0.length,l=a._$4P;<span class="keyword">if</span>(a._$RP==N._$hs)&#123;<span class="keyword">var</span> $=a._$I0[n&gt;=h?h-<span class="number">1</span>:n];t.setParamFloat(l,$)&#125;<span class="keyword">else</span> <span class="keyword">if</span>(N._$ws&lt;=a._$RP&amp;&amp;a._$RP&lt;=N._$Ys);<span class="keyword">else</span>&#123;<span class="keyword">var</span> u=t.getParamFloat(l),p=a._$I0[n&gt;=h?h-<span class="number">1</span>:n],c=u+(p+(a._$I0[n+<span class="number">1</span>&gt;=h?h-<span class="number">1</span>:n+<span class="number">1</span>]-p)*s-u)*i;t.setParamFloat(l,c)&#125;&#125;n&gt;=<span class="built_in">this</span>._$yT&amp;&amp;(<span class="built_in">this</span>._$E?(r._$z2=e,<span class="built_in">this</span>.loopFadeIn&amp;&amp;(r._$bs=e)):r._$9L=!<span class="number">0</span>)&#125;,F.prototype._$r0=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$E&#125;,F.prototype._$aL=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$E=t&#125;,F.prototype.isLoopFadeIn=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.loopFadeIn&#125;,F.prototype.setLoopFadeIn=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.loopFadeIn=t&#125;,C.prototype.clear=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.size=<span class="number">0</span>&#125;,C.prototype.add=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(<span class="built_in">this</span>._$P.length&lt;=<span class="built_in">this</span>.size)&#123;<span class="keyword">var</span> e=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">2</span>*<span class="built_in">this</span>.size);x._$jT(<span class="built_in">this</span>._$P,<span class="number">0</span>,e,<span class="number">0</span>,<span class="built_in">this</span>.size),<span class="built_in">this</span>._$P=e&#125;<span class="built_in">this</span>._$P[<span class="built_in">this</span>.size++]=t&#125;,C.prototype._$BL=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="built_in">this</span>.size);<span class="keyword">return</span> x._$jT(<span class="built_in">this</span>._$P,<span class="number">0</span>,t,<span class="number">0</span>,<span class="built_in">this</span>.size),t&#125;,N._$Fr=<span class="number">0</span>,N._$hs=<span class="number">1</span>,N._$ws=<span class="number">100</span>,N._$Ns=<span class="number">101</span>,N._$xs=<span class="number">102</span>,N._$us=<span class="number">103</span>,N._$qs=<span class="number">104</span>,N._$Ys=<span class="number">105</span>,B._$Ms=<span class="number">1</span>,B._$Qs=<span class="number">2</span>,B._$i2=<span class="number">0</span>,B._$No=<span class="number">2</span>,B._$do=B._$Ms,B._$Ls=!<span class="number">0</span>,B._$1r=<span class="number">5</span>,B._$Qb=<span class="number">65</span>,B._$J=<span class="number">1e-4</span>,B._$FT=<span class="number">.001</span>,B._$Ss=<span class="number">3</span>,G._$o7=<span class="number">6</span>,G._$S7=<span class="number">7</span>,G._$s7=<span class="number">8</span>,G._$77=<span class="number">9</span>,G.LIVE2D_FORMAT_VERSION_V2_10_SDK2=<span class="number">10</span>,G.LIVE2D_FORMAT_VERSION_V2_11_SDK2_1=<span class="number">11</span>,G._$T7=G.LIVE2D_FORMAT_VERSION_V2_11_SDK2_1,G._$Is=-<span class="number">2004318072</span>,G._$h0=<span class="number">0</span>,G._$4L=<span class="number">23</span>,G._$7P=<span class="number">33</span>,G._$uT=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">&quot;_$bo :: _$6 _$mo _$E0 : %d\n&quot;</span>,t)&#125;,G._$9o=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(t&lt;<span class="number">40</span>)<span class="keyword">return</span> G._$uT(t),<span class="literal">null</span>;<span class="keyword">if</span>(t&lt;<span class="number">50</span>)<span class="keyword">return</span> G._$uT(t),<span class="literal">null</span>;<span class="keyword">if</span>(t&lt;<span class="number">60</span>)<span class="keyword">return</span> G._$uT(t),<span class="literal">null</span>;<span class="keyword">if</span>(t&lt;<span class="number">100</span>)<span class="keyword">switch</span>(t)&#123;<span class="keyword">case</span> <span class="number">65</span>:<span class="keyword">return</span> <span class="keyword">new</span> Z;<span class="keyword">case</span> <span class="number">66</span>:<span class="keyword">return</span> <span class="keyword">new</span> D;<span class="keyword">case</span> <span class="number">67</span>:<span class="keyword">return</span> <span class="keyword">new</span> I;<span class="keyword">case</span> <span class="number">68</span>:<span class="keyword">return</span> <span class="keyword">new</span> z;<span class="keyword">case</span> <span class="number">69</span>:<span class="keyword">return</span> <span class="keyword">new</span> d;<span class="keyword">case</span> <span class="number">70</span>:<span class="keyword">return</span> <span class="keyword">new</span> lt;<span class="keyword">default</span>:<span class="keyword">return</span> G._$uT(t),<span class="literal">null</span>&#125;<span class="keyword">else</span> <span class="keyword">if</span>(t&lt;<span class="number">150</span>)<span class="keyword">switch</span>(t)&#123;<span class="keyword">case</span> <span class="number">131</span>:<span class="keyword">return</span> <span class="keyword">new</span> nt;<span class="keyword">case</span> <span class="number">133</span>:<span class="keyword">return</span> <span class="keyword">new</span> tt;<span class="keyword">case</span> <span class="number">136</span>:<span class="keyword">return</span> <span class="keyword">new</span> $;<span class="keyword">case</span> <span class="number">137</span>:<span class="keyword">return</span> <span class="keyword">new</span> rt;<span class="keyword">case</span> <span class="number">142</span>:<span class="keyword">return</span> <span class="keyword">new</span> j&#125;<span class="keyword">return</span> G._$uT(t),<span class="literal">null</span>&#125;,U._$HP=<span class="number">0</span>,U._$_0=!<span class="number">0</span>,U._$V2=-<span class="number">1</span>,U._$W0=-<span class="number">1</span>,U._$jr=!<span class="number">1</span>,U._$ZS=!<span class="number">0</span>,U._$tr=-<span class="number">1e6</span>,U._$lr=<span class="number">1e6</span>,U._$is=<span class="number">32</span>,U._$e=!<span class="number">1</span>,U.prototype.getDrawDataIndex=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="built_in">this</span>._$aS.length-<span class="number">1</span>;e&gt;=<span class="number">0</span>;--e)<span class="keyword">if</span>(<span class="literal">null</span>!=<span class="built_in">this</span>._$aS[e]&amp;&amp;<span class="built_in">this</span>._$aS[e].getDrawDataID()==t)<span class="keyword">return</span> e;<span class="keyword">return</span>-<span class="number">1</span>&#125;,U.prototype.getDrawData=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(t <span class="keyword">instanceof</span> R)&#123;<span class="keyword">if</span>(<span class="literal">null</span>==<span class="built_in">this</span>._$Bo)&#123;<span class="built_in">this</span>._$Bo=<span class="keyword">new</span> <span class="built_in">Object</span>;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="built_in">this</span>._$aS.length,i=<span class="number">0</span>;i&lt;e;i++)&#123;<span class="keyword">var</span> r=<span class="built_in">this</span>._$aS[i],o=r.getDrawDataID();<span class="literal">null</span>!=o&amp;&amp;(<span class="built_in">this</span>._$Bo[o]=r)&#125;&#125;<span class="keyword">return</span> <span class="built_in">this</span>._$Bo[id]&#125;<span class="keyword">return</span> t&lt;<span class="built_in">this</span>._$aS.length?<span class="built_in">this</span>._$aS[t]:<span class="literal">null</span>&#125;,U.prototype.release=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$3S.clear(),<span class="built_in">this</span>._$aS.clear(),<span class="built_in">this</span>._$F2.clear(),<span class="literal">null</span>!=<span class="built_in">this</span>._$Bo&amp;&amp;<span class="built_in">this</span>._$Bo.clear(),<span class="built_in">this</span>._$db.clear(),<span class="built_in">this</span>._$8b.clear(),<span class="built_in">this</span>._$Hr.clear()&#125;,U.prototype.init=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$co++,<span class="built_in">this</span>._$F2.length&gt;<span class="number">0</span>&amp;&amp;<span class="built_in">this</span>.release();<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="built_in">this</span>._$Ri.getModelImpl(),e=t._$Xr(),i=e.length,r=<span class="keyword">new</span> <span class="built_in">Array</span>,n=<span class="keyword">new</span> <span class="built_in">Array</span>,s=<span class="number">0</span>;s&lt;i;++s)&#123;<span class="keyword">var</span> _=e[s];<span class="built_in">this</span>._$F2.push(_),<span class="built_in">this</span>._$Hr.push(_.init(<span class="built_in">this</span>));<span class="keyword">for</span>(<span class="keyword">var</span> a=_.getBaseData(),h=a.length,l=<span class="number">0</span>;l&lt;h;++l)r.push(a[l]);<span class="keyword">for</span>(l=<span class="number">0</span>;l&lt;h;++l)&#123;<span class="keyword">var</span> $=a[l].init(<span class="built_in">this</span>);$._$l2(s),n.push($)&#125;<span class="keyword">var</span> u=_.getDrawData(),p=u.length;<span class="keyword">for</span>(l=<span class="number">0</span>;l&lt;p;++l)&#123;<span class="keyword">var</span> c=u[l],f=c.init(<span class="built_in">this</span>);f._$IP=s,<span class="built_in">this</span>._$aS.push(c),<span class="built_in">this</span>._$8b.push(f)&#125;&#125;<span class="keyword">for</span>(<span class="keyword">var</span> g=r.length,y=yt._$2o();;)&#123;<span class="keyword">var</span> d=!<span class="number">1</span>;<span class="keyword">for</span>(s=<span class="number">0</span>;s&lt;g;++s)&#123;<span class="keyword">var</span> m=r[s];<span class="keyword">if</span>(<span class="literal">null</span>!=m)&#123;<span class="keyword">var</span> T=m.getTargetBaseDataID();(<span class="literal">null</span>==T||T==y||<span class="built_in">this</span>.getBaseDataIndex(T)&gt;=<span class="number">0</span>)&amp;&amp;(<span class="built_in">this</span>._$3S.push(m),<span class="built_in">this</span>._$db.push(n[s]),r[s]=<span class="literal">null</span>,d=!<span class="number">0</span>)&#125;&#125;<span class="keyword">if</span>(!d)<span class="keyword">break</span>&#125;<span class="keyword">var</span> P=t._$E2();<span class="keyword">if</span>(<span class="literal">null</span>!=P)&#123;<span class="keyword">var</span> S=P._$1s();<span class="keyword">if</span>(<span class="literal">null</span>!=S)&#123;<span class="keyword">var</span> v=S.length;<span class="keyword">for</span>(s=<span class="number">0</span>;s&lt;v;++s)&#123;<span class="keyword">var</span> L=S[s];<span class="literal">null</span>!=L&amp;&amp;<span class="built_in">this</span>._$02(L.getParamID(),L.getDefaultValue(),L.getMinValue(),L.getMaxValue())&#125;&#125;&#125;<span class="built_in">this</span>.clipManager=<span class="keyword">new</span> o(<span class="built_in">this</span>.dp_webgl),<span class="built_in">this</span>.clipManager.init(<span class="built_in">this</span>,<span class="built_in">this</span>._$aS,<span class="built_in">this</span>._$8b),<span class="built_in">this</span>._$QT=!<span class="number">0</span>&#125;,U.prototype.update=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;U._$e&amp;&amp;_.start(<span class="string">&quot;_$zL&quot;</span>);<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="built_in">this</span>._$_2.length,e=<span class="number">0</span>;e&lt;t;e++)<span class="built_in">this</span>._$_2[e]!=<span class="built_in">this</span>._$vr[e]&amp;&amp;(<span class="built_in">this</span>._$Js[e]=U._$ZS,<span class="built_in">this</span>._$vr[e]=<span class="built_in">this</span>._$_2[e]);<span class="keyword">var</span> i=<span class="built_in">this</span>._$3S.length,r=<span class="built_in">this</span>._$aS.length,o=W._$or(),n=W._$Pr()-o+<span class="number">1</span>;(<span class="literal">null</span>==<span class="built_in">this</span>._$Ws||<span class="built_in">this</span>._$Ws.length&lt;n)&amp;&amp;(<span class="built_in">this</span>._$Ws=<span class="keyword">new</span> <span class="built_in">Int16Array</span>(n),<span class="built_in">this</span>._$Vs=<span class="keyword">new</span> <span class="built_in">Int16Array</span>(n));<span class="keyword">for</span>(e=<span class="number">0</span>;e&lt;n;e++)<span class="built_in">this</span>._$Ws[e]=U._$V2,<span class="built_in">this</span>._$Vs[e]=U._$V2;(<span class="literal">null</span>==<span class="built_in">this</span>._$Er||<span class="built_in">this</span>._$Er.length&lt;r)&amp;&amp;(<span class="built_in">this</span>._$Er=<span class="keyword">new</span> <span class="built_in">Int16Array</span>(r));<span class="keyword">for</span>(e=<span class="number">0</span>;e&lt;r;e++)<span class="built_in">this</span>._$Er[e]=U._$W0;U._$e&amp;&amp;_.dump(<span class="string">&quot;_$zL&quot;</span>),U._$e&amp;&amp;_.start(<span class="string">&quot;_$UL&quot;</span>);<span class="keyword">for</span>(<span class="keyword">var</span> s=<span class="literal">null</span>,a=<span class="number">0</span>;a&lt;i;++a)&#123;<span class="keyword">var</span> h=<span class="built_in">this</span>._$3S[a],l=<span class="built_in">this</span>._$db[a];<span class="keyword">try</span>&#123;h._$Nr(<span class="built_in">this</span>,l),h._$2b(<span class="built_in">this</span>,l)&#125;<span class="keyword">catch</span>(t)&#123;<span class="literal">null</span>==s&amp;&amp;(s=t)&#125;&#125;<span class="literal">null</span>!=s&amp;&amp;U._$_0&amp;&amp;_._$Rb(s),U._$e&amp;&amp;_.dump(<span class="string">&quot;_$UL&quot;</span>),U._$e&amp;&amp;_.start(<span class="string">&quot;_$DL&quot;</span>);<span class="keyword">for</span>(<span class="keyword">var</span> $=<span class="literal">null</span>,u=<span class="number">0</span>;u&lt;r;++u)&#123;<span class="keyword">var</span> p=<span class="built_in">this</span>._$aS[u],c=<span class="built_in">this</span>._$8b[u];<span class="keyword">try</span>&#123;<span class="keyword">if</span>(p._$Nr(<span class="built_in">this</span>,c),c._$u2())<span class="keyword">continue</span>;p._$2b(<span class="built_in">this</span>,c);<span class="keyword">var</span> f,g=<span class="built_in">Math</span>.floor(p._$zS(<span class="built_in">this</span>,c)-o);<span class="keyword">try</span>&#123;f=<span class="built_in">this</span>._$Vs[g]&#125;<span class="keyword">catch</span>(t)&#123;<span class="built_in">console</span>.log(<span class="string">&quot;_$li :: %s / %s        @@_$fS\n&quot;</span>,t.toString(),p.getDrawDataID().toString()),g=<span class="built_in">Math</span>.floor(p._$zS(<span class="built_in">this</span>,c)-o);<span class="keyword">continue</span>&#125;f==U._$V2?<span class="built_in">this</span>._$Ws[g]=u:<span class="built_in">this</span>._$Er[f]=u,<span class="built_in">this</span>._$Vs[g]=u&#125;<span class="keyword">catch</span>(t)&#123;<span class="literal">null</span>==$&amp;&amp;($=t,_t._$sT(_t._$H7))&#125;&#125;<span class="literal">null</span>!=$&amp;&amp;U._$_0&amp;&amp;_._$Rb($),U._$e&amp;&amp;_.dump(<span class="string">&quot;_$DL&quot;</span>),U._$e&amp;&amp;_.start(<span class="string">&quot;_$eL&quot;</span>);<span class="keyword">for</span>(e=<span class="built_in">this</span>._$Js.length-<span class="number">1</span>;e&gt;=<span class="number">0</span>;e--)<span class="built_in">this</span>._$Js[e]=U._$jr;<span class="keyword">return</span> <span class="built_in">this</span>._$QT=!<span class="number">1</span>,U._$e&amp;&amp;_.dump(<span class="string">&quot;_$eL&quot;</span>),!<span class="number">1</span>&#125;,U.prototype.preDraw=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="literal">null</span>!=<span class="built_in">this</span>.clipManager&amp;&amp;(t._$ZT(),<span class="built_in">this</span>.clipManager.setupClip(<span class="built_in">this</span>,t))&#125;,U.prototype.draw=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(<span class="literal">null</span>!=<span class="built_in">this</span>._$Ws)&#123;<span class="keyword">var</span> e=<span class="built_in">this</span>._$Ws.length;t._$ZT();<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;e;++i)&#123;<span class="keyword">var</span> r=<span class="built_in">this</span>._$Ws[i];<span class="keyword">if</span>(r!=U._$V2)<span class="keyword">for</span>(;;)&#123;<span class="keyword">var</span> o=<span class="built_in">this</span>._$aS[r],n=<span class="built_in">this</span>._$8b[r];<span class="keyword">if</span>(n._$yo())&#123;<span class="keyword">var</span> s=n._$IP,a=<span class="built_in">this</span>._$Hr[s];n._$VS=a.getPartsOpacity(),o.draw(t,<span class="built_in">this</span>,n)&#125;<span class="keyword">var</span> h=<span class="built_in">this</span>._$Er[r];<span class="keyword">if</span>(h&lt;=r||h==U._$W0)<span class="keyword">break</span>;r=h&#125;&#125;&#125;<span class="keyword">else</span> _._$li(<span class="string">&quot;call _$Ri.update() before _$Ri.draw() &quot;</span>)&#125;,U.prototype.getParamIndex=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="built_in">this</span>._$pb.length-<span class="number">1</span>;e&gt;=<span class="number">0</span>;--e)<span class="keyword">if</span>(<span class="built_in">this</span>._$pb[e]==t)<span class="keyword">return</span> e;<span class="keyword">return</span> <span class="built_in">this</span>._$02(t,<span class="number">0</span>,U._$tr,U._$lr)&#125;,U.prototype._$BS=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.getBaseDataIndex(t)&#125;,U.prototype.getBaseDataIndex=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="built_in">this</span>._$3S.length-<span class="number">1</span>;e&gt;=<span class="number">0</span>;--e)<span class="keyword">if</span>(<span class="literal">null</span>!=<span class="built_in">this</span>._$3S[e]&amp;&amp;<span class="built_in">this</span>._$3S[e].getBaseDataID()==t)<span class="keyword">return</span> e;<span class="keyword">return</span>-<span class="number">1</span>&#125;,U.prototype._$UT=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(e);<span class="keyword">return</span> x._$jT(t,<span class="number">0</span>,i,<span class="number">0</span>,t.length),i&#125;,U.prototype._$02=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="keyword">if</span>(<span class="built_in">this</span>._$qo&gt;=<span class="built_in">this</span>._$pb.length)&#123;<span class="keyword">var</span> o=<span class="built_in">this</span>._$pb.length,n=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">2</span>*o);x._$jT(<span class="built_in">this</span>._$pb,<span class="number">0</span>,n,<span class="number">0</span>,o),<span class="built_in">this</span>._$pb=n,<span class="built_in">this</span>._$_2=<span class="built_in">this</span>._$UT(<span class="built_in">this</span>._$_2,<span class="number">2</span>*o),<span class="built_in">this</span>._$vr=<span class="built_in">this</span>._$UT(<span class="built_in">this</span>._$vr,<span class="number">2</span>*o),<span class="built_in">this</span>._$Rr=<span class="built_in">this</span>._$UT(<span class="built_in">this</span>._$Rr,<span class="number">2</span>*o),<span class="built_in">this</span>._$Or=<span class="built_in">this</span>._$UT(<span class="built_in">this</span>._$Or,<span class="number">2</span>*o);<span class="keyword">var</span> s=<span class="keyword">new</span> <span class="built_in">Array</span>;x._$jT(<span class="built_in">this</span>._$Js,<span class="number">0</span>,s,<span class="number">0</span>,o),<span class="built_in">this</span>._$Js=s&#125;<span class="keyword">return</span> <span class="built_in">this</span>._$pb[<span class="built_in">this</span>._$qo]=t,<span class="built_in">this</span>._$_2[<span class="built_in">this</span>._$qo]=e,<span class="built_in">this</span>._$vr[<span class="built_in">this</span>._$qo]=e,<span class="built_in">this</span>._$Rr[<span class="built_in">this</span>._$qo]=i,<span class="built_in">this</span>._$Or[<span class="built_in">this</span>._$qo]=r,<span class="built_in">this</span>._$Js[<span class="built_in">this</span>._$qo]=U._$ZS,<span class="built_in">this</span>._$qo++&#125;,U.prototype._$Zo=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>._$3S[t]=e&#125;,U.prototype.setParamFloat=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;e&lt;<span class="built_in">this</span>._$Rr[t]&amp;&amp;(e=<span class="built_in">this</span>._$Rr[t]),e&gt;<span class="built_in">this</span>._$Or[t]&amp;&amp;(e=<span class="built_in">this</span>._$Or[t]),<span class="built_in">this</span>._$_2[t]=e&#125;,U.prototype.loadParam=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="built_in">this</span>._$_2.length;t&gt;<span class="built_in">this</span>._$fs.length&amp;&amp;(t=<span class="built_in">this</span>._$fs.length),x._$jT(<span class="built_in">this</span>._$fs,<span class="number">0</span>,<span class="built_in">this</span>._$_2,<span class="number">0</span>,t)&#125;,U.prototype.saveParam=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="built_in">this</span>._$_2.length;t&gt;<span class="built_in">this</span>._$fs.length&amp;&amp;(<span class="built_in">this</span>._$fs=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(t)),x._$jT(<span class="built_in">this</span>._$_2,<span class="number">0</span>,<span class="built_in">this</span>._$fs,<span class="number">0</span>,t)&#125;,U.prototype._$v2=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$co&#125;,U.prototype._$WS=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$QT&#125;,U.prototype._$Xb=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$Js[t]==U._$ZS&#125;,U.prototype._$vs=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$Es&#125;,U.prototype._$Tr=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$ZP&#125;,U.prototype.getBaseData=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$3S[t]&#125;,U.prototype.getParamFloat=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$_2[t]&#125;,U.prototype.getParamMax=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$Or[t]&#125;,U.prototype.getParamMin=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$Rr[t]&#125;,U.prototype.setPartsOpacity=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>._$Hr[t].setPartsOpacity(e)&#125;,U.prototype.getPartsOpacity=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$Hr[t].getPartsOpacity()&#125;,U.prototype.getPartsDataIndex=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="built_in">this</span>._$F2.length-<span class="number">1</span>;e&gt;=<span class="number">0</span>;--e)<span class="keyword">if</span>(<span class="literal">null</span>!=<span class="built_in">this</span>._$F2[e]&amp;&amp;<span class="built_in">this</span>._$F2[e]._$p2()==t)<span class="keyword">return</span> e;<span class="keyword">return</span>-<span class="number">1</span>&#125;,U.prototype._$q2=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$db[t]&#125;,U.prototype._$C2=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$8b[t]&#125;,U.prototype._$Bb=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$Hr[t]&#125;,U.prototype._$5s=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="built_in">this</span>._$Ws.length,r=t,o=<span class="number">0</span>;o&lt;i;++o)&#123;<span class="keyword">var</span> n=<span class="built_in">this</span>._$Ws[o];<span class="keyword">if</span>(n!=U._$V2)<span class="keyword">for</span>(;;)&#123;<span class="keyword">var</span> s=<span class="built_in">this</span>._$8b[n];s._$yo()&amp;&amp;(s._$GT()._$B2(<span class="built_in">this</span>,s,r),r+=e);<span class="keyword">var</span> _=<span class="built_in">this</span>._$Er[n];<span class="keyword">if</span>(_&lt;=n||_==U._$W0)<span class="keyword">break</span>;n=_&#125;&#125;&#125;,U.prototype.setDrawParam=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.dp_webgl=t&#125;,U.prototype.getDrawParam=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.dp_webgl&#125;,Y._$0T=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> Y._$0T(<span class="keyword">new</span> _$<span class="number">5</span>(t))&#125;,Y._$0T=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(!t.exists())<span class="keyword">throw</span> <span class="keyword">new</span> _$ls(t._$3b());<span class="keyword">for</span>(<span class="keyword">var</span> e,i=t.length(),r=<span class="keyword">new</span> <span class="built_in">Int8Array</span>(i),o=<span class="keyword">new</span> _$Xs(<span class="keyword">new</span> _$kb(t),<span class="number">8192</span>),n=<span class="number">0</span>;(e=o.read(r,n,i-n))&gt;<span class="number">0</span>;)n+=e;<span class="keyword">return</span> r&#125;,Y._$C=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="literal">null</span>,i=<span class="literal">null</span>;<span class="keyword">try</span>&#123;e=t <span class="keyword">instanceof</span> <span class="built_in">Array</span>?t:<span class="keyword">new</span> _$Xs(t,<span class="number">8192</span>),i=<span class="keyword">new</span> _$js;<span class="keyword">for</span>(<span class="keyword">var</span> r,o=<span class="keyword">new</span> <span class="built_in">Int8Array</span>(<span class="number">1e3</span>);(r=e.read(o))&gt;<span class="number">0</span>;)i.write(o,<span class="number">0</span>,r);<span class="keyword">return</span> i._$TS()&#125;<span class="keyword">finally</span>&#123;<span class="literal">null</span>!=t&amp;&amp;t.close(),<span class="literal">null</span>!=i&amp;&amp;(i.flush(),i.close())&#125;&#125;,k.prototype._$T2=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> x.getUserTimeMSec()+<span class="built_in">Math</span>._$10()*(<span class="number">2</span>*<span class="built_in">this</span>._$Br-<span class="number">1</span>)&#125;,k.prototype._$uo=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$Br=t&#125;,k.prototype._$QS=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="built_in">this</span>._$Dr=t,<span class="built_in">this</span>._$Cb=e,<span class="built_in">this</span>._$mr=i&#125;,k.prototype._$7T=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e,i=x.getUserTimeMSec(),r=<span class="number">0</span>;<span class="keyword">switch</span>(<span class="built_in">this</span>._$_L)&#123;<span class="keyword">case</span> STATE_CLOSING:(r=(i-<span class="built_in">this</span>._$bb)/<span class="built_in">this</span>._$Dr)&gt;=<span class="number">1</span>&amp;&amp;(r=<span class="number">1</span>,<span class="built_in">this</span>._$_L=V.STATE_CLOSED,<span class="built_in">this</span>._$bb=i),e=<span class="number">1</span>-r;<span class="keyword">break</span>;<span class="keyword">case</span> STATE_CLOSED:(r=(i-<span class="built_in">this</span>._$bb)/<span class="built_in">this</span>._$Cb)&gt;=<span class="number">1</span>&amp;&amp;(<span class="built_in">this</span>._$_L=V.STATE_OPENING,<span class="built_in">this</span>._$bb=i),e=<span class="number">0</span>;<span class="keyword">break</span>;<span class="keyword">case</span> STATE_OPENING:(r=(i-<span class="built_in">this</span>._$bb)/<span class="built_in">this</span>._$mr)&gt;=<span class="number">1</span>&amp;&amp;(r=<span class="number">1</span>,<span class="built_in">this</span>._$_L=V.STATE_INTERVAL,<span class="built_in">this</span>._$12=<span class="built_in">this</span>._$T2()),e=r;<span class="keyword">break</span>;<span class="keyword">case</span> STATE_INTERVAL:<span class="built_in">this</span>._$12&lt;i&amp;&amp;(<span class="built_in">this</span>._$_L=V.STATE_CLOSING,<span class="built_in">this</span>._$bb=i),e=<span class="number">1</span>;<span class="keyword">break</span>;<span class="keyword">case</span> STATE_FIRST:<span class="keyword">default</span>:<span class="built_in">this</span>._$_L=V.STATE_INTERVAL,<span class="built_in">this</span>._$12=<span class="built_in">this</span>._$T2(),e=<span class="number">1</span>&#125;<span class="built_in">this</span>._$jo||(e=-e),t.setParamFloat(<span class="built_in">this</span>._$iL,e),t.setParamFloat(<span class="built_in">this</span>._$0L,e)&#125;;<span class="keyword">var</span> V=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;<span class="function"><span class="keyword">function</span> <span class="title">X</span>(<span class="params"></span>)</span>&#123;i||(M.prototype.constructor.call(<span class="built_in">this</span>),<span class="built_in">this</span>._$sb=<span class="keyword">new</span> <span class="built_in">Int32Array</span>(X._$As),<span class="built_in">this</span>._$U2=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>.transform=<span class="literal">null</span>,<span class="built_in">this</span>.gl=<span class="literal">null</span>,<span class="literal">null</span>==X._$NT&amp;&amp;(X._$NT=X._$9r(<span class="number">256</span>),X._$vS=X._$9r(<span class="number">256</span>),X._$no=X._$vb(<span class="number">256</span>)))&#125;<span class="function"><span class="keyword">function</span> <span class="title">z</span>(<span class="params"></span>)</span>&#123;i||(A.prototype.constructor.call(<span class="built_in">this</span>),<span class="built_in">this</span>._$GS=<span class="literal">null</span>,<span class="built_in">this</span>._$Y0=<span class="literal">null</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">H</span>(<span class="params">t</span>)</span>&#123;st.prototype.constructor.call(<span class="built_in">this</span>,t),<span class="built_in">this</span>._$8r=A._$ur,<span class="built_in">this</span>._$Yr=<span class="literal">null</span>,<span class="built_in">this</span>._$Wr=<span class="literal">null</span>&#125;<span class="function"><span class="keyword">function</span> <span class="title">W</span>(<span class="params"></span>)</span>&#123;i||(L.prototype.constructor.call(<span class="built_in">this</span>),<span class="built_in">this</span>._$gP=<span class="literal">null</span>,<span class="built_in">this</span>._$dr=<span class="literal">null</span>,<span class="built_in">this</span>._$GS=<span class="literal">null</span>,<span class="built_in">this</span>._$qb=<span class="literal">null</span>,<span class="built_in">this</span>._$Lb=<span class="literal">null</span>,<span class="built_in">this</span>._$mS=<span class="literal">null</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">j</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>._$NL=<span class="literal">null</span>,<span class="built_in">this</span>._$3S=<span class="literal">null</span>,<span class="built_in">this</span>._$aS=<span class="literal">null</span>,j._$42++)&#125;<span class="function"><span class="keyword">function</span> <span class="title">q</span>(<span class="params"></span>)</span>&#123;i||(r.prototype.constructor.call(<span class="built_in">this</span>),<span class="built_in">this</span>._$zo=<span class="keyword">new</span> X)&#125;<span class="function"><span class="keyword">function</span> <span class="title">J</span>(<span class="params"></span>)</span>&#123;i||(s.prototype.constructor.call(<span class="built_in">this</span>),<span class="built_in">this</span>.motions=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>._$o2=<span class="literal">null</span>,<span class="built_in">this</span>._$7r=J._$Co++,<span class="built_in">this</span>._$D0=<span class="number">30</span>,<span class="built_in">this</span>._$yT=<span class="number">0</span>,<span class="built_in">this</span>._$E=!<span class="number">1</span>,<span class="built_in">this</span>.loopFadeIn=!<span class="number">0</span>,<span class="built_in">this</span>._$rr=-<span class="number">1</span>,<span class="built_in">this</span>._$eP=<span class="number">0</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">Q</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">String</span>.fromCharCode(t.getUint8(e))&#125;<span class="function"><span class="keyword">function</span> <span class="title">C</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$P=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">100</span>),<span class="built_in">this</span>.size=<span class="number">0</span>&#125;<span class="function"><span class="keyword">function</span> <span class="title">N</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$4P=<span class="literal">null</span>,<span class="built_in">this</span>._$I0=<span class="literal">null</span>,<span class="built_in">this</span>._$RP=<span class="literal">null</span>&#125;<span class="function"><span class="keyword">function</span> <span class="title">Z</span>(<span class="params"></span>)</span>&#123;i||(A.prototype.constructor.call(<span class="built_in">this</span>),<span class="built_in">this</span>._$o=<span class="number">0</span>,<span class="built_in">this</span>._$A=<span class="number">0</span>,<span class="built_in">this</span>._$GS=<span class="literal">null</span>,<span class="built_in">this</span>._$Eo=<span class="literal">null</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">K</span>(<span class="params">t</span>)</span>&#123;st.prototype.constructor.call(<span class="built_in">this</span>,t),<span class="built_in">this</span>._$8r=A._$ur,<span class="built_in">this</span>._$Cr=<span class="literal">null</span>,<span class="built_in">this</span>._$hr=<span class="literal">null</span>&#125;<span class="function"><span class="keyword">function</span> <span class="title">tt</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>.visible=!<span class="number">0</span>,<span class="built_in">this</span>._$g0=!<span class="number">1</span>,<span class="built_in">this</span>._$NL=<span class="literal">null</span>,<span class="built_in">this</span>._$3S=<span class="literal">null</span>,<span class="built_in">this</span>._$aS=<span class="literal">null</span>,tt._$42++)&#125;<span class="function"><span class="keyword">function</span> <span class="title">et</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$VS=<span class="literal">null</span>,<span class="built_in">this</span>._$e0=<span class="literal">null</span>,<span class="built_in">this</span>._$e0=t&#125;<span class="function"><span class="keyword">function</span> <span class="title">it</span>(<span class="params">t</span>)</span>&#123;i||(<span class="built_in">this</span>.id=t)&#125;<span class="function"><span class="keyword">function</span> <span class="title">rt</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>._$4S=<span class="literal">null</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">ot</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>.canvas=t,<span class="built_in">this</span>.context=e,<span class="built_in">this</span>.viewport=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">0</span>,<span class="number">0</span>,t.width,t.height),<span class="built_in">this</span>._$6r=<span class="number">1</span>,<span class="built_in">this</span>._$xP=<span class="number">0</span>,<span class="built_in">this</span>._$3r=<span class="number">1</span>,<span class="built_in">this</span>._$uP=<span class="number">0</span>,<span class="built_in">this</span>._$Qo=-<span class="number">1</span>,<span class="built_in">this</span>.cacheImages=&#123;&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">nt</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>._$TT=<span class="literal">null</span>,<span class="built_in">this</span>._$LT=<span class="literal">null</span>,<span class="built_in">this</span>._$FS=<span class="literal">null</span>,<span class="built_in">this</span>._$wL=<span class="literal">null</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">st</span>(<span class="params">t</span>)</span>&#123;i||(<span class="built_in">this</span>._$e0=<span class="literal">null</span>,<span class="built_in">this</span>._$IP=<span class="literal">null</span>,<span class="built_in">this</span>._$JS=!<span class="number">1</span>,<span class="built_in">this</span>._$AT=!<span class="number">0</span>,<span class="built_in">this</span>._$e0=t,<span class="built_in">this</span>.totalScale=<span class="number">1</span>,<span class="built_in">this</span>._$7s=<span class="number">1</span>,<span class="built_in">this</span>.totalOpacity=<span class="number">1</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">_t</span>(<span class="params"></span>)</span>&#123;&#125;<span class="function"><span class="keyword">function</span> <span class="title">at</span>(<span class="params"></span>)</span>&#123;&#125;<span class="function"><span class="keyword">function</span> <span class="title">ht</span>(<span class="params">t</span>)</span>&#123;i||(<span class="built_in">this</span>._$ib=t)&#125;<span class="function"><span class="keyword">function</span> <span class="title">lt</span>(<span class="params"></span>)</span>&#123;i||(W.prototype.constructor.call(<span class="built_in">this</span>),<span class="built_in">this</span>._$LP=-<span class="number">1</span>,<span class="built_in">this</span>._$d0=<span class="number">0</span>,<span class="built_in">this</span>._$Yo=<span class="number">0</span>,<span class="built_in">this</span>._$JP=<span class="literal">null</span>,<span class="built_in">this</span>._$5P=<span class="literal">null</span>,<span class="built_in">this</span>._$BP=<span class="literal">null</span>,<span class="built_in">this</span>._$Eo=<span class="literal">null</span>,<span class="built_in">this</span>._$Qi=<span class="literal">null</span>,<span class="built_in">this</span>._$6s=lt._$ms,<span class="built_in">this</span>.culling=!<span class="number">0</span>,<span class="built_in">this</span>.gl_cacheImage=<span class="literal">null</span>,<span class="built_in">this</span>.instanceNo=lt._$42++)&#125;<span class="function"><span class="keyword">function</span> <span class="title">$t</span>(<span class="params">t</span>)</span>&#123;Lt.prototype.constructor.call(<span class="built_in">this</span>,t),<span class="built_in">this</span>._$8r=W._$ur,<span class="built_in">this</span>._$Cr=<span class="literal">null</span>,<span class="built_in">this</span>._$hr=<span class="literal">null</span>&#125;<span class="function"><span class="keyword">function</span> <span class="title">ut</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>.x=<span class="literal">null</span>,<span class="built_in">this</span>.y=<span class="literal">null</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">pt</span>(<span class="params">t</span>)</span>&#123;i||(r.prototype.constructor.call(<span class="built_in">this</span>),<span class="built_in">this</span>.drawParamWebGL=<span class="keyword">new</span> dt(t),<span class="built_in">this</span>.drawParamWebGL.setGL(_t.getGL(t)))&#125;<span class="function"><span class="keyword">function</span> <span class="title">ct</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>.motions=<span class="literal">null</span>,<span class="built_in">this</span>._$eb=!<span class="number">1</span>,<span class="built_in">this</span>.motions=<span class="keyword">new</span> <span class="built_in">Array</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">ft</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$w0=<span class="literal">null</span>,<span class="built_in">this</span>._$AT=!<span class="number">0</span>,<span class="built_in">this</span>._$9L=!<span class="number">1</span>,<span class="built_in">this</span>._$z2=-<span class="number">1</span>,<span class="built_in">this</span>._$bs=-<span class="number">1</span>,<span class="built_in">this</span>._$Do=-<span class="number">1</span>,<span class="built_in">this</span>._$sr=<span class="literal">null</span>,<span class="built_in">this</span>._$sr=ft._$Gs++&#125;<span class="function"><span class="keyword">function</span> <span class="title">gt</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.m=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">yt</span>(<span class="params">t</span>)</span>&#123;i||it.prototype.constructor.call(<span class="built_in">this</span>,t)&#125;<span class="function"><span class="keyword">function</span> <span class="title">dt</span>(<span class="params">t</span>)</span>&#123;i||(M.prototype.constructor.call(<span class="built_in">this</span>),<span class="built_in">this</span>.textures=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>.transform=<span class="literal">null</span>,<span class="built_in">this</span>.gl=<span class="literal">null</span>,<span class="built_in">this</span>.glno=t,<span class="built_in">this</span>.firstDraw=!<span class="number">0</span>,<span class="built_in">this</span>.anisotropyExt=<span class="literal">null</span>,<span class="built_in">this</span>.maxAnisotropy=<span class="number">0</span>,<span class="built_in">this</span>._$As=<span class="number">32</span>,<span class="built_in">this</span>._$Gr=!<span class="number">1</span>,<span class="built_in">this</span>._$NT=<span class="literal">null</span>,<span class="built_in">this</span>._$vS=<span class="literal">null</span>,<span class="built_in">this</span>._$no=<span class="literal">null</span>,<span class="built_in">this</span>.vertShader=<span class="literal">null</span>,<span class="built_in">this</span>.fragShader=<span class="literal">null</span>,<span class="built_in">this</span>.vertShaderOff=<span class="literal">null</span>,<span class="built_in">this</span>.fragShaderOff=<span class="literal">null</span>)&#125;<span class="function"><span class="keyword">function</span> <span class="title">mt</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==e&amp;&amp;(e=t.createBuffer()),t.bindBuffer(t.ARRAY_BUFFER,e),t.bufferData(t.ARRAY_BUFFER,i,t.DYNAMIC_DRAW),e&#125;<span class="function"><span class="keyword">function</span> <span class="title">Tt</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==e&amp;&amp;(e=t.createBuffer()),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e),t.bufferData(t.ELEMENT_ARRAY_BUFFER,i,t.DYNAMIC_DRAW),e&#125;<span class="function"><span class="keyword">function</span> <span class="title">Pt</span>(<span class="params">t</span>)</span>&#123;i||(<span class="built_in">this</span>._$P=<span class="keyword">new</span> <span class="built_in">Int8Array</span>(<span class="number">8</span>),<span class="built_in">this</span>._$R0=<span class="keyword">new</span> <span class="built_in">DataView</span>(<span class="built_in">this</span>._$P.buffer),<span class="built_in">this</span>._$3i=<span class="keyword">new</span> <span class="built_in">Int8Array</span>(<span class="number">1e3</span>),<span class="built_in">this</span>._$hL=<span class="number">0</span>,<span class="built_in">this</span>._$v0=<span class="number">0</span>,<span class="built_in">this</span>._$S2=<span class="number">0</span>,<span class="built_in">this</span>._$Ko=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>._$T=t,<span class="built_in">this</span>._$F=<span class="number">0</span>)&#125;V.STATE_FIRST=<span class="string">&quot;STATE_FIRST&quot;</span>,V.STATE_INTERVAL=<span class="string">&quot;STATE_INTERVAL&quot;</span>,V.STATE_CLOSING=<span class="string">&quot;STATE_CLOSING&quot;</span>,V.STATE_CLOSED=<span class="string">&quot;STATE_CLOSED&quot;</span>,V.STATE_OPENING=<span class="string">&quot;STATE_OPENING&quot;</span>,X.prototype=<span class="keyword">new</span> M,X._$As=<span class="number">32</span>,X._$Gr=!<span class="number">1</span>,X._$NT=<span class="literal">null</span>,X._$vS=<span class="literal">null</span>,X._$no=<span class="literal">null</span>,X._$9r=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Float32Array</span>(t)&#125;,X._$vb=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Int16Array</span>(t)&#125;,X._$cr=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==t||t._$yL()&lt;e.length?((t=X._$9r(<span class="number">2</span>*e.length)).put(e),t._$oT(<span class="number">0</span>)):(t.clear(),t.put(e),t._$oT(<span class="number">0</span>)),t&#125;,X._$mb=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==t||t._$yL()&lt;e.length?((t=X._$vb(<span class="number">2</span>*e.length)).put(e),t._$oT(<span class="number">0</span>)):(t.clear(),t.put(e),t._$oT(<span class="number">0</span>)),t&#125;,X._$Hs=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> X._$Gr&#125;,X._$as=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;X._$Gr=t&#125;,X.prototype.setGL=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.gl=t&#125;,X.prototype.setTransform=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.transform=t&#125;,X.prototype._$ZT=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,X.prototype._$Uo=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r,o,n,s,_</span>)</span>&#123;<span class="keyword">if</span>(!(n&lt;<span class="number">.01</span>))&#123;<span class="keyword">var</span> a=<span class="built_in">this</span>._$U2[t],h=n&gt;<span class="number">.9</span>?_t.EXPAND_W:<span class="number">0</span>;<span class="built_in">this</span>.gl.drawElements(a,i,r,o,n,h,<span class="built_in">this</span>.transform,_)&#125;&#125;,X.prototype._$Rs=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;_$Rs&quot;</span>)&#125;,X.prototype._$Ds=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;_$Ds&quot;</span>)&#125;,X.prototype._$K2=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;<span class="built_in">this</span>._$sb.length;t++)&#123;<span class="number">0</span>!=<span class="built_in">this</span>._$sb[t]&amp;&amp;(<span class="built_in">this</span>.gl._$Sr(<span class="number">1</span>,<span class="built_in">this</span>._$sb,t),<span class="built_in">this</span>._$sb[t]=<span class="number">0</span>)&#125;&#125;,X.prototype.setTexture=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>._$sb.length&lt;t+<span class="number">1</span>&amp;&amp;<span class="built_in">this</span>._$nS(t),<span class="built_in">this</span>._$sb[t]=e&#125;,X.prototype.setTexture=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>._$sb.length&lt;t+<span class="number">1</span>&amp;&amp;<span class="built_in">this</span>._$nS(t),<span class="built_in">this</span>._$U2[t]=e&#125;,X.prototype._$nS=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="built_in">Math</span>.max(<span class="number">2</span>*<span class="built_in">this</span>._$sb.length,t+<span class="number">1</span>+<span class="number">10</span>),i=<span class="keyword">new</span> <span class="built_in">Int32Array</span>(e);x._$jT(<span class="built_in">this</span>._$sb,<span class="number">0</span>,i,<span class="number">0</span>,<span class="built_in">this</span>._$sb.length),<span class="built_in">this</span>._$sb=i;<span class="keyword">var</span> r=<span class="keyword">new</span> <span class="built_in">Array</span>;x._$jT(<span class="built_in">this</span>._$U2,<span class="number">0</span>,r,<span class="number">0</span>,<span class="built_in">this</span>._$U2.length),<span class="built_in">this</span>._$U2=r&#125;,z.prototype=<span class="keyword">new</span> A,z._$Xo=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">2</span>),z._$io=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">2</span>),z._$0o=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">2</span>),z._$Lo=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">2</span>),z._$To=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">2</span>),z._$Po=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">2</span>),z._$gT=<span class="keyword">new</span> <span class="built_in">Array</span>,z.prototype._$zP=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$GS=<span class="keyword">new</span> D,<span class="built_in">this</span>._$GS._$zP(),<span class="built_in">this</span>._$Y0=<span class="keyword">new</span> <span class="built_in">Array</span>&#125;,z.prototype.getType=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> A._$c2&#125;,z.prototype._$F0=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;A.prototype._$F0.call(<span class="built_in">this</span>,t),<span class="built_in">this</span>._$GS=t._$nP(),<span class="built_in">this</span>._$Y0=t._$nP(),A.prototype.readV2_opacity.call(<span class="built_in">this</span>,t)&#125;,z.prototype.init=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="keyword">new</span> H(<span class="built_in">this</span>);<span class="keyword">return</span> e._$Yr=<span class="keyword">new</span> d,<span class="built_in">this</span>._$32()&amp;&amp;(e._$Wr=<span class="keyword">new</span> d),e&#125;,z.prototype._$Nr=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>!=e._$GT()&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;### assert!! ### &quot;</span>);<span class="keyword">var</span> i=e;<span class="keyword">if</span>(<span class="built_in">this</span>._$GS._$Ur(t))&#123;<span class="keyword">var</span> r=z._$gT;r[<span class="number">0</span>]=!<span class="number">1</span>;<span class="keyword">var</span> o=<span class="built_in">this</span>._$GS._$Q2(t,r);e._$Ib(r[<span class="number">0</span>]),<span class="built_in">this</span>.interpolateOpacity(t,<span class="built_in">this</span>._$GS,e,r);<span class="keyword">var</span> n=t._$vs(),s=t._$Tr();<span class="keyword">if</span>(<span class="built_in">this</span>._$GS._$zr(n,s,o),o&lt;=<span class="number">0</span>)&#123;<span class="keyword">var</span> _=<span class="built_in">this</span>._$Y0[n[<span class="number">0</span>]];i._$Yr.init(_)&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">1</span>==o)&#123;_=<span class="built_in">this</span>._$Y0[n[<span class="number">0</span>]];<span class="keyword">var</span> a=<span class="built_in">this</span>._$Y0[n[<span class="number">1</span>]],h=s[<span class="number">0</span>];i._$Yr._$fL=_._$fL+(a._$fL-_._$fL)*h,i._$Yr._$gL=_._$gL+(a._$gL-_._$gL)*h,i._$Yr._$B0=_._$B0+(a._$B0-_._$B0)*h,i._$Yr._$z0=_._$z0+(a._$z0-_._$z0)*h,i._$Yr._$qT=_._$qT+(a._$qT-_._$qT)*h&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">2</span>==o)&#123;_=<span class="built_in">this</span>._$Y0[n[<span class="number">0</span>]],a=<span class="built_in">this</span>._$Y0[n[<span class="number">1</span>]];<span class="keyword">var</span> l=<span class="built_in">this</span>._$Y0[n[<span class="number">2</span>]],$=<span class="built_in">this</span>._$Y0[n[<span class="number">3</span>]],u=(h=s[<span class="number">0</span>],s[<span class="number">1</span>]),p=_._$fL+(a._$fL-_._$fL)*h,c=l._$fL+($._$fL-l._$fL)*h;i._$Yr._$fL=p+(c-p)*u,p=_._$gL+(a._$gL-_._$gL)*h,c=l._$gL+($._$gL-l._$gL)*h,i._$Yr._$gL=p+(c-p)*u,p=_._$B0+(a._$B0-_._$B0)*h,c=l._$B0+($._$B0-l._$B0)*h,i._$Yr._$B0=p+(c-p)*u,p=_._$z0+(a._$z0-_._$z0)*h,c=l._$z0+($._$z0-l._$z0)*h,i._$Yr._$z0=p+(c-p)*u,p=_._$qT+(a._$qT-_._$qT)*h,c=l._$qT+($._$qT-l._$qT)*h,i._$Yr._$qT=p+(c-p)*u&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">3</span>==o)&#123;<span class="keyword">var</span> f=<span class="built_in">this</span>._$Y0[n[<span class="number">0</span>]],g=<span class="built_in">this</span>._$Y0[n[<span class="number">1</span>]],y=<span class="built_in">this</span>._$Y0[n[<span class="number">2</span>]],d=<span class="built_in">this</span>._$Y0[n[<span class="number">3</span>]],m=<span class="built_in">this</span>._$Y0[n[<span class="number">4</span>]],T=<span class="built_in">this</span>._$Y0[n[<span class="number">5</span>]],P=<span class="built_in">this</span>._$Y0[n[<span class="number">6</span>]],S=<span class="built_in">this</span>._$Y0[n[<span class="number">7</span>]],v=(h=s[<span class="number">0</span>],u=s[<span class="number">1</span>],s[<span class="number">2</span>]),L=(p=f._$fL+(g._$fL-f._$fL)*h,c=y._$fL+(d._$fL-y._$fL)*h,m._$fL+(T._$fL-m._$fL)*h),M=P._$fL+(S._$fL-P._$fL)*h;i._$Yr._$fL=(<span class="number">1</span>-v)*(p+(c-p)*u)+v*(L+(M-L)*u),p=f._$gL+(g._$gL-f._$gL)*h,c=y._$gL+(d._$gL-y._$gL)*h,L=m._$gL+(T._$gL-m._$gL)*h,M=P._$gL+(S._$gL-P._$gL)*h,i._$Yr._$gL=(<span class="number">1</span>-v)*(p+(c-p)*u)+v*(L+(M-L)*u),p=f._$B0+(g._$B0-f._$B0)*h,c=y._$B0+(d._$B0-y._$B0)*h,L=m._$B0+(T._$B0-m._$B0)*h,M=P._$B0+(S._$B0-P._$B0)*h,i._$Yr._$B0=(<span class="number">1</span>-v)*(p+(c-p)*u)+v*(L+(M-L)*u),p=f._$z0+(g._$z0-f._$z0)*h,c=y._$z0+(d._$z0-y._$z0)*h,L=m._$z0+(T._$z0-m._$z0)*h,M=P._$z0+(S._$z0-P._$z0)*h,i._$Yr._$z0=(<span class="number">1</span>-v)*(p+(c-p)*u)+v*(L+(M-L)*u),p=f._$qT+(g._$qT-f._$qT)*h,c=y._$qT+(d._$qT-y._$qT)*h,L=m._$qT+(T._$qT-m._$qT)*h,M=P._$qT+(S._$qT-P._$qT)*h,i._$Yr._$qT=(<span class="number">1</span>-v)*(p+(c-p)*u)+v*(L+(M-L)*u)&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">4</span>==o)&#123;<span class="keyword">var</span> E=<span class="built_in">this</span>._$Y0[n[<span class="number">0</span>]],A=<span class="built_in">this</span>._$Y0[n[<span class="number">1</span>]],x=<span class="built_in">this</span>._$Y0[n[<span class="number">2</span>]],I=<span class="built_in">this</span>._$Y0[n[<span class="number">3</span>]],w=<span class="built_in">this</span>._$Y0[n[<span class="number">4</span>]],D=<span class="built_in">this</span>._$Y0[n[<span class="number">5</span>]],O=<span class="built_in">this</span>._$Y0[n[<span class="number">6</span>]],R=<span class="built_in">this</span>._$Y0[n[<span class="number">7</span>]],b=<span class="built_in">this</span>._$Y0[n[<span class="number">8</span>]],F=<span class="built_in">this</span>._$Y0[n[<span class="number">9</span>]],C=<span class="built_in">this</span>._$Y0[n[<span class="number">10</span>]],N=<span class="built_in">this</span>._$Y0[n[<span class="number">11</span>]],B=<span class="built_in">this</span>._$Y0[n[<span class="number">12</span>]],G=<span class="built_in">this</span>._$Y0[n[<span class="number">13</span>]],U=<span class="built_in">this</span>._$Y0[n[<span class="number">14</span>]],Y=<span class="built_in">this</span>._$Y0[n[<span class="number">15</span>]],k=(h=s[<span class="number">0</span>],u=s[<span class="number">1</span>],v=s[<span class="number">2</span>],s[<span class="number">3</span>]),V=(p=E._$fL+(A._$fL-E._$fL)*h,c=x._$fL+(I._$fL-x._$fL)*h,L=w._$fL+(D._$fL-w._$fL)*h,M=O._$fL+(R._$fL-O._$fL)*h,b._$fL+(F._$fL-b._$fL)*h),X=C._$fL+(N._$fL-C._$fL)*h,H=B._$fL+(G._$fL-B._$fL)*h,W=U._$fL+(Y._$fL-U._$fL)*h;i._$Yr._$fL=(<span class="number">1</span>-k)*((<span class="number">1</span>-v)*(p+(c-p)*u)+v*(L+(M-L)*u))+k*((<span class="number">1</span>-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$gL+(A._$gL-E._$gL)*h,c=x._$gL+(I._$gL-x._$gL)*h,L=w._$gL+(D._$gL-w._$gL)*h,M=O._$gL+(R._$gL-O._$gL)*h,V=b._$gL+(F._$gL-b._$gL)*h,X=C._$gL+(N._$gL-C._$gL)*h,H=B._$gL+(G._$gL-B._$gL)*h,W=U._$gL+(Y._$gL-U._$gL)*h,i._$Yr._$gL=(<span class="number">1</span>-k)*((<span class="number">1</span>-v)*(p+(c-p)*u)+v*(L+(M-L)*u))+k*((<span class="number">1</span>-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$B0+(A._$B0-E._$B0)*h,c=x._$B0+(I._$B0-x._$B0)*h,L=w._$B0+(D._$B0-w._$B0)*h,M=O._$B0+(R._$B0-O._$B0)*h,V=b._$B0+(F._$B0-b._$B0)*h,X=C._$B0+(N._$B0-C._$B0)*h,H=B._$B0+(G._$B0-B._$B0)*h,W=U._$B0+(Y._$B0-U._$B0)*h,i._$Yr._$B0=(<span class="number">1</span>-k)*((<span class="number">1</span>-v)*(p+(c-p)*u)+v*(L+(M-L)*u))+k*((<span class="number">1</span>-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$z0+(A._$z0-E._$z0)*h,c=x._$z0+(I._$z0-x._$z0)*h,L=w._$z0+(D._$z0-w._$z0)*h,M=O._$z0+(R._$z0-O._$z0)*h,V=b._$z0+(F._$z0-b._$z0)*h,X=C._$z0+(N._$z0-C._$z0)*h,H=B._$z0+(G._$z0-B._$z0)*h,W=U._$z0+(Y._$z0-U._$z0)*h,i._$Yr._$z0=(<span class="number">1</span>-k)*((<span class="number">1</span>-v)*(p+(c-p)*u)+v*(L+(M-L)*u))+k*((<span class="number">1</span>-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$qT+(A._$qT-E._$qT)*h,c=x._$qT+(I._$qT-x._$qT)*h,L=w._$qT+(D._$qT-w._$qT)*h,M=O._$qT+(R._$qT-O._$qT)*h,V=b._$qT+(F._$qT-b._$qT)*h,X=C._$qT+(N._$qT-C._$qT)*h,H=B._$qT+(G._$qT-B._$qT)*h,W=U._$qT+(Y._$qT-U._$qT)*h,i._$Yr._$qT=(<span class="number">1</span>-k)*((<span class="number">1</span>-v)*(p+(c-p)*u)+v*(L+(M-L)*u))+k*((<span class="number">1</span>-v)*(V+(X-V)*u)+v*(H+(W-H)*u))&#125;<span class="keyword">else</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>|<span class="built_in">Math</span>.pow(<span class="number">2</span>,o),q=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(j),J=<span class="number">0</span>;J&lt;j;J++)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> Q=J,Z=<span class="number">1</span>,K=<span class="number">0</span>;K&lt;o;K++)Z*=Q%<span class="number">2</span>==<span class="number">0</span>?<span class="number">1</span>-s[K]:s[K],Q/=<span class="number">2</span>;q[J]=Z&#125;<span class="keyword">for</span>(<span class="keyword">var</span> tt=<span class="keyword">new</span> <span class="built_in">Array</span>,et=<span class="number">0</span>;et&lt;j;et++)tt[et]=<span class="built_in">this</span>._$Y0[n[et]];<span class="keyword">var</span> it=<span class="number">0</span>,rt=<span class="number">0</span>,ot=<span class="number">0</span>,nt=<span class="number">0</span>,st=<span class="number">0</span>;<span class="keyword">for</span>(et=<span class="number">0</span>;et&lt;j;et++)it+=q[et]*tt[et]._$fL,rt+=q[et]*tt[et]._$gL,ot+=q[et]*tt[et]._$B0,nt+=q[et]*tt[et]._$z0,st+=q[et]*tt[et]._$qT;i._$Yr._$fL=it,i._$Yr._$gL=rt,i._$Yr._$B0=ot,i._$Yr._$z0=nt,i._$Yr._$qT=st&#125;_=<span class="built_in">this</span>._$Y0[n[<span class="number">0</span>]];i._$Yr.reflectX=_.reflectX,i._$Yr.reflectY=_.reflectY&#125;&#125;,z.prototype._$2b=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>!=e._$GT()&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;### assert!! ### &quot;</span>);<span class="keyword">var</span> i=e;<span class="keyword">if</span>(i._$hS(!<span class="number">0</span>),<span class="built_in">this</span>._$32())&#123;<span class="keyword">var</span> r=<span class="built_in">this</span>.getTargetBaseDataID();<span class="keyword">if</span>(i._$8r==A._$ur&amp;&amp;(i._$8r=t.getBaseDataIndex(r)),i._$8r&lt;<span class="number">0</span>)_t._$so&amp;&amp;_._$li(<span class="string">&quot;_$L _$0P _$G :: %s&quot;</span>,r),i._$hS(!<span class="number">1</span>);<span class="keyword">else</span>&#123;<span class="keyword">var</span> o=t.getBaseData(i._$8r);<span class="keyword">if</span>(<span class="literal">null</span>!=o)&#123;<span class="keyword">var</span> n=t._$q2(i._$8r),s=z._$Xo;s[<span class="number">0</span>]=i._$Yr._$fL,s[<span class="number">1</span>]=i._$Yr._$gL;<span class="keyword">var</span> a=z._$io;a[<span class="number">0</span>]=<span class="number">0</span>,a[<span class="number">1</span>]=-<span class="number">.1</span>,n._$GT().getType()==A._$c2?a[<span class="number">1</span>]=-<span class="number">10</span>:a[<span class="number">1</span>]=-<span class="number">.1</span>;<span class="keyword">var</span> h=z._$0o;<span class="built_in">this</span>._$Jr(t,o,n,s,a,h);<span class="keyword">var</span> l=vt._$92(a,h);o._$nb(t,n,s,s,<span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span>),i._$Wr._$fL=s[<span class="number">0</span>],i._$Wr._$gL=s[<span class="number">1</span>],i._$Wr._$B0=i._$Yr._$B0,i._$Wr._$z0=i._$Yr._$z0,i._$Wr._$qT=i._$Yr._$qT-l*vt._$NS;<span class="keyword">var</span> $=n.getTotalScale();i.setTotalScale_notForClient($*i._$Wr._$B0);<span class="keyword">var</span> u=n.getTotalOpacity();i.setTotalOpacity(u*i.getInterpolatedOpacity()),i._$Wr.reflectX=i._$Yr.reflectX,i._$Wr.reflectY=i._$Yr.reflectY,i._$hS(n._$yo())&#125;<span class="keyword">else</span> i._$hS(!<span class="number">1</span>)&#125;&#125;<span class="keyword">else</span> i.setTotalScale_notForClient(i._$Yr._$B0),i.setTotalOpacity(i.getInterpolatedOpacity())&#125;,z.prototype._$nb=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r,o,n,s</span>)</span>&#123;<span class="built_in">this</span>!=e._$GT()&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;### assert!! ### &quot;</span>);<span class="keyword">for</span>(<span class="keyword">var</span> _,a,h=e,l=<span class="literal">null</span>!=h._$Wr?h._$Wr:h._$Yr,$=<span class="built_in">Math</span>.sin(vt._$bS*l._$qT),u=<span class="built_in">Math</span>.cos(vt._$bS*l._$qT),p=h.getTotalScale(),c=l.reflectX?-<span class="number">1</span>:<span class="number">1</span>,f=l.reflectY?-<span class="number">1</span>:<span class="number">1</span>,g=u*p*c,y=-$*p*f,d=$*p*c,m=u*p*f,T=l._$fL,P=l._$gL,S=o*s,v=n;v&lt;S;v+=s)_=i[v],a=i[v+<span class="number">1</span>],r[v]=g*_+y*a+T,r[v+<span class="number">1</span>]=d*_+m*a+P&#125;,z.prototype._$Jr=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r,o,n</span>)</span>&#123;e!=i._$GT()&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;### assert!! ### &quot;</span>);<span class="keyword">var</span> s=z._$Lo;z._$Lo[<span class="number">0</span>]=r[<span class="number">0</span>],z._$Lo[<span class="number">1</span>]=r[<span class="number">1</span>],e._$nb(t,i,s,s,<span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span>);<span class="keyword">for</span>(<span class="keyword">var</span> _=z._$To,a=z._$Po,h=<span class="number">1</span>,l=<span class="number">0</span>;l&lt;<span class="number">10</span>;l++)&#123;<span class="keyword">if</span>(a[<span class="number">0</span>]=r[<span class="number">0</span>]+h*o[<span class="number">0</span>],a[<span class="number">1</span>]=r[<span class="number">1</span>]+h*o[<span class="number">1</span>],e._$nb(t,i,a,_,<span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span>),_[<span class="number">0</span>]-=s[<span class="number">0</span>],_[<span class="number">1</span>]-=s[<span class="number">1</span>],<span class="number">0</span>!=_[<span class="number">0</span>]||<span class="number">0</span>!=_[<span class="number">1</span>])<span class="keyword">return</span> n[<span class="number">0</span>]=_[<span class="number">0</span>],<span class="keyword">void</span>(n[<span class="number">1</span>]=_[<span class="number">1</span>]);<span class="keyword">if</span>(a[<span class="number">0</span>]=r[<span class="number">0</span>]-h*o[<span class="number">0</span>],a[<span class="number">1</span>]=r[<span class="number">1</span>]-h*o[<span class="number">1</span>],e._$nb(t,i,a,_,<span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span>),_[<span class="number">0</span>]-=s[<span class="number">0</span>],_[<span class="number">1</span>]-=s[<span class="number">1</span>],<span class="number">0</span>!=_[<span class="number">0</span>]||<span class="number">0</span>!=_[<span class="number">1</span>])<span class="keyword">return</span> _[<span class="number">0</span>]=-_[<span class="number">0</span>],_[<span class="number">0</span>]=-_[<span class="number">0</span>],n[<span class="number">0</span>]=_[<span class="number">0</span>],<span class="keyword">void</span>(n[<span class="number">1</span>]=_[<span class="number">1</span>]);h*=<span class="number">.1</span>&#125;_t._$so&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;_$L0 to transform _$SP\n&quot;</span>)&#125;,H.prototype=<span class="keyword">new</span> st,W.prototype=<span class="keyword">new</span> L,W._$ur=-<span class="number">2</span>,W._$ES=<span class="number">500</span>,W._$wb=<span class="number">2</span>,W._$8S=<span class="number">3</span>,W._$os=<span class="number">4</span>,W._$52=W._$ES,W._$R2=W._$ES,W._$Sb=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=t.length-<span class="number">1</span>;e&gt;=<span class="number">0</span>;--e)&#123;<span class="keyword">var</span> i=t[e];i&lt;W._$52?W._$52=i:i&gt;W._$R2&amp;&amp;(W._$R2=i)&#125;&#125;,W._$or=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> W._$52&#125;,W._$Pr=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> W._$R2&#125;,W.prototype._$F0=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$gP=t._$nP(),<span class="built_in">this</span>._$dr=t._$nP(),<span class="built_in">this</span>._$GS=t._$nP(),<span class="built_in">this</span>._$qb=t._$6L(),<span class="built_in">this</span>._$Lb=t._$cS(),<span class="built_in">this</span>._$mS=t._$Tb(),t.getFormatVersion()&gt;=G._$T7?(<span class="built_in">this</span>.clipID=t._$nP(),<span class="built_in">this</span>.clipIDList=<span class="built_in">this</span>.convertClipIDForV2_11(<span class="built_in">this</span>.clipID)):<span class="built_in">this</span>.clipIDList=<span class="literal">null</span>,W._$Sb(<span class="built_in">this</span>._$Lb)&#125;,W.prototype.getClipIDList=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.clipIDList&#125;,W.prototype._$Nr=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">if</span>(e._$IS[<span class="number">0</span>]=!<span class="number">1</span>,e._$Us=S._$Z2(t,<span class="built_in">this</span>._$GS,e._$IS,<span class="built_in">this</span>._$Lb),_t._$Zs);<span class="keyword">else</span> <span class="keyword">if</span>(e._$IS[<span class="number">0</span>])<span class="keyword">return</span>;e._$7s=S._$br(t,<span class="built_in">this</span>._$GS,e._$IS,<span class="built_in">this</span>._$mS)&#125;,W.prototype._$2b=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;&#125;,W.prototype.getDrawDataID=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$gP&#125;,W.prototype._$j2=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$gP=t&#125;,W.prototype.getOpacity=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> e._$7s&#125;,W.prototype._$zS=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> e._$Us&#125;,W.prototype.getTargetBaseDataID=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$dr&#125;,W.prototype._$gs=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$dr=t&#125;,W.prototype._$32=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>!=<span class="built_in">this</span>._$dr&amp;&amp;<span class="built_in">this</span>._$dr!=yt._$2o()&#125;,W.prototype.getType=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,j._$42=<span class="number">0</span>,j.prototype._$1b=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$3S&#125;,j.prototype.getDrawDataList=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$aS&#125;,j.prototype._$F0=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$NL=t._$nP(),<span class="built_in">this</span>._$aS=t._$nP(),<span class="built_in">this</span>._$3S=t._$nP()&#125;,j.prototype._$kr=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;t._$Zo(<span class="built_in">this</span>._$3S),t._$xo(<span class="built_in">this</span>._$aS),<span class="built_in">this</span>._$3S=<span class="literal">null</span>,<span class="built_in">this</span>._$aS=<span class="literal">null</span>&#125;,q.prototype=<span class="keyword">new</span> r,q.loadModel=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="keyword">new</span> q;<span class="keyword">return</span> r._$62(e,t),e&#125;,q.loadModel=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="keyword">new</span> q;<span class="keyword">return</span> r._$62(e,t),e&#125;,q._$to=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">new</span> q&#125;,q._$er=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="keyword">new</span> _$<span class="number">5</span>(<span class="string">&quot;../_$_r/_$t0/_$Ri/_$_P._$d&quot;</span>);<span class="keyword">if</span>(<span class="number">0</span>==e.exists())<span class="keyword">throw</span> <span class="keyword">new</span> _$ls(<span class="string">&quot;_$t0 _$_ _$6 _$Ui :: &quot;</span>+e._$PL());<span class="keyword">for</span>(<span class="keyword">var</span> i=[<span class="string">&quot;../_$_r/_$t0/_$Ri/_$_P.512/_$CP._$1&quot;</span>,<span class="string">&quot;../_$_r/_$t0/_$Ri/_$_P.512/_$vP._$1&quot;</span>,<span class="string">&quot;../_$_r/_$t0/_$Ri/_$_P.512/_$EP._$1&quot;</span>,<span class="string">&quot;../_$_r/_$t0/_$Ri/_$_P.512/_$pP._$1&quot;</span>],r=q.loadModel(e._$3b()),o=<span class="number">0</span>;o&lt;i.length;o++)&#123;<span class="keyword">var</span> n=<span class="keyword">new</span> _$<span class="number">5</span>(i[o]);<span class="keyword">if</span>(<span class="number">0</span>==n.exists())<span class="keyword">throw</span> <span class="keyword">new</span> _$ls(<span class="string">&quot;_$t0 _$_ _$6 _$Ui :: &quot;</span>+n._$PL());r.setTexture(o,_$nL._$_o(t,n._$3b()))&#125;<span class="keyword">return</span> r&#125;,q.prototype.setGL=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$zo.setGL(t)&#125;,q.prototype.setTransform=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$zo.setTransform(t)&#125;,q.prototype.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$5S.draw(<span class="built_in">this</span>._$zo)&#125;,q.prototype._$K2=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$zo._$K2()&#125;,q.prototype.setTexture=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="literal">null</span>==<span class="built_in">this</span>._$zo&amp;&amp;_._$li(<span class="string">&quot;_$Yi for QT _$ki / _$XS() is _$6 _$ui!!&quot;</span>),<span class="built_in">this</span>._$zo.setTexture(t,e)&#125;,q.prototype.setTexture=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="literal">null</span>==<span class="built_in">this</span>._$zo&amp;&amp;_._$li(<span class="string">&quot;_$Yi for QT _$ki / _$XS() is _$6 _$ui!!&quot;</span>),<span class="built_in">this</span>._$zo.setTexture(t,e)&#125;,q.prototype._$Rs=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$zo._$Rs()&#125;,q.prototype._$Ds=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$zo._$Ds(t)&#125;,q.prototype.getDrawParam=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$zo&#125;,J.prototype=<span class="keyword">new</span> s,J._$cs=<span class="string">&quot;VISIBLE:&quot;</span>,J._$ar=<span class="string">&quot;LAYOUT:&quot;</span>,J.MTN_PREFIX_FADEIN=<span class="string">&quot;FADEIN:&quot;</span>,J.MTN_PREFIX_FADEOUT=<span class="string">&quot;FADEOUT:&quot;</span>,J._$Co=<span class="number">0</span>,J._$1T=<span class="number">1</span>,J.loadMotion=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=Y._$C(t);<span class="keyword">return</span> J.loadMotion(e)&#125;,J.loadMotion=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;t <span class="keyword">instanceof</span> <span class="built_in">ArrayBuffer</span>&amp;&amp;(t=<span class="keyword">new</span> <span class="built_in">DataView</span>(t));<span class="keyword">var</span> e=<span class="keyword">new</span> J,i=[<span class="number">0</span>],r=t.byteLength;e._$yT=<span class="number">0</span>;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;r;++o)&#123;<span class="keyword">var</span> n=Q(t,o),s=n.charCodeAt(<span class="number">0</span>);<span class="keyword">if</span>(<span class="string">&quot;\n&quot;</span>!=n&amp;&amp;<span class="string">&quot;\r&quot;</span>!=n)<span class="keyword">if</span>(<span class="string">&quot;#&quot;</span>!=n)<span class="keyword">if</span>(<span class="string">&quot;$&quot;</span>!=n)&#123;<span class="keyword">if</span>(<span class="number">97</span>&lt;=s&amp;&amp;s&lt;=<span class="number">122</span>||<span class="number">65</span>&lt;=s&amp;&amp;s&lt;=<span class="number">90</span>||<span class="string">&quot;_&quot;</span>==n)&#123;<span class="keyword">for</span>($=o,u=-<span class="number">1</span>;o&lt;r&amp;&amp;(<span class="string">&quot;\r&quot;</span>!=(n=Q(t,o))&amp;&amp;<span class="string">&quot;\n&quot;</span>!=n);++o)<span class="keyword">if</span>(<span class="string">&quot;=&quot;</span>==n)&#123;u=o;<span class="keyword">break</span>&#125;<span class="keyword">if</span>(u&gt;=<span class="number">0</span>)&#123;<span class="keyword">var</span> _=<span class="keyword">new</span> N;w.startsWith(t,$,J._$cs)?(_._$RP=N._$hs,_._$4P=w.createString(t,$,u-$)):w.startsWith(t,$,J._$ar)?(_._$4P=w.createString(t,$+<span class="number">7</span>,u-$-<span class="number">7</span>),w.startsWith(t,$+<span class="number">7</span>,<span class="string">&quot;ANCHOR_X&quot;</span>)?_._$RP=N._$xs:w.startsWith(t,$+<span class="number">7</span>,<span class="string">&quot;ANCHOR_Y&quot;</span>)?_._$RP=N._$us:w.startsWith(t,$+<span class="number">7</span>,<span class="string">&quot;SCALE_X&quot;</span>)?_._$RP=N._$qs:w.startsWith(t,$+<span class="number">7</span>,<span class="string">&quot;SCALE_Y&quot;</span>)?_._$RP=N._$Ys:w.startsWith(t,$+<span class="number">7</span>,<span class="string">&quot;X&quot;</span>)?_._$RP=N._$ws:w.startsWith(t,$+<span class="number">7</span>,<span class="string">&quot;Y&quot;</span>)&amp;&amp;(_._$RP=N._$Ns)):(_._$RP=N._$Fr,_._$4P=w.createString(t,$,u-$)),e.motions.push(_);<span class="keyword">var</span> a=<span class="number">0</span>,h=[];<span class="keyword">for</span>(o=u+<span class="number">1</span>;o&lt;r&amp;&amp;(<span class="string">&quot;\r&quot;</span>!=(n=Q(t,o))&amp;&amp;<span class="string">&quot;\n&quot;</span>!=n);++o)<span class="keyword">if</span>(<span class="string">&quot;,&quot;</span>!=n&amp;&amp;<span class="string">&quot; &quot;</span>!=n&amp;&amp;<span class="string">&quot;\t&quot;</span>!=n)&#123;c=w._$LS(t,r,o,i);<span class="keyword">if</span>(i[<span class="number">0</span>]&gt;<span class="number">0</span>)&#123;h.push(c),a++;<span class="keyword">var</span> l=i[<span class="number">0</span>];<span class="keyword">if</span>(l&lt;o)&#123;<span class="built_in">console</span>.log(<span class="string">&quot;_$n0 _$hi . @Live2DMotion loadMotion()\n&quot;</span>);<span class="keyword">break</span>&#125;o=l-<span class="number">1</span>&#125;&#125;_._$I0=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(h),a&gt;e._$yT&amp;&amp;(e._$yT=a)&#125;&#125;&#125;<span class="keyword">else</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> $=o,u=-<span class="number">1</span>;o&lt;r&amp;&amp;(<span class="string">&quot;\r&quot;</span>!=(n=Q(t,o))&amp;&amp;<span class="string">&quot;\n&quot;</span>!=n);++o)<span class="keyword">if</span>(<span class="string">&quot;=&quot;</span>==n)&#123;u=o;<span class="keyword">break</span>&#125;<span class="keyword">var</span> p=!<span class="number">1</span>;<span class="keyword">if</span>(u&gt;=<span class="number">0</span>)<span class="keyword">for</span>(u==$+<span class="number">4</span>&amp;&amp;<span class="string">&quot;f&quot;</span>==Q(t,$+<span class="number">1</span>)&amp;&amp;<span class="string">&quot;p&quot;</span>==Q(t,$+<span class="number">2</span>)&amp;&amp;<span class="string">&quot;s&quot;</span>==Q(t,$+<span class="number">3</span>)&amp;&amp;(p=!<span class="number">0</span>),o=u+<span class="number">1</span>;o&lt;r&amp;&amp;(<span class="string">&quot;\r&quot;</span>!=(n=Q(t,o))&amp;&amp;<span class="string">&quot;\n&quot;</span>!=n);++o)<span class="keyword">if</span>(<span class="string">&quot;,&quot;</span>!=n&amp;&amp;<span class="string">&quot; &quot;</span>!=n&amp;&amp;<span class="string">&quot;\t&quot;</span>!=n)&#123;<span class="keyword">var</span> c=w._$LS(t,r,o,i);i[<span class="number">0</span>]&gt;<span class="number">0</span>&amp;&amp;p&amp;&amp;<span class="number">5</span>&lt;c&amp;&amp;c&lt;<span class="number">121</span>&amp;&amp;(e._$D0=c),o=i[<span class="number">0</span>]&#125;<span class="keyword">for</span>(;o&lt;r&amp;&amp;(<span class="string">&quot;\n&quot;</span>!=Q(t,o)&amp;&amp;<span class="string">&quot;\r&quot;</span>!=Q(t,o));++o);&#125;<span class="keyword">else</span> <span class="keyword">for</span>(;o&lt;r&amp;&amp;(<span class="string">&quot;\n&quot;</span>!=Q(t,o)&amp;&amp;<span class="string">&quot;\r&quot;</span>!=Q(t,o));++o);&#125;<span class="keyword">return</span> e._$rr=<span class="number">1e3</span>*e._$yT/e._$D0|<span class="number">0</span>,e&#125;,J.prototype.getDurationMSec=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$E?-<span class="number">1</span>:<span class="built_in">this</span>._$rr&#125;,J.prototype.getLoopDurationMSec=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$rr&#125;,J.prototype.dump=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;<span class="built_in">this</span>.motions.length;t++)&#123;<span class="keyword">var</span> e=<span class="built_in">this</span>.motions[t];<span class="built_in">console</span>.log(<span class="string">&quot;_$wL[%s] [%d]. &quot;</span>,e._$4P,e._$I0.length);<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;e._$I0.length&amp;&amp;i&lt;<span class="number">10</span>;i++)<span class="built_in">console</span>.log(<span class="string">&quot;%5.2f ,&quot;</span>,e._$I0[i]);<span class="built_in">console</span>.log(<span class="string">&quot;\n&quot;</span>)&#125;&#125;,J.prototype.updateParamExe=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=(e-r._$z2)*<span class="built_in">this</span>._$D0/<span class="number">1e3</span>,n=<span class="number">0</span>|o,s=o-n,_=<span class="number">0</span>;_&lt;<span class="built_in">this</span>.motions.length;_++)&#123;<span class="keyword">var</span> a=<span class="built_in">this</span>.motions[_],h=a._$I0.length,l=a._$4P;<span class="keyword">if</span>(a._$RP==N._$hs)&#123;<span class="keyword">var</span> $=a._$I0[n&gt;=h?h-<span class="number">1</span>:n];t.setParamFloat(l,$)&#125;<span class="keyword">else</span> <span class="keyword">if</span>(N._$ws&lt;=a._$RP&amp;&amp;a._$RP&lt;=N._$Ys);<span class="keyword">else</span>&#123;<span class="keyword">var</span> u=t.getParamIndex(l),p=t.getModelContext(),c=<span class="number">.4</span>*(p.getParamMax(u)-p.getParamMin(u)),f=p.getParamFloat(u),g=a._$I0[n&gt;=h?h-<span class="number">1</span>:n],y=a._$I0[n+<span class="number">1</span>&gt;=h?h-<span class="number">1</span>:n+<span class="number">1</span>],d=f+((g&lt;y&amp;&amp;y-g&gt;c||g&gt;y&amp;&amp;g-y&gt;c?g:g+(y-g)*s)-f)*i;t.setParamFloat(l,d)&#125;&#125;n&gt;=<span class="built_in">this</span>._$yT&amp;&amp;(<span class="built_in">this</span>._$E?(r._$z2=e,<span class="built_in">this</span>.loopFadeIn&amp;&amp;(r._$bs=e)):r._$9L=!<span class="number">0</span>),<span class="built_in">this</span>._$eP=i&#125;,J.prototype._$r0=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$E&#125;,J.prototype._$aL=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$E=t&#125;,J.prototype._$S0=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$D0&#125;,J.prototype._$U0=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$D0=t&#125;,J.prototype.isLoopFadeIn=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.loopFadeIn&#125;,J.prototype.setLoopFadeIn=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.loopFadeIn=t&#125;,C.prototype.clear=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.size=<span class="number">0</span>&#125;,C.prototype.add=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(<span class="built_in">this</span>._$P.length&lt;=<span class="built_in">this</span>.size)&#123;<span class="keyword">var</span> e=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">2</span>*<span class="built_in">this</span>.size);x._$jT(<span class="built_in">this</span>._$P,<span class="number">0</span>,e,<span class="number">0</span>,<span class="built_in">this</span>.size),<span class="built_in">this</span>._$P=e&#125;<span class="built_in">this</span>._$P[<span class="built_in">this</span>.size++]=t&#125;,C.prototype._$BL=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="built_in">this</span>.size);<span class="keyword">return</span> x._$jT(<span class="built_in">this</span>._$P,<span class="number">0</span>,t,<span class="number">0</span>,<span class="built_in">this</span>.size),t&#125;,N._$Fr=<span class="number">0</span>,N._$hs=<span class="number">1</span>,N._$ws=<span class="number">100</span>,N._$Ns=<span class="number">101</span>,N._$xs=<span class="number">102</span>,N._$us=<span class="number">103</span>,N._$qs=<span class="number">104</span>,N._$Ys=<span class="number">105</span>,Z.prototype=<span class="keyword">new</span> A,Z._$gT=<span class="keyword">new</span> <span class="built_in">Array</span>,Z.prototype._$zP=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$GS=<span class="keyword">new</span> D,<span class="built_in">this</span>._$GS._$zP()&#125;,Z.prototype._$F0=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;A.prototype._$F0.call(<span class="built_in">this</span>,t),<span class="built_in">this</span>._$A=t._$6L(),<span class="built_in">this</span>._$o=t._$6L(),<span class="built_in">this</span>._$GS=t._$nP(),<span class="built_in">this</span>._$Eo=t._$nP(),A.prototype.readV2_opacity.call(<span class="built_in">this</span>,t)&#125;,Z.prototype.init=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="keyword">new</span> K(<span class="built_in">this</span>),i=(<span class="built_in">this</span>._$o+<span class="number">1</span>)*(<span class="built_in">this</span>._$A+<span class="number">1</span>);<span class="keyword">return</span> <span class="literal">null</span>!=e._$Cr&amp;&amp;(e._$Cr=<span class="literal">null</span>),e._$Cr=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">2</span>*i),<span class="literal">null</span>!=e._$hr&amp;&amp;(e._$hr=<span class="literal">null</span>),<span class="built_in">this</span>._$32()?e._$hr=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">2</span>*i):e._$hr=<span class="literal">null</span>,e&#125;,Z.prototype._$Nr=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=e;<span class="keyword">if</span>(<span class="built_in">this</span>._$GS._$Ur(t))&#123;<span class="keyword">var</span> r=<span class="built_in">this</span>._$VT(),o=Z._$gT;o[<span class="number">0</span>]=!<span class="number">1</span>,S._$Vr(t,<span class="built_in">this</span>._$GS,o,r,<span class="built_in">this</span>._$Eo,i._$Cr,<span class="number">0</span>,<span class="number">2</span>),e._$Ib(o[<span class="number">0</span>]),<span class="built_in">this</span>.interpolateOpacity(t,<span class="built_in">this</span>._$GS,e,o)&#125;&#125;,Z.prototype._$2b=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=e;<span class="keyword">if</span>(i._$hS(!<span class="number">0</span>),<span class="built_in">this</span>._$32())&#123;<span class="keyword">var</span> r=<span class="built_in">this</span>.getTargetBaseDataID();<span class="keyword">if</span>(i._$8r==A._$ur&amp;&amp;(i._$8r=t.getBaseDataIndex(r)),i._$8r&lt;<span class="number">0</span>)_t._$so&amp;&amp;_._$li(<span class="string">&quot;_$L _$0P _$G :: %s&quot;</span>,r),i._$hS(!<span class="number">1</span>);<span class="keyword">else</span>&#123;<span class="keyword">var</span> o=t.getBaseData(i._$8r),n=t._$q2(i._$8r);<span class="keyword">if</span>(<span class="literal">null</span>!=o&amp;&amp;n._$yo())&#123;<span class="keyword">var</span> s=n.getTotalScale();i.setTotalScale_notForClient(s);<span class="keyword">var</span> a=n.getTotalOpacity();i.setTotalOpacity(a*i.getInterpolatedOpacity()),o._$nb(t,n,i._$Cr,i._$hr,<span class="built_in">this</span>._$VT(),<span class="number">0</span>,<span class="number">2</span>),i._$hS(!<span class="number">0</span>)&#125;<span class="keyword">else</span> i._$hS(!<span class="number">1</span>)&#125;&#125;<span class="keyword">else</span> i.setTotalOpacity(i.getInterpolatedOpacity())&#125;,Z.prototype._$nb=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r,o,n,s</span>)</span>&#123;<span class="keyword">var</span> _=e,a=<span class="literal">null</span>!=_._$hr?_._$hr:_._$Cr;Z.transformPoints_sdk2(i,r,o,n,s,a,<span class="built_in">this</span>._$o,<span class="built_in">this</span>._$A)&#125;,Z.transformPoints_sdk2=<span class="function"><span class="keyword">function</span>(<span class="params">e,i,r,o,n,s,_,a</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> h,l,$,u=r*n,p=<span class="number">0</span>,c=<span class="number">0</span>,f=<span class="number">0</span>,g=<span class="number">0</span>,y=<span class="number">0</span>,d=<span class="number">0</span>,m=!<span class="number">1</span>,T=o;T&lt;u;T+=n)&#123;<span class="keyword">var</span> P,S,v,L;<span class="keyword">if</span>(v=e[T],S=(L=e[T+<span class="number">1</span>])*a,(P=v*_)&lt;<span class="number">0</span>||S&lt;<span class="number">0</span>||_&lt;=P||a&lt;=S)&#123;<span class="keyword">var</span> M=_+<span class="number">1</span>;<span class="keyword">if</span>(!m)&#123;m=!<span class="number">0</span>,p=<span class="number">.25</span>*(s[<span class="number">2</span>*(<span class="number">0</span>+<span class="number">0</span>*M)]+s[<span class="number">2</span>*(_+<span class="number">0</span>*M)]+s[<span class="number">2</span>*(<span class="number">0</span>+a*M)]+s[<span class="number">2</span>*(_+a*M)]),c=<span class="number">.25</span>*(s[<span class="number">2</span>*(<span class="number">0</span>+<span class="number">0</span>*M)+<span class="number">1</span>]+s[<span class="number">2</span>*(_+<span class="number">0</span>*M)+<span class="number">1</span>]+s[<span class="number">2</span>*(<span class="number">0</span>+a*M)+<span class="number">1</span>]+s[<span class="number">2</span>*(_+a*M)+<span class="number">1</span>]);<span class="keyword">var</span> E=s[<span class="number">2</span>*(_+a*M)]-s[<span class="number">2</span>*(<span class="number">0</span>+<span class="number">0</span>*M)],A=s[<span class="number">2</span>*(_+a*M)+<span class="number">1</span>]-s[<span class="number">2</span>*(<span class="number">0</span>+<span class="number">0</span>*M)+<span class="number">1</span>],x=s[<span class="number">2</span>*(_+<span class="number">0</span>*M)]-s[<span class="number">2</span>*(<span class="number">0</span>+a*M)],I=s[<span class="number">2</span>*(_+<span class="number">0</span>*M)+<span class="number">1</span>]-s[<span class="number">2</span>*(<span class="number">0</span>+a*M)+<span class="number">1</span>];p-=<span class="number">.5</span>*((f=<span class="number">.5</span>*(E+x))+(y=<span class="number">.5</span>*(E-x))),c-=<span class="number">.5</span>*((g=<span class="number">.5</span>*(A+I))+(d=<span class="number">.5</span>*(A-I)))&#125;<span class="keyword">if</span>(-<span class="number">2</span>&lt;v&amp;&amp;v&lt;<span class="number">3</span>&amp;&amp;-<span class="number">2</span>&lt;L&amp;&amp;L&lt;<span class="number">3</span>)<span class="keyword">if</span>(v&lt;=<span class="number">0</span>)<span class="keyword">if</span>(L&lt;=<span class="number">0</span>)&#123;<span class="keyword">var</span> w=s[<span class="number">2</span>*(<span class="number">0</span>+<span class="number">0</span>*M)],D=s[<span class="number">2</span>*(<span class="number">0</span>+<span class="number">0</span>*M)+<span class="number">1</span>],O=p-<span class="number">2</span>*f,R=c-<span class="number">2</span>*g,b=p-<span class="number">2</span>*y,F=c-<span class="number">2</span>*d,C=p-<span class="number">2</span>*f-<span class="number">2</span>*y,N=c-<span class="number">2</span>*g-<span class="number">2</span>*d;(B=<span class="number">.5</span>*(v- -<span class="number">2</span>))+(G=<span class="number">.5</span>*(L- -<span class="number">2</span>))&lt;=<span class="number">1</span>?(i[T]=C+(b-C)*B+(O-C)*G,i[T+<span class="number">1</span>]=N+(F-N)*B+(R-N)*G):(i[T]=w+(O-w)*(<span class="number">1</span>-B)+(b-w)*(<span class="number">1</span>-G),i[T+<span class="number">1</span>]=D+(R-D)*(<span class="number">1</span>-B)+(F-D)*(<span class="number">1</span>-G))&#125;<span class="keyword">else</span> <span class="keyword">if</span>(L&gt;=<span class="number">1</span>)&#123;b=s[<span class="number">2</span>*(<span class="number">0</span>+a*M)],F=s[<span class="number">2</span>*(<span class="number">0</span>+a*M)+<span class="number">1</span>],C=p-<span class="number">2</span>*f+<span class="number">1</span>*y,N=c-<span class="number">2</span>*g+<span class="number">1</span>*d,w=p+<span class="number">3</span>*y,D=c+<span class="number">3</span>*d,O=p-<span class="number">2</span>*f+<span class="number">3</span>*y,R=c-<span class="number">2</span>*g+<span class="number">3</span>*d;(B=<span class="number">.5</span>*(v- -<span class="number">2</span>))+(G=<span class="number">.5</span>*(L-<span class="number">1</span>))&lt;=<span class="number">1</span>?(i[T]=C+(b-C)*B+(O-C)*G,i[T+<span class="number">1</span>]=N+(F-N)*B+(R-N)*G):(i[T]=w+(O-w)*(<span class="number">1</span>-B)+(b-w)*(<span class="number">1</span>-G),i[T+<span class="number">1</span>]=D+(R-D)*(<span class="number">1</span>-B)+(F-D)*(<span class="number">1</span>-G))&#125;<span class="keyword">else</span>&#123;(k=<span class="number">0</span>|S)==a&amp;&amp;(k=a-<span class="number">1</span>);<span class="keyword">var</span> B=<span class="number">.5</span>*(v- -<span class="number">2</span>),G=S-k,U=k/a,Y=(k+<span class="number">1</span>)/a;b=s[<span class="number">2</span>*(<span class="number">0</span>+k*M)],F=s[<span class="number">2</span>*(<span class="number">0</span>+k*M)+<span class="number">1</span>],w=s[<span class="number">2</span>*(<span class="number">0</span>+(k+<span class="number">1</span>)*M)],D=s[<span class="number">2</span>*(<span class="number">0</span>+(k+<span class="number">1</span>)*M)+<span class="number">1</span>],C=p-<span class="number">2</span>*f+U*y,N=c-<span class="number">2</span>*g+U*d,O=p-<span class="number">2</span>*f+Y*y,R=c-<span class="number">2</span>*g+Y*d;B+G&lt;=<span class="number">1</span>?(i[T]=C+(b-C)*B+(O-C)*G,i[T+<span class="number">1</span>]=N+(F-N)*B+(R-N)*G):(i[T]=w+(O-w)*(<span class="number">1</span>-B)+(b-w)*(<span class="number">1</span>-G),i[T+<span class="number">1</span>]=D+(R-D)*(<span class="number">1</span>-B)+(F-D)*(<span class="number">1</span>-G))&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">1</span>&lt;=v)<span class="keyword">if</span>(L&lt;=<span class="number">0</span>)&#123;O=s[<span class="number">2</span>*(_+<span class="number">0</span>*M)],R=s[<span class="number">2</span>*(_+<span class="number">0</span>*M)+<span class="number">1</span>],w=p+<span class="number">3</span>*f,D=c+<span class="number">3</span>*g,C=p+<span class="number">1</span>*f-<span class="number">2</span>*y,N=c+<span class="number">1</span>*g-<span class="number">2</span>*d,b=p+<span class="number">3</span>*f-<span class="number">2</span>*y,F=c+<span class="number">3</span>*g-<span class="number">2</span>*d;(B=<span class="number">.5</span>*(v-<span class="number">1</span>))+(G=<span class="number">.5</span>*(L- -<span class="number">2</span>))&lt;=<span class="number">1</span>?(i[T]=C+(b-C)*B+(O-C)*G,i[T+<span class="number">1</span>]=N+(F-N)*B+(R-N)*G):(i[T]=w+(O-w)*(<span class="number">1</span>-B)+(b-w)*(<span class="number">1</span>-G),i[T+<span class="number">1</span>]=D+(R-D)*(<span class="number">1</span>-B)+(F-D)*(<span class="number">1</span>-G))&#125;<span class="keyword">else</span> <span class="keyword">if</span>(L&gt;=<span class="number">1</span>)&#123;C=s[<span class="number">2</span>*(_+a*M)],N=s[<span class="number">2</span>*(_+a*M)+<span class="number">1</span>],b=p+<span class="number">3</span>*f+<span class="number">1</span>*y,F=c+<span class="number">3</span>*g+<span class="number">1</span>*d,O=p+<span class="number">1</span>*f+<span class="number">3</span>*y,R=c+<span class="number">1</span>*g+<span class="number">3</span>*d,w=p+<span class="number">3</span>*f+<span class="number">3</span>*y,D=c+<span class="number">3</span>*g+<span class="number">3</span>*d;(B=<span class="number">.5</span>*(v-<span class="number">1</span>))+(G=<span class="number">.5</span>*(L-<span class="number">1</span>))&lt;=<span class="number">1</span>?(i[T]=C+(b-C)*B+(O-C)*G,i[T+<span class="number">1</span>]=N+(F-N)*B+(R-N)*G):(i[T]=w+(O-w)*(<span class="number">1</span>-B)+(b-w)*(<span class="number">1</span>-G),i[T+<span class="number">1</span>]=D+(R-D)*(<span class="number">1</span>-B)+(F-D)*(<span class="number">1</span>-G))&#125;<span class="keyword">else</span>&#123;<span class="keyword">var</span> k;(k=<span class="number">0</span>|S)==a&amp;&amp;(k=a-<span class="number">1</span>);B=<span class="number">.5</span>*(v-<span class="number">1</span>),G=S-k,U=k/a,Y=(k+<span class="number">1</span>)/a,C=s[<span class="number">2</span>*(_+k*M)],N=s[<span class="number">2</span>*(_+k*M)+<span class="number">1</span>],O=s[<span class="number">2</span>*(_+(k+<span class="number">1</span>)*M)],R=s[<span class="number">2</span>*(_+(k+<span class="number">1</span>)*M)+<span class="number">1</span>],b=p+<span class="number">3</span>*f+U*y,F=c+<span class="number">3</span>*g+U*d,w=p+<span class="number">3</span>*f+Y*y,D=c+<span class="number">3</span>*g+Y*d;B+G&lt;=<span class="number">1</span>?(i[T]=C+(b-C)*B+(O-C)*G,i[T+<span class="number">1</span>]=N+(F-N)*B+(R-N)*G):(i[T]=w+(O-w)*(<span class="number">1</span>-B)+(b-w)*(<span class="number">1</span>-G),i[T+<span class="number">1</span>]=D+(R-D)*(<span class="number">1</span>-B)+(F-D)*(<span class="number">1</span>-G))&#125;<span class="keyword">else</span> <span class="keyword">if</span>(L&lt;=<span class="number">0</span>)&#123;(z=<span class="number">0</span>|P)==_&amp;&amp;(z=_-<span class="number">1</span>);B=P-z,G=<span class="number">.5</span>*(L- -<span class="number">2</span>);<span class="keyword">var</span> V=z/_,X=(z+<span class="number">1</span>)/_;O=s[<span class="number">2</span>*(z+<span class="number">0</span>*M)],R=s[<span class="number">2</span>*(z+<span class="number">0</span>*M)+<span class="number">1</span>],w=s[<span class="number">2</span>*(z+<span class="number">1</span>+<span class="number">0</span>*M)],D=s[<span class="number">2</span>*(z+<span class="number">1</span>+<span class="number">0</span>*M)+<span class="number">1</span>],C=p+V*f-<span class="number">2</span>*y,N=c+V*g-<span class="number">2</span>*d,b=p+X*f-<span class="number">2</span>*y,F=c+X*g-<span class="number">2</span>*d;B+G&lt;=<span class="number">1</span>?(i[T]=C+(b-C)*B+(O-C)*G,i[T+<span class="number">1</span>]=N+(F-N)*B+(R-N)*G):(i[T]=w+(O-w)*(<span class="number">1</span>-B)+(b-w)*(<span class="number">1</span>-G),i[T+<span class="number">1</span>]=D+(R-D)*(<span class="number">1</span>-B)+(F-D)*(<span class="number">1</span>-G))&#125;<span class="keyword">else</span> <span class="keyword">if</span>(L&gt;=<span class="number">1</span>)&#123;<span class="keyword">var</span> z;(z=<span class="number">0</span>|P)==_&amp;&amp;(z=_-<span class="number">1</span>);B=P-z,G=<span class="number">.5</span>*(L-<span class="number">1</span>),V=z/_,X=(z+<span class="number">1</span>)/_,C=s[<span class="number">2</span>*(z+a*M)],N=s[<span class="number">2</span>*(z+a*M)+<span class="number">1</span>],b=s[<span class="number">2</span>*(z+<span class="number">1</span>+a*M)],F=s[<span class="number">2</span>*(z+<span class="number">1</span>+a*M)+<span class="number">1</span>],O=p+V*f+<span class="number">3</span>*y,R=c+V*g+<span class="number">3</span>*d,w=p+X*f+<span class="number">3</span>*y,D=c+X*g+<span class="number">3</span>*d;B+G&lt;=<span class="number">1</span>?(i[T]=C+(b-C)*B+(O-C)*G,i[T+<span class="number">1</span>]=N+(F-N)*B+(R-N)*G):(i[T]=w+(O-w)*(<span class="number">1</span>-B)+(b-w)*(<span class="number">1</span>-G),i[T+<span class="number">1</span>]=D+(R-D)*(<span class="number">1</span>-B)+(F-D)*(<span class="number">1</span>-G))&#125;<span class="keyword">else</span> t.err.printf(<span class="string">&quot;_$li calc : %.4f , %.4f          @@BDBoxGrid\n&quot;</span>,v,L);<span class="keyword">else</span> i[T]=p+v*f+L*y,i[T+<span class="number">1</span>]=c+v*g+L*d&#125;<span class="keyword">else</span> h=<span class="number">2</span>*((<span class="number">0</span>|P)+(<span class="number">0</span>|S)*(_+<span class="number">1</span>)),(l=P-(<span class="number">0</span>|P))+($=S-(<span class="number">0</span>|S))&lt;<span class="number">1</span>?(i[T]=s[h]*(<span class="number">1</span>-l-$)+s[h+<span class="number">2</span>]*l+s[h+<span class="number">2</span>*(_+<span class="number">1</span>)]*$,i[T+<span class="number">1</span>]=s[h+<span class="number">1</span>]*(<span class="number">1</span>-l-$)+s[h+<span class="number">3</span>]*l+s[h+<span class="number">2</span>*(_+<span class="number">1</span>)+<span class="number">1</span>]*$):(i[T]=s[h+<span class="number">2</span>*(_+<span class="number">1</span>)+<span class="number">2</span>]*(l-<span class="number">1</span>+$)+s[h+<span class="number">2</span>*(_+<span class="number">1</span>)]*(<span class="number">1</span>-l)+s[h+<span class="number">2</span>]*(<span class="number">1</span>-$),i[T+<span class="number">1</span>]=s[h+<span class="number">2</span>*(_+<span class="number">1</span>)+<span class="number">3</span>]*(l-<span class="number">1</span>+$)+s[h+<span class="number">2</span>*(_+<span class="number">1</span>)+<span class="number">1</span>]*(<span class="number">1</span>-l)+s[h+<span class="number">3</span>]*(<span class="number">1</span>-$))&#125;&#125;,Z.prototype.transformPoints_sdk1=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r,o,n,s</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> _,a,h,l,$,u,p,c=e,f=<span class="built_in">this</span>._$o,g=<span class="built_in">this</span>._$A,y=o*s,d=<span class="literal">null</span>!=c._$hr?c._$hr:c._$Cr,m=n;m&lt;y;m+=s)_t._$ts?(_=i[m],a=i[m+<span class="number">1</span>],_&lt;<span class="number">0</span>?_=<span class="number">0</span>:_&gt;<span class="number">1</span>&amp;&amp;(_=<span class="number">1</span>),a&lt;<span class="number">0</span>?a=<span class="number">0</span>:a&gt;<span class="number">1</span>&amp;&amp;(a=<span class="number">1</span>),l=<span class="number">0</span>|(a*=g),(h=<span class="number">0</span>|(_*=f))&gt;f-<span class="number">1</span>&amp;&amp;(h=f-<span class="number">1</span>),l&gt;g-<span class="number">1</span>&amp;&amp;(l=g-<span class="number">1</span>),u=_-h,p=a-l,$=<span class="number">2</span>*(h+l*(f+<span class="number">1</span>))):(u=(_=i[m]*f)-(<span class="number">0</span>|_),p=(a=i[m+<span class="number">1</span>]*g)-(<span class="number">0</span>|a),$=<span class="number">2</span>*((<span class="number">0</span>|_)+(<span class="number">0</span>|a)*(f+<span class="number">1</span>))),u+p&lt;<span class="number">1</span>?(r[m]=d[$]*(<span class="number">1</span>-u-p)+d[$+<span class="number">2</span>]*u+d[$+<span class="number">2</span>*(f+<span class="number">1</span>)]*p,r[m+<span class="number">1</span>]=d[$+<span class="number">1</span>]*(<span class="number">1</span>-u-p)+d[$+<span class="number">3</span>]*u+d[$+<span class="number">2</span>*(f+<span class="number">1</span>)+<span class="number">1</span>]*p):(r[m]=d[$+<span class="number">2</span>*(f+<span class="number">1</span>)+<span class="number">2</span>]*(u-<span class="number">1</span>+p)+d[$+<span class="number">2</span>*(f+<span class="number">1</span>)]*(<span class="number">1</span>-u)+d[$+<span class="number">2</span>]*(<span class="number">1</span>-p),r[m+<span class="number">1</span>]=d[$+<span class="number">2</span>*(f+<span class="number">1</span>)+<span class="number">3</span>]*(u-<span class="number">1</span>+p)+d[$+<span class="number">2</span>*(f+<span class="number">1</span>)+<span class="number">1</span>]*(<span class="number">1</span>-u)+d[$+<span class="number">3</span>]*(<span class="number">1</span>-p))&#125;,Z.prototype._$VT=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span>(<span class="built_in">this</span>._$o+<span class="number">1</span>)*(<span class="built_in">this</span>._$A+<span class="number">1</span>)&#125;,Z.prototype.getType=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> A._$_b&#125;,K.prototype=<span class="keyword">new</span> st,tt._$42=<span class="number">0</span>,tt.prototype._$zP=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$3S=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>._$aS=<span class="keyword">new</span> <span class="built_in">Array</span>&#125;,tt.prototype._$F0=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$g0=t._$8L(),<span class="built_in">this</span>.visible=t._$8L(),<span class="built_in">this</span>._$NL=t._$nP(),<span class="built_in">this</span>._$3S=t._$nP(),<span class="built_in">this</span>._$aS=t._$nP()&#125;,tt.prototype.init=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="keyword">new</span> et(<span class="built_in">this</span>);<span class="keyword">return</span> e.setPartsOpacity(<span class="built_in">this</span>.isVisible()?<span class="number">1</span>:<span class="number">0</span>),e&#125;,tt.prototype._$6o=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(<span class="literal">null</span>==<span class="built_in">this</span>._$3S)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;_$3S _$6 _$Wo@_$6o&quot;</span>);<span class="built_in">this</span>._$3S.push(t)&#125;,tt.prototype._$3o=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(<span class="literal">null</span>==<span class="built_in">this</span>._$aS)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;_$aS _$6 _$Wo@_$3o&quot;</span>);<span class="built_in">this</span>._$aS.push(t)&#125;,tt.prototype._$Zo=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$3S=t&#125;,tt.prototype._$xo=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$aS=t&#125;,tt.prototype.isVisible=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.visible&#125;,tt.prototype._$uL=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$g0&#125;,tt.prototype._$KP=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.visible=t&#125;,tt.prototype._$ET=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$g0=t&#125;,tt.prototype.getBaseData=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$3S&#125;,tt.prototype.getDrawData=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$aS&#125;,tt.prototype._$p2=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$NL&#125;,tt.prototype._$ob=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$NL=t&#125;,tt.prototype.getPartsID=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$NL&#125;,tt.prototype._$MP=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$NL=t&#125;,et.prototype=<span class="keyword">new</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,et.prototype.getPartsOpacity=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$VS&#125;,et.prototype.setPartsOpacity=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$VS=t&#125;,it._$L7=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;l._$27(),yt._$27(),R._$27(),h._$27()&#125;,it.prototype.toString=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.id&#125;,rt.prototype._$1s=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$4S&#125;,rt.prototype._$zP=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$4S=<span class="keyword">new</span> <span class="built_in">Array</span>&#125;,rt.prototype._$F0=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$4S=t._$nP()&#125;,rt.prototype._$Ks=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$4S.push(t)&#125;,ot.tr=<span class="keyword">new</span> gt,ot._$50=<span class="keyword">new</span> gt,ot._$Ti=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">0</span>,<span class="number">0</span>),ot._$Pi=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">0</span>,<span class="number">0</span>),ot._$B=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">0</span>,<span class="number">0</span>),ot.prototype._$lP=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="built_in">this</span>.viewport=<span class="keyword">new</span> <span class="built_in">Array</span>(t,e,i,r)&#125;,ot.prototype._$bL=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.context.save();<span class="keyword">var</span> t=<span class="built_in">this</span>.viewport;<span class="literal">null</span>!=t&amp;&amp;(<span class="built_in">this</span>.context.beginPath(),<span class="built_in">this</span>.context._$Li(t[<span class="number">0</span>],t[<span class="number">1</span>],t[<span class="number">2</span>],t[<span class="number">3</span>]),<span class="built_in">this</span>.context.clip())&#125;,ot.prototype._$ei=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.context.restore()&#125;,ot.prototype.drawElements=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r,o,n,s,a</span>)</span>&#123;<span class="keyword">try</span>&#123;o!=<span class="built_in">this</span>._$Qo&amp;&amp;(<span class="built_in">this</span>._$Qo=o,<span class="built_in">this</span>.context.globalAlpha=o);<span class="keyword">for</span>(<span class="keyword">var</span> h=e.length,l=t.width,$=t.height,u=<span class="built_in">this</span>.context,p=<span class="built_in">this</span>._$xP,c=<span class="built_in">this</span>._$uP,f=<span class="built_in">this</span>._$6r,g=<span class="built_in">this</span>._$3r,y=ot.tr,d=ot._$Ti,m=ot._$Pi,P=ot._$B,S=<span class="number">0</span>;S&lt;h;S+=<span class="number">3</span>)&#123;u.save();<span class="keyword">var</span> v=e[S],L=e[S+<span class="number">1</span>],M=e[S+<span class="number">2</span>],E=p+f*i[<span class="number">2</span>*v],A=c+g*i[<span class="number">2</span>*v+<span class="number">1</span>],x=p+f*i[<span class="number">2</span>*L],I=c+g*i[<span class="number">2</span>*L+<span class="number">1</span>],w=p+f*i[<span class="number">2</span>*M],D=c+g*i[<span class="number">2</span>*M+<span class="number">1</span>];s&amp;&amp;(s._$PS(E,A,P),E=P[<span class="number">0</span>],A=P[<span class="number">1</span>],s._$PS(x,I,P),x=P[<span class="number">0</span>],I=P[<span class="number">1</span>],s._$PS(w,D,P),w=P[<span class="number">0</span>],D=P[<span class="number">1</span>]);<span class="keyword">var</span> O=l*r[<span class="number">2</span>*v],R=$-$*r[<span class="number">2</span>*v+<span class="number">1</span>],b=l*r[<span class="number">2</span>*L],F=$-$*r[<span class="number">2</span>*L+<span class="number">1</span>],C=l*r[<span class="number">2</span>*M],N=$-$*r[<span class="number">2</span>*M+<span class="number">1</span>],B=<span class="built_in">Math</span>.atan2(F-R,b-O),G=<span class="built_in">Math</span>.atan2(I-A,x-E),U=x-E,Y=I-A,k=<span class="built_in">Math</span>.sqrt(U*U+Y*Y),V=b-O,X=F-R,z=k/<span class="built_in">Math</span>.sqrt(V*V+X*X);T._$ni(C,N,O,R,b-O,F-R,-(F-R),b-O,d),T._$ni(w,D,E,A,x-E,I-A,-(I-A),x-E,m);<span class="keyword">var</span> H=(m[<span class="number">0</span>]-d[<span class="number">0</span>])/d[<span class="number">1</span>],W=<span class="built_in">Math</span>.min(O,b,C),j=<span class="built_in">Math</span>.max(O,b,C),q=<span class="built_in">Math</span>.min(R,F,N),J=<span class="built_in">Math</span>.max(R,F,N),Q=<span class="built_in">Math</span>.floor(W),Z=<span class="built_in">Math</span>.floor(q),K=<span class="built_in">Math</span>.ceil(j),tt=<span class="built_in">Math</span>.ceil(J);y.identity(),y.translate(E,A),y.rotate(G),y.scale(<span class="number">1</span>,m[<span class="number">1</span>]/d[<span class="number">1</span>]),y.shear(H,<span class="number">0</span>),y.scale(z,z),y.rotate(-B),y.translate(-O,-R),y.setContext(u);<span class="keyword">if</span>(n||(n=<span class="number">1.2</span>),_t.IGNORE_EXPAND&amp;&amp;(n=<span class="number">0</span>),_t.USE_CACHED_POLYGON_IMAGE)&#123;<span class="keyword">var</span> et=a._$e0;<span class="keyword">if</span>(et.gl_cacheImage=et.gl_cacheImage||&#123;&#125;,!et.gl_cacheImage[S])&#123;<span class="keyword">var</span> it=ot.createCanvas(K-Q,tt-Z);_t.DEBUG_DATA.LDGL_CANVAS_MB=_t.DEBUG_DATA.LDGL_CANVAS_MB||<span class="number">0</span>,_t.DEBUG_DATA.LDGL_CANVAS_MB+=(K-Q)*(tt-Z)*<span class="number">4</span>;<span class="keyword">var</span> rt=it.getContext(<span class="string">&quot;2d&quot;</span>);rt.translate(-Q,-Z),ot.clip(rt,y,n,k,O,R,b,F,C,N,E,A,x,I,w,D),rt.drawImage(t,<span class="number">0</span>,<span class="number">0</span>),et.gl_cacheImage[S]=&#123;<span class="attr">cacheCanvas</span>:it,<span class="attr">cacheContext</span>:rt&#125;&#125;u.drawImage(et.gl_cacheImage[S].cacheCanvas,Q,Z)&#125;<span class="keyword">else</span> _t.IGNORE_CLIP||ot.clip(u,y,n,k,O,R,b,F,C,N,E,A,x,I,w,D),_t.USE_ADJUST_TRANSLATION&amp;&amp;(W=<span class="number">0</span>,j=l,q=<span class="number">0</span>,J=$),u.drawImage(t,W,q,j-W,J-q,W,q,j-W,J-q);u.restore()&#125;&#125;<span class="keyword">catch</span>(t)&#123;_._$Rb(t)&#125;&#125;,ot.clip=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r,o,n,s,_,a,h,l,$,u,p,c,f</span>)</span>&#123;i&gt;<span class="number">.02</span>?ot.expandClip(t,e,i,r,l,$,u,p,c,f):ot.clipWithTransform(t,<span class="literal">null</span>,o,n,s,_,a,h)&#125;,ot.expandClip=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r,o,n,s,_,a,h</span>)</span>&#123;<span class="keyword">var</span> l=s-o,$=_-n,u=a-o,p=h-n,c=l*p-$*u&gt;<span class="number">0</span>?i:-i,f=-$,g=l,y=a-s,d=h-_,m=-d,T=y,P=<span class="built_in">Math</span>.sqrt(y*y+d*d),S=-p,v=u,L=<span class="built_in">Math</span>.sqrt(u*u+p*p),M=o-c*f/r,E=n-c*g/r,A=s-c*f/r,x=_-c*g/r,I=s-c*m/P,w=_-c*T/P,D=a-c*m/P,O=h-c*T/P,R=o+c*S/L,b=n+c*v/L,F=a+c*S/L,C=h+c*v/L,N=ot._$50;<span class="keyword">return</span> <span class="literal">null</span>!=e._$P2(N)&amp;&amp;(ot.clipWithTransform(t,N,M,E,A,x,I,w,D,O,F,C,R,b),!<span class="number">0</span>)&#125;,ot.clipWithTransform=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r,o,n,s,a</span>)</span>&#123;<span class="keyword">if</span>(<span class="built_in">arguments</span>.length&lt;<span class="number">7</span>)_._$li(<span class="string">&quot;err : @LDGL.clip()&quot;</span>);<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">arguments</span>[<span class="number">1</span>]<span class="keyword">instanceof</span> gt)&#123;<span class="keyword">var</span> h=ot._$B,l=e,$=<span class="built_in">arguments</span>;<span class="keyword">if</span>(t.beginPath(),l)&#123;l._$PS($[<span class="number">2</span>],$[<span class="number">3</span>],h),t.moveTo(h[<span class="number">0</span>],h[<span class="number">1</span>]);<span class="keyword">for</span>(<span class="keyword">var</span> u=<span class="number">4</span>;u&lt;$.length;u+=<span class="number">2</span>)l._$PS($[u],$[u+<span class="number">1</span>],h),t.lineTo(h[<span class="number">0</span>],h[<span class="number">1</span>])&#125;<span class="keyword">else</span>&#123;t.moveTo($[<span class="number">2</span>],$[<span class="number">3</span>]);<span class="keyword">for</span>(u=<span class="number">4</span>;u&lt;$.length;u+=<span class="number">2</span>)t.lineTo($[u],$[u+<span class="number">1</span>])&#125;t.clip()&#125;<span class="keyword">else</span> _._$li(<span class="string">&quot;err : a[0] is _$6 LDTransform @LDGL.clip()&quot;</span>)&#125;,ot.createCanvas=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=<span class="built_in">document</span>.createElement(<span class="string">&quot;canvas&quot;</span>);<span class="keyword">return</span> i.setAttribute(<span class="string">&quot;width&quot;</span>,t),i.setAttribute(<span class="string">&quot;height&quot;</span>,e),i||_._$li(<span class="string">&quot;err : &quot;</span>+i),i&#125;,ot.dumpValues=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="string">&quot;&quot;</span>,e=<span class="number">0</span>;e&lt;<span class="built_in">arguments</span>.length;e++)t+=<span class="string">&quot;[&quot;</span>+e+<span class="string">&quot;]= &quot;</span>+<span class="built_in">arguments</span>[e].toFixed(<span class="number">3</span>)+<span class="string">&quot; , &quot;</span>;<span class="built_in">console</span>.log(t)&#125;,nt.prototype._$F0=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$TT=t._$_T(),<span class="built_in">this</span>._$LT=t._$_T(),<span class="built_in">this</span>._$FS=t._$_T(),<span class="built_in">this</span>._$wL=t._$nP()&#125;,nt.prototype.getMinValue=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$TT&#125;,nt.prototype.getMaxValue=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$LT&#125;,nt.prototype.getDefaultValue=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$FS&#125;,nt.prototype.getParamID=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$wL&#125;,st.prototype._$yo=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$AT&amp;&amp;!<span class="built_in">this</span>._$JS&#125;,st.prototype._$hS=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$AT=t&#125;,st.prototype._$GT=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$e0&#125;,st.prototype._$l2=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$IP=t&#125;,st.prototype.getPartsIndex=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$IP&#125;,st.prototype._$x2=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$JS&#125;,st.prototype._$Ib=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$JS=t&#125;,st.prototype.getTotalScale=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.totalScale&#125;,st.prototype.setTotalScale_notForClient=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.totalScale=t&#125;,st.prototype.getInterpolatedOpacity=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$7s&#125;,st.prototype.setInterpolatedOpacity=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$7s=t&#125;,st.prototype.getTotalOpacity=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.totalOpacity&#125;,st.prototype.setTotalOpacity=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.totalOpacity=t&#125;,_t._$2s=<span class="string">&quot;2.1.00_1&quot;</span>,_t._$Kr=<span class="number">201001e3</span>,_t._$sP=!<span class="number">0</span>,_t._$so=!<span class="number">0</span>,_t._$cb=!<span class="number">1</span>,_t._$3T=!<span class="number">0</span>,_t._$Ts=!<span class="number">0</span>,_t._$fb=!<span class="number">0</span>,_t._$ts=!<span class="number">0</span>,_t.L2D_DEFORMER_EXTEND=!<span class="number">0</span>,_t._$Wb=!<span class="number">1</span>,_t._$yr=!<span class="number">1</span>,_t._$Zs=!<span class="number">1</span>,_t.L2D_NO_ERROR=<span class="number">0</span>,_t._$i7=<span class="number">1e3</span>,_t._$9s=<span class="number">1001</span>,_t._$es=<span class="number">1100</span>,_t._$r7=<span class="number">2e3</span>,_t._$07=<span class="number">2001</span>,_t._$b7=<span class="number">2002</span>,_t._$H7=<span class="number">4e3</span>,_t.L2D_COLOR_BLEND_MODE_MULT=<span class="number">0</span>,_t.L2D_COLOR_BLEND_MODE_ADD=<span class="number">1</span>,_t.L2D_COLOR_BLEND_MODE_INTERPOLATE=<span class="number">2</span>,_t._$6b=!<span class="number">0</span>,_t._$cT=<span class="number">0</span>,_t.clippingMaskBufferSize=<span class="number">256</span>,_t.glContext=<span class="keyword">new</span> <span class="built_in">Array</span>,_t.frameBuffers=<span class="keyword">new</span> <span class="built_in">Array</span>,_t.fTexture=<span class="keyword">new</span> <span class="built_in">Array</span>,_t.IGNORE_CLIP=!<span class="number">1</span>,_t.IGNORE_EXPAND=!<span class="number">1</span>,_t.EXPAND_W=<span class="number">2</span>,_t.USE_ADJUST_TRANSLATION=!<span class="number">0</span>,_t.USE_CANVAS_TRANSFORM=!<span class="number">0</span>,_t.USE_CACHED_POLYGON_IMAGE=!<span class="number">1</span>,_t.DEBUG_DATA=&#123;&#125;,_t.PROFILE_IOS_SPEED=&#123;<span class="attr">PROFILE_NAME</span>:<span class="string">&quot;iOS Speed&quot;</span>,<span class="attr">USE_ADJUST_TRANSLATION</span>:!<span class="number">0</span>,<span class="attr">USE_CACHED_POLYGON_IMAGE</span>:!<span class="number">0</span>,<span class="attr">EXPAND_W</span>:<span class="number">4</span>&#125;,_t.PROFILE_IOS_QUALITY=&#123;<span class="attr">PROFILE_NAME</span>:<span class="string">&quot;iOS HiQ&quot;</span>,<span class="attr">USE_ADJUST_TRANSLATION</span>:!<span class="number">0</span>,<span class="attr">USE_CACHED_POLYGON_IMAGE</span>:!<span class="number">1</span>,<span class="attr">EXPAND_W</span>:<span class="number">2</span>&#125;,_t.PROFILE_IOS_DEFAULT=_t.PROFILE_IOS_QUALITY,_t.PROFILE_ANDROID=&#123;<span class="attr">PROFILE_NAME</span>:<span class="string">&quot;Android&quot;</span>,<span class="attr">USE_ADJUST_TRANSLATION</span>:!<span class="number">1</span>,<span class="attr">USE_CACHED_POLYGON_IMAGE</span>:!<span class="number">1</span>,<span class="attr">EXPAND_W</span>:<span class="number">2</span>&#125;,_t.PROFILE_DESKTOP=&#123;<span class="attr">PROFILE_NAME</span>:<span class="string">&quot;Desktop&quot;</span>,<span class="attr">USE_ADJUST_TRANSLATION</span>:!<span class="number">1</span>,<span class="attr">USE_CACHED_POLYGON_IMAGE</span>:!<span class="number">1</span>,<span class="attr">EXPAND_W</span>:<span class="number">2</span>&#125;,_t.initProfile=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;Mt.isIOS()?_t.setupProfile(_t.PROFILE_IOS_DEFAULT):Mt.isAndroid()?_t.setupProfile(_t.PROFILE_ANDROID):_t.setupProfile(_t.PROFILE_DESKTOP)&#125;,_t.setupProfile=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">if</span>(<span class="string">&quot;number&quot;</span>==<span class="keyword">typeof</span> t)<span class="keyword">switch</span>(t)&#123;<span class="keyword">case</span> <span class="number">9901</span>:t=_t.PROFILE_IOS_SPEED;<span class="keyword">break</span>;<span class="keyword">case</span> <span class="number">9902</span>:t=_t.PROFILE_IOS_QUALITY;<span class="keyword">break</span>;<span class="keyword">case</span> <span class="number">9903</span>:t=_t.PROFILE_IOS_DEFAULT;<span class="keyword">break</span>;<span class="keyword">case</span> <span class="number">9904</span>:t=_t.PROFILE_ANDROID;<span class="keyword">break</span>;<span class="keyword">case</span> <span class="number">9905</span>:t=_t.PROFILE_DESKTOP;<span class="keyword">break</span>;<span class="keyword">default</span>:alert(<span class="string">&quot;profile _$6 _$Ui : &quot;</span>+t)&#125;<span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> <span class="built_in">arguments</span>.length&lt;<span class="number">2</span>&amp;&amp;(e=!<span class="number">0</span>),e&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;profile : &quot;</span>+t.PROFILE_NAME),t)_t[i]=t[i],e&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;  [&quot;</span>+i+<span class="string">&quot;] = &quot;</span>+t[i])&#125;,_t.init=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">if</span>(_t._$6b)&#123;<span class="built_in">console</span>.log(<span class="string">&quot;Live2D %s&quot;</span>,_t._$2s),_t._$6b=!<span class="number">1</span>;!<span class="number">0</span>,_t.initProfile()&#125;&#125;,_t.getVersionStr=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> _t._$2s&#125;,_t.getVersionNo=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> _t._$Kr&#125;,_t._$sT=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;_t._$cT=t&#125;,_t.getError=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=_t._$cT;<span class="keyword">return</span> _t._$cT=<span class="number">0</span>,t&#125;,_t.dispose=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;_t.glContext=[],_t.frameBuffers=[],_t.fTexture=[]&#125;,_t.setGL=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=e||<span class="number">0</span>;_t.glContext[i]=t&#125;,_t.getGL=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> _t.glContext[t]&#125;,_t.setClippingMaskBufferSize=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;_t.clippingMaskBufferSize=t&#125;,_t.getClippingMaskBufferSize=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> _t.clippingMaskBufferSize&#125;,_t.deleteBuffer=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;_t.getGL(t).deleteFramebuffer(_t.frameBuffers[t].framebuffer),<span class="keyword">delete</span> _t.frameBuffers[t],<span class="keyword">delete</span> _t.glContext[t]&#125;,at._$r2=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> t&lt;<span class="number">0</span>?<span class="number">0</span>:t&gt;<span class="number">1</span>?<span class="number">1</span>:<span class="number">.5</span>-<span class="number">.5</span>*<span class="built_in">Math</span>.cos(t*vt.PI_F)&#125;,ht._$fr=-<span class="number">1</span>,ht.prototype.toString=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$ib&#125;,lt.prototype=<span class="keyword">new</span> W,lt._$42=<span class="number">0</span>,lt._$Os=<span class="number">30</span>,lt._$ms=<span class="number">0</span>,lt._$ns=<span class="number">1</span>,lt._$_s=<span class="number">2</span>,lt._$gT=<span class="keyword">new</span> <span class="built_in">Array</span>,lt.prototype._$_S=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$LP=t&#125;,lt.prototype.getTextureNo=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$LP&#125;,lt.prototype._$ZL=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$Qi&#125;,lt.prototype._$H2=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$JP&#125;,lt.prototype.getNumPoints=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$d0&#125;,lt.prototype.getType=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> W._$wb&#125;,lt.prototype._$B2=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">var</span> r=e,o=<span class="literal">null</span>!=r._$hr?r._$hr:r._$Cr;<span class="keyword">switch</span>(B._$do)&#123;<span class="attr">default</span>:<span class="keyword">case</span> B._$Ms:<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;_$L _$ro &quot;</span>);<span class="keyword">case</span> B._$Qs:<span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="built_in">this</span>._$d0-<span class="number">1</span>;n&gt;=<span class="number">0</span>;--n)&#123;o[n*B._$No+<span class="number">4</span>]=i&#125;&#125;&#125;,lt.prototype._$zP=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$GS=<span class="keyword">new</span> D,<span class="built_in">this</span>._$GS._$zP()&#125;,lt.prototype._$F0=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;W.prototype._$F0.call(<span class="built_in">this</span>,t),<span class="built_in">this</span>._$LP=t._$6L(),<span class="built_in">this</span>._$d0=t._$6L(),<span class="built_in">this</span>._$Yo=t._$6L();<span class="keyword">var</span> e=t._$nP();<span class="built_in">this</span>._$BP=<span class="keyword">new</span> <span class="built_in">Int16Array</span>(<span class="number">3</span>*<span class="built_in">this</span>._$Yo);<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">3</span>*<span class="built_in">this</span>._$Yo-<span class="number">1</span>;i&gt;=<span class="number">0</span>;--i)<span class="built_in">this</span>._$BP[i]=e[i];<span class="keyword">if</span>(<span class="built_in">this</span>._$Eo=t._$nP(),<span class="built_in">this</span>._$Qi=t._$nP(),t.getFormatVersion()&gt;=G._$s7)&#123;<span class="keyword">if</span>(<span class="built_in">this</span>._$JP=t._$6L(),<span class="number">0</span>!=<span class="built_in">this</span>._$JP)&#123;<span class="keyword">if</span>(<span class="number">0</span>!=(<span class="number">1</span>&amp;<span class="built_in">this</span>._$JP))&#123;<span class="keyword">var</span> r=t._$6L();<span class="literal">null</span>==<span class="built_in">this</span>._$5P&amp;&amp;(<span class="built_in">this</span>._$5P=<span class="keyword">new</span> <span class="built_in">Object</span>),<span class="built_in">this</span>._$5P._$Hb=<span class="built_in">parseInt</span>(r)&#125;<span class="number">0</span>!=(<span class="built_in">this</span>._$JP&amp;lt._$Os)?<span class="built_in">this</span>._$6s=(<span class="built_in">this</span>._$JP&amp;lt._$Os)&gt;&gt;<span class="number">1</span>:<span class="built_in">this</span>._$6s=lt._$ms,<span class="number">0</span>!=(<span class="number">32</span>&amp;<span class="built_in">this</span>._$JP)&amp;&amp;(<span class="built_in">this</span>.culling=!<span class="number">1</span>)&#125;&#125;<span class="keyword">else</span> <span class="built_in">this</span>._$JP=<span class="number">0</span>&#125;,lt.prototype.init=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="keyword">new</span> $t(<span class="built_in">this</span>),i=<span class="built_in">this</span>._$d0*B._$No,r=<span class="built_in">this</span>._$32();<span class="keyword">switch</span>(<span class="literal">null</span>!=e._$Cr&amp;&amp;(e._$Cr=<span class="literal">null</span>),e._$Cr=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(i),<span class="literal">null</span>!=e._$hr&amp;&amp;(e._$hr=<span class="literal">null</span>),e._$hr=r?<span class="keyword">new</span> <span class="built_in">Float32Array</span>(i):<span class="literal">null</span>,B._$do)&#123;<span class="attr">default</span>:<span class="keyword">case</span> B._$Ms:<span class="keyword">if</span>(B._$Ls)<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="built_in">this</span>._$d0-<span class="number">1</span>;o&gt;=<span class="number">0</span>;--o)&#123;<span class="keyword">var</span> n=o&lt;&lt;<span class="number">1</span>;<span class="built_in">this</span>._$Qi[n+<span class="number">1</span>]=<span class="number">1</span>-<span class="built_in">this</span>._$Qi[n+<span class="number">1</span>]&#125;<span class="keyword">break</span>;<span class="keyword">case</span> B._$Qs:<span class="keyword">for</span>(o=<span class="built_in">this</span>._$d0-<span class="number">1</span>;o&gt;=<span class="number">0</span>;--o)&#123;n=o&lt;&lt;<span class="number">1</span>;<span class="keyword">var</span> s=o*B._$No,_=<span class="built_in">this</span>._$Qi[n],a=<span class="built_in">this</span>._$Qi[n+<span class="number">1</span>];e._$Cr[s]=_,e._$Cr[s+<span class="number">1</span>]=a,e._$Cr[s+<span class="number">4</span>]=<span class="number">0</span>,r&amp;&amp;(e._$hr[s]=_,e._$hr[s+<span class="number">1</span>]=a,e._$hr[s+<span class="number">4</span>]=<span class="number">0</span>)&#125;&#125;<span class="keyword">return</span> e&#125;,lt.prototype._$Nr=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=e;<span class="keyword">if</span>(<span class="built_in">this</span>!=i._$GT()&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;### assert!! ### &quot;</span>),<span class="built_in">this</span>._$GS._$Ur(t)&amp;&amp;(W.prototype._$Nr.call(<span class="built_in">this</span>,t,i),!i._$IS[<span class="number">0</span>]))&#123;<span class="keyword">var</span> r=lt._$gT;r[<span class="number">0</span>]=!<span class="number">1</span>,S._$Vr(t,<span class="built_in">this</span>._$GS,r,<span class="built_in">this</span>._$d0,<span class="built_in">this</span>._$Eo,i._$Cr,B._$i2,B._$No)&#125;&#125;,lt.prototype._$2b=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">try</span>&#123;<span class="built_in">this</span>!=e._$GT()&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;### assert!! ### &quot;</span>);<span class="keyword">var</span> i=!<span class="number">1</span>;e._$IS[<span class="number">0</span>]&amp;&amp;(i=!<span class="number">0</span>);<span class="keyword">var</span> r=e;<span class="keyword">if</span>(!i&amp;&amp;(W.prototype._$2b.call(<span class="built_in">this</span>,t),<span class="built_in">this</span>._$32()))&#123;<span class="keyword">var</span> o=<span class="built_in">this</span>.getTargetBaseDataID();<span class="keyword">if</span>(r._$8r==W._$ur&amp;&amp;(r._$8r=t.getBaseDataIndex(o)),r._$8r&lt;<span class="number">0</span>)_t._$so&amp;&amp;_._$li(<span class="string">&quot;_$L _$0P _$G :: %s&quot;</span>,o);<span class="keyword">else</span>&#123;<span class="keyword">var</span> n=t.getBaseData(r._$8r),s=t._$q2(r._$8r);<span class="literal">null</span>==n||s._$x2()?r._$AT=!<span class="number">1</span>:(n._$nb(t,s,r._$Cr,r._$hr,<span class="built_in">this</span>._$d0,B._$i2,B._$No),r._$AT=!<span class="number">0</span>),r.baseOpacity=s.getTotalOpacity()&#125;&#125;&#125;<span class="keyword">catch</span>(t)&#123;<span class="keyword">throw</span> t&#125;&#125;,lt.prototype.draw=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">if</span>(<span class="built_in">this</span>!=i._$GT()&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;### assert!! ### &quot;</span>),!i._$IS[<span class="number">0</span>])&#123;<span class="keyword">var</span> r=i,o=<span class="built_in">this</span>._$LP;o&lt;<span class="number">0</span>&amp;&amp;(o=<span class="number">1</span>);<span class="keyword">var</span> n=<span class="built_in">this</span>.getOpacity(e,r)*i._$VS*i.baseOpacity,s=<span class="literal">null</span>!=r._$hr?r._$hr:r._$Cr;t.setClipBufPre_clipContextForDraw(i.clipBufPre_clipContext),t._$WP(<span class="built_in">this</span>.culling),t._$Uo(o,<span class="number">3</span>*<span class="built_in">this</span>._$Yo,<span class="built_in">this</span>._$BP,s,<span class="built_in">this</span>._$Qi,n,<span class="built_in">this</span>._$6s,r)&#125;&#125;,lt.prototype.dump=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">&quot;  _$yi( %d ) , _$d0( %d ) , _$Yo( %d ) \n&quot;</span>,<span class="built_in">this</span>._$LP,<span class="built_in">this</span>._$d0,<span class="built_in">this</span>._$Yo),<span class="built_in">console</span>.log(<span class="string">&quot;  _$Oi _$di = &#123; &quot;</span>);<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;<span class="built_in">this</span>._$BP.length;t++)<span class="built_in">console</span>.log(<span class="string">&quot;%5d ,&quot;</span>,<span class="built_in">this</span>._$BP[t]);<span class="built_in">console</span>.log(<span class="string">&quot;\n  _$5i _$30&quot;</span>);<span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;<span class="built_in">this</span>._$Eo.length;t++)&#123;<span class="built_in">console</span>.log(<span class="string">&quot;\n    _$30[%d] = &quot;</span>,t);<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="built_in">this</span>._$Eo[t],i=<span class="number">0</span>;i&lt;e.length;i++)<span class="built_in">console</span>.log(<span class="string">&quot;%6.2f, &quot;</span>,e[i])&#125;<span class="built_in">console</span>.log(<span class="string">&quot;\n&quot;</span>)&#125;,lt.prototype._$72=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>._$5P?<span class="literal">null</span>:<span class="built_in">this</span>._$5P[t]&#125;,lt.prototype.getIndexArray=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$BP&#125;,$t.prototype=<span class="keyword">new</span> Lt,$t.prototype.getTransformedPoints=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>!=<span class="built_in">this</span>._$hr?<span class="built_in">this</span>._$hr:<span class="built_in">this</span>._$Cr&#125;,ut.prototype._$HT=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.x=t.x,<span class="built_in">this</span>.y=t.y&#125;,ut.prototype._$HT=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>.x=t,<span class="built_in">this</span>.y=e&#125;,pt.prototype=<span class="keyword">new</span> r,pt.loadModel=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="keyword">new</span> pt;<span class="keyword">return</span> r._$62(e,t),e&#125;,pt.loadModel=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=<span class="keyword">new</span> pt(e||<span class="number">0</span>);<span class="keyword">return</span> r._$62(i,t),i&#125;,pt._$to=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">new</span> pt&#125;,pt._$er=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="keyword">new</span> _$<span class="number">5</span>(<span class="string">&quot;../_$_r/_$t0/_$Ri/_$_P._$d&quot;</span>);<span class="keyword">if</span>(<span class="number">0</span>==e.exists())<span class="keyword">throw</span> <span class="keyword">new</span> _$ls(<span class="string">&quot;_$t0 _$_ _$6 _$Ui :: &quot;</span>+e._$PL());<span class="keyword">for</span>(<span class="keyword">var</span> i=[<span class="string">&quot;../_$_r/_$t0/_$Ri/_$_P.512/_$CP._$1&quot;</span>,<span class="string">&quot;../_$_r/_$t0/_$Ri/_$_P.512/_$vP._$1&quot;</span>,<span class="string">&quot;../_$_r/_$t0/_$Ri/_$_P.512/_$EP._$1&quot;</span>,<span class="string">&quot;../_$_r/_$t0/_$Ri/_$_P.512/_$pP._$1&quot;</span>],r=pt.loadModel(e._$3b()),o=<span class="number">0</span>;o&lt;i.length;o++)&#123;<span class="keyword">var</span> n=<span class="keyword">new</span> _$<span class="number">5</span>(i[o]);<span class="keyword">if</span>(<span class="number">0</span>==n.exists())<span class="keyword">throw</span> <span class="keyword">new</span> _$ls(<span class="string">&quot;_$t0 _$_ _$6 _$Ui :: &quot;</span>+n._$PL());r.setTexture(o,_$nL._$_o(t,n._$3b()))&#125;<span class="keyword">return</span> r&#125;,pt.prototype.setGL=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;_t.setGL(t)&#125;,pt.prototype.setTransform=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.drawParamWebGL.setTransform(t)&#125;,pt.prototype.update=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$5S.update(),<span class="built_in">this</span>._$5S.preDraw(<span class="built_in">this</span>.drawParamWebGL)&#125;,pt.prototype.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$5S.draw(<span class="built_in">this</span>.drawParamWebGL)&#125;,pt.prototype._$K2=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.drawParamWebGL._$K2()&#125;,pt.prototype.setTexture=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="literal">null</span>==<span class="built_in">this</span>.drawParamWebGL&amp;&amp;_._$li(<span class="string">&quot;_$Yi for QT _$ki / _$XS() is _$6 _$ui!!&quot;</span>),<span class="built_in">this</span>.drawParamWebGL.setTexture(t,e)&#125;,pt.prototype.setTexture=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="literal">null</span>==<span class="built_in">this</span>.drawParamWebGL&amp;&amp;_._$li(<span class="string">&quot;_$Yi for QT _$ki / _$XS() is _$6 _$ui!!&quot;</span>),<span class="built_in">this</span>.drawParamWebGL.setTexture(t,e)&#125;,pt.prototype._$Rs=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.drawParamWebGL._$Rs()&#125;,pt.prototype._$Ds=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.drawParamWebGL._$Ds(t)&#125;,pt.prototype.getDrawParam=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.drawParamWebGL&#125;,pt.prototype.setMatrix=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.drawParamWebGL.setMatrix(t)&#125;,pt.prototype.setPremultipliedAlpha=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.drawParamWebGL.setPremultipliedAlpha(t)&#125;,pt.prototype.isPremultipliedAlpha=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.drawParamWebGL.isPremultipliedAlpha()&#125;,pt.prototype.setAnisotropy=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.drawParamWebGL.setAnisotropy(t)&#125;,pt.prototype.getAnisotropy=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.drawParamWebGL.getAnisotropy()&#125;,ct.prototype._$tb=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.motions&#125;,ct.prototype.startMotion=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="literal">null</span>,r=<span class="built_in">this</span>.motions.length,o=<span class="number">0</span>;o&lt;r;++o)<span class="literal">null</span>!=(i=<span class="built_in">this</span>.motions[o])&amp;&amp;(i._$qS(i._$w0.getFadeOut()),<span class="built_in">this</span>._$eb&amp;&amp;_._$Ji(<span class="string">&quot;MotionQueueManager[size:%2d]-&gt;startMotion() / start _$K _$3 (m%d)\n&quot;</span>,r,i._$sr));<span class="keyword">if</span>(<span class="literal">null</span>==t)<span class="keyword">return</span>-<span class="number">1</span>;(i=<span class="keyword">new</span> ft)._$w0=t,<span class="built_in">this</span>.motions.push(i);<span class="keyword">var</span> n=i._$sr;<span class="keyword">return</span> <span class="built_in">this</span>._$eb&amp;&amp;_._$Ji(<span class="string">&quot;MotionQueueManager[size:%2d]-&gt;startMotion() / new _$w0 (m%d)\n&quot;</span>,r,n),n&#125;,ct.prototype.updateParam=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">try</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=!<span class="number">1</span>,i=<span class="number">0</span>;i&lt;<span class="built_in">this</span>.motions.length;i++)&#123;<span class="keyword">var</span> r=<span class="built_in">this</span>.motions[i];<span class="keyword">if</span>(<span class="literal">null</span>!=r)&#123;<span class="keyword">var</span> o=r._$w0;<span class="literal">null</span>!=o?(o.updateParam(t,r),e=!<span class="number">0</span>,r.isFinished()&amp;&amp;(<span class="built_in">this</span>._$eb&amp;&amp;_._$Ji(<span class="string">&quot;MotionQueueManager[size:%2d]-&gt;updateParam() / _$T0 _$w0 (m%d)\n&quot;</span>,<span class="built_in">this</span>.motions.length-<span class="number">1</span>,r._$sr),<span class="built_in">this</span>.motions.splice(i,<span class="number">1</span>),i--)):(<span class="built_in">this</span>.motions=<span class="built_in">this</span>.motions.splice(i,<span class="number">1</span>),i--)&#125;<span class="keyword">else</span> <span class="built_in">this</span>.motions.splice(i,<span class="number">1</span>),i--&#125;<span class="keyword">return</span> e&#125;<span class="keyword">catch</span>(t)&#123;<span class="keyword">return</span> _._$li(t),!<span class="number">0</span>&#125;&#125;,ct.prototype.isFinished=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(<span class="built_in">arguments</span>.length&gt;=<span class="number">1</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;<span class="built_in">this</span>.motions.length;e++)&#123;<span class="keyword">if</span>(<span class="literal">null</span>!=(i=<span class="built_in">this</span>.motions[e])&amp;&amp;(i._$sr==t&amp;&amp;!i.isFinished()))<span class="keyword">return</span>!<span class="number">1</span>&#125;<span class="keyword">return</span>!<span class="number">0</span>&#125;<span class="keyword">for</span>(e=<span class="number">0</span>;e&lt;<span class="built_in">this</span>.motions.length;e++)&#123;<span class="keyword">var</span> i;<span class="keyword">if</span>(<span class="literal">null</span>!=(i=<span class="built_in">this</span>.motions[e]))<span class="keyword">if</span>(<span class="literal">null</span>!=i._$w0)&#123;<span class="keyword">if</span>(!i.isFinished())<span class="keyword">return</span>!<span class="number">1</span>&#125;<span class="keyword">else</span> <span class="built_in">this</span>.motions.splice(e,<span class="number">1</span>),e--;<span class="keyword">else</span> <span class="built_in">this</span>.motions.splice(e,<span class="number">1</span>),e--&#125;<span class="keyword">return</span>!<span class="number">0</span>&#125;,ct.prototype.stopAllMotions=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;<span class="built_in">this</span>.motions.length;t++)&#123;<span class="keyword">var</span> e=<span class="built_in">this</span>.motions[t];<span class="keyword">if</span>(<span class="literal">null</span>!=e)&#123;e._$w0;<span class="built_in">this</span>.motions.splice(t,<span class="number">1</span>),t--&#125;<span class="keyword">else</span> <span class="built_in">this</span>.motions.splice(t,<span class="number">1</span>),t--&#125;&#125;,ct.prototype._$Zr=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$eb=t&#125;,ct.prototype._$e=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">&quot;-- _$R --\n&quot;</span>);<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;<span class="built_in">this</span>.motions.length;t++)&#123;<span class="keyword">var</span> e=<span class="built_in">this</span>.motions[t]._$w0;<span class="built_in">console</span>.log(<span class="string">&quot;MotionQueueEnt[%d] :: %s\n&quot;</span>,<span class="built_in">this</span>.motions.length,e.toString())&#125;&#125;,ft._$Gs=<span class="number">0</span>,ft.prototype.isFinished=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$9L&#125;,ft.prototype._$qS=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=x.getUserTimeMSec()+t;(<span class="built_in">this</span>._$Do&lt;<span class="number">0</span>||e&lt;<span class="built_in">this</span>._$Do)&amp;&amp;(<span class="built_in">this</span>._$Do=e)&#125;,ft.prototype._$Bs=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$sr&#125;,gt.prototype.setContext=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="built_in">this</span>.m;t.transform(e[<span class="number">0</span>],e[<span class="number">1</span>],e[<span class="number">3</span>],e[<span class="number">4</span>],e[<span class="number">6</span>],e[<span class="number">7</span>])&#125;,gt.prototype.toString=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="string">&quot;LDTransform &#123; &quot;</span>,e=<span class="number">0</span>;e&lt;<span class="number">9</span>;e++)t+=<span class="built_in">this</span>.m[e].toFixed(<span class="number">2</span>)+<span class="string">&quot; ,&quot;</span>;<span class="keyword">return</span> t+=<span class="string">&quot; &#125;&quot;</span>&#125;,gt.prototype.identity=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="built_in">this</span>.m;t[<span class="number">0</span>]=t[<span class="number">4</span>]=t[<span class="number">8</span>]=<span class="number">1</span>,t[<span class="number">1</span>]=t[<span class="number">2</span>]=t[<span class="number">3</span>]=t[<span class="number">5</span>]=t[<span class="number">6</span>]=t[<span class="number">7</span>]=<span class="number">0</span>&#125;,gt.prototype._$PS=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="literal">null</span>==i&amp;&amp;(i=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">0</span>,<span class="number">0</span>));<span class="keyword">var</span> r=<span class="built_in">this</span>.m;<span class="keyword">return</span> i[<span class="number">0</span>]=r[<span class="number">0</span>]*t+r[<span class="number">3</span>]*e+r[<span class="number">6</span>],i[<span class="number">1</span>]=r[<span class="number">1</span>]*t+r[<span class="number">4</span>]*e+r[<span class="number">7</span>],i&#125;,gt.prototype._$P2=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;t||(t=<span class="keyword">new</span> gt);<span class="keyword">var</span> e=<span class="built_in">this</span>.m,i=e[<span class="number">0</span>],r=e[<span class="number">1</span>],o=e[<span class="number">2</span>],n=e[<span class="number">3</span>],s=e[<span class="number">4</span>],_=e[<span class="number">5</span>],a=e[<span class="number">6</span>],h=e[<span class="number">7</span>],l=e[<span class="number">8</span>],$=i*s*l+r*_*a+o*n*h-i*_*h-o*s*a-r*n*l;<span class="keyword">if</span>(<span class="number">0</span>==$)<span class="keyword">return</span> <span class="literal">null</span>;<span class="keyword">var</span> u=<span class="number">1</span>/$;<span class="keyword">return</span> t.m[<span class="number">0</span>]=u*(s*l-h*_),t.m[<span class="number">1</span>]=u*(h*o-r*l),t.m[<span class="number">2</span>]=u*(r*_-s*o),t.m[<span class="number">3</span>]=u*(a*_-n*l),t.m[<span class="number">4</span>]=u*(i*l-a*o),t.m[<span class="number">5</span>]=u*(n*o-i*_),t.m[<span class="number">6</span>]=u*(n*h-a*s),t.m[<span class="number">7</span>]=u*(a*r-i*h),t.m[<span class="number">8</span>]=u*(i*s-n*r),t&#125;,gt.prototype.transform=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="literal">null</span>==i&amp;&amp;(i=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">0</span>,<span class="number">0</span>));<span class="keyword">var</span> r=<span class="built_in">this</span>.m;<span class="keyword">return</span> i[<span class="number">0</span>]=r[<span class="number">0</span>]*t+r[<span class="number">3</span>]*e+r[<span class="number">6</span>],i[<span class="number">1</span>]=r[<span class="number">1</span>]*t+r[<span class="number">4</span>]*e+r[<span class="number">7</span>],i&#125;,gt.prototype.translate=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=<span class="built_in">this</span>.m;i[<span class="number">6</span>]=i[<span class="number">0</span>]*t+i[<span class="number">3</span>]*e+i[<span class="number">6</span>],i[<span class="number">7</span>]=i[<span class="number">1</span>]*t+i[<span class="number">4</span>]*e+i[<span class="number">7</span>],i[<span class="number">8</span>]=i[<span class="number">2</span>]*t+i[<span class="number">5</span>]*e+i[<span class="number">8</span>]&#125;,gt.prototype.scale=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=<span class="built_in">this</span>.m;i[<span class="number">0</span>]*=t,i[<span class="number">1</span>]*=t,i[<span class="number">2</span>]*=t,i[<span class="number">3</span>]*=e,i[<span class="number">4</span>]*=e,i[<span class="number">5</span>]*=e&#125;,gt.prototype.shear=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=<span class="built_in">this</span>.m,r=i[<span class="number">0</span>]+i[<span class="number">3</span>]*e,o=i[<span class="number">1</span>]+i[<span class="number">4</span>]*e,n=i[<span class="number">2</span>]+i[<span class="number">5</span>]*e;i[<span class="number">3</span>]=i[<span class="number">0</span>]*t+i[<span class="number">3</span>],i[<span class="number">4</span>]=i[<span class="number">1</span>]*t+i[<span class="number">4</span>],i[<span class="number">5</span>]=i[<span class="number">2</span>]*t+i[<span class="number">5</span>],i[<span class="number">0</span>]=r,i[<span class="number">1</span>]=o,i[<span class="number">2</span>]=n&#125;,gt.prototype.rotate=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="built_in">this</span>.m,i=<span class="built_in">Math</span>.cos(t),r=<span class="built_in">Math</span>.sin(t),o=e[<span class="number">0</span>]*i+e[<span class="number">3</span>]*r,n=e[<span class="number">1</span>]*i+e[<span class="number">4</span>]*r,s=e[<span class="number">2</span>]*i+e[<span class="number">5</span>]*r;e[<span class="number">3</span>]=-e[<span class="number">0</span>]*r+e[<span class="number">3</span>]*i,e[<span class="number">4</span>]=-e[<span class="number">1</span>]*r+e[<span class="number">4</span>]*i,e[<span class="number">5</span>]=-e[<span class="number">2</span>]*r+e[<span class="number">5</span>]*i,e[<span class="number">0</span>]=o,e[<span class="number">1</span>]=n,e[<span class="number">2</span>]=s&#125;,gt.prototype.concatenate=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="built_in">this</span>.m,i=t.m,r=e[<span class="number">0</span>]*i[<span class="number">0</span>]+e[<span class="number">3</span>]*i[<span class="number">1</span>]+e[<span class="number">6</span>]*i[<span class="number">2</span>],o=e[<span class="number">1</span>]*i[<span class="number">0</span>]+e[<span class="number">4</span>]*i[<span class="number">1</span>]+e[<span class="number">7</span>]*i[<span class="number">2</span>],n=e[<span class="number">2</span>]*i[<span class="number">0</span>]+e[<span class="number">5</span>]*i[<span class="number">1</span>]+e[<span class="number">8</span>]*i[<span class="number">2</span>],s=e[<span class="number">0</span>]*i[<span class="number">3</span>]+e[<span class="number">3</span>]*i[<span class="number">4</span>]+e[<span class="number">6</span>]*i[<span class="number">5</span>],_=e[<span class="number">1</span>]*i[<span class="number">3</span>]+e[<span class="number">4</span>]*i[<span class="number">4</span>]+e[<span class="number">7</span>]*i[<span class="number">5</span>],a=e[<span class="number">2</span>]*i[<span class="number">3</span>]+e[<span class="number">5</span>]*i[<span class="number">4</span>]+e[<span class="number">8</span>]*i[<span class="number">5</span>],h=e[<span class="number">0</span>]*i[<span class="number">6</span>]+e[<span class="number">3</span>]*i[<span class="number">7</span>]+e[<span class="number">6</span>]*i[<span class="number">8</span>],l=e[<span class="number">1</span>]*i[<span class="number">6</span>]+e[<span class="number">4</span>]*i[<span class="number">7</span>]+e[<span class="number">7</span>]*i[<span class="number">8</span>],$=e[<span class="number">2</span>]*i[<span class="number">6</span>]+e[<span class="number">5</span>]*i[<span class="number">7</span>]+e[<span class="number">8</span>]*i[<span class="number">8</span>];m[<span class="number">0</span>]=r,m[<span class="number">1</span>]=o,m[<span class="number">2</span>]=n,m[<span class="number">3</span>]=s,m[<span class="number">4</span>]=_,m[<span class="number">5</span>]=a,m[<span class="number">6</span>]=h,m[<span class="number">7</span>]=l,m[<span class="number">8</span>]=$&#125;,yt.prototype=<span class="keyword">new</span> it,yt._$eT=<span class="literal">null</span>,yt._$tP=<span class="keyword">new</span> <span class="built_in">Object</span>,yt._$2o=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==yt._$eT&amp;&amp;(yt._$eT=yt.getID(<span class="string">&quot;DST_BASE&quot;</span>)),yt._$eT&#125;,yt._$27=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;yt._$tP.clear(),yt._$eT=<span class="literal">null</span>&#125;,yt.getID=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=yt._$tP[t];<span class="keyword">return</span> <span class="literal">null</span>==e&amp;&amp;(e=<span class="keyword">new</span> yt(t),yt._$tP[t]=e),e&#125;,yt.prototype._$3s=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">new</span> yt&#125;,dt.prototype=<span class="keyword">new</span> M,dt._$9r=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Float32Array</span>(t)&#125;,dt._$vb=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Int16Array</span>(t)&#125;,dt._$cr=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==t||t._$yL()&lt;e.length?((t=dt._$9r(<span class="number">2</span>*e.length)).put(e),t._$oT(<span class="number">0</span>)):(t.clear(),t.put(e),t._$oT(<span class="number">0</span>)),t&#125;,dt._$mb=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==t||t._$yL()&lt;e.length?((t=dt._$vb(<span class="number">2</span>*e.length)).put(e),t._$oT(<span class="number">0</span>)):(t.clear(),t.put(e),t._$oT(<span class="number">0</span>)),t&#125;,dt._$Hs=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$Gr&#125;,dt._$as=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$Gr=t&#125;,dt.prototype.getGL=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.gl&#125;,dt.prototype.setGL=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.gl=t&#125;,dt.prototype.setTransform=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.transform=t&#125;,dt.prototype._$ZT=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="built_in">this</span>.gl;<span class="built_in">this</span>.firstDraw&amp;&amp;(<span class="built_in">this</span>.initShader(),<span class="built_in">this</span>.firstDraw=!<span class="number">1</span>,<span class="built_in">this</span>.anisotropyExt=t.getExtension(<span class="string">&quot;EXT_texture_filter_anisotropic&quot;</span>)||t.getExtension(<span class="string">&quot;WEBKIT_EXT_texture_filter_anisotropic&quot;</span>)||t.getExtension(<span class="string">&quot;MOZ_EXT_texture_filter_anisotropic&quot;</span>),<span class="built_in">this</span>.anisotropyExt&amp;&amp;(<span class="built_in">this</span>.maxAnisotropy=t.getParameter(<span class="built_in">this</span>.anisotropyExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT))),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.DEPTH_TEST),t.frontFace(t.CW),t.enable(t.BLEND),t.colorMask(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>),t.bindBuffer(t.ARRAY_BUFFER,<span class="literal">null</span>),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,<span class="literal">null</span>)&#125;,dt.prototype._$Uo=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r,o,n,s,_</span>)</span>&#123;<span class="keyword">if</span>(!(n&lt;<span class="number">.01</span>&amp;&amp;<span class="literal">null</span>==<span class="built_in">this</span>.clipBufPre_clipContextMask))&#123;n&gt;<span class="number">.9</span>&amp;&amp;_t.EXPAND_W;<span class="keyword">var</span> a=<span class="built_in">this</span>.gl;<span class="keyword">if</span>(<span class="literal">null</span>==<span class="built_in">this</span>.gl)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;gl is null&quot;</span>);<span class="keyword">var</span> h,l,$,u,p=<span class="number">1</span>*<span class="built_in">this</span>._$C0*n,c=<span class="number">1</span>*<span class="built_in">this</span>._$tT*n,f=<span class="number">1</span>*<span class="built_in">this</span>._$WL*n,g=<span class="built_in">this</span>._$lT*n;<span class="keyword">if</span>(<span class="literal">null</span>!=<span class="built_in">this</span>.clipBufPre_clipContextMask)&#123;a.frontFace(a.CCW),a.useProgram(<span class="built_in">this</span>.shaderProgram),<span class="built_in">this</span>._$vS=mt(a,<span class="built_in">this</span>._$vS,r),<span class="built_in">this</span>._$no=Tt(a,<span class="built_in">this</span>._$no,i),a.enableVertexAttribArray(<span class="built_in">this</span>.a_position_Loc),a.vertexAttribPointer(<span class="built_in">this</span>.a_position_Loc,<span class="number">2</span>,a.FLOAT,!<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="built_in">this</span>._$NT=mt(a,<span class="built_in">this</span>._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,<span class="built_in">this</span>.textures[t]),a.uniform1i(<span class="built_in">this</span>.s_texture0_Loc,<span class="number">1</span>),a.enableVertexAttribArray(<span class="built_in">this</span>.a_texCoord_Loc),a.vertexAttribPointer(<span class="built_in">this</span>.a_texCoord_Loc,<span class="number">2</span>,a.FLOAT,!<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>),a.uniformMatrix4fv(<span class="built_in">this</span>.u_matrix_Loc,!<span class="number">1</span>,<span class="built_in">this</span>.getClipBufPre_clipContextMask().matrixForMask);<span class="keyword">var</span> y=<span class="built_in">this</span>.getClipBufPre_clipContextMask().layoutChannelNo,d=<span class="built_in">this</span>.getChannelFlagAsColor(y);a.uniform4f(<span class="built_in">this</span>.u_channelFlag,d.r,d.g,d.b,d.a);<span class="keyword">var</span> m=<span class="built_in">this</span>.getClipBufPre_clipContextMask().layoutBounds;a.uniform4f(<span class="built_in">this</span>.u_baseColor_Loc,<span class="number">2</span>*m.x-<span class="number">1</span>,<span class="number">2</span>*m.y-<span class="number">1</span>,<span class="number">2</span>*m._$EL()-<span class="number">1</span>,<span class="number">2</span>*m._$5T()-<span class="number">1</span>),a.uniform1i(<span class="built_in">this</span>.u_maskFlag_Loc,!<span class="number">0</span>)&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="literal">null</span>!=<span class="built_in">this</span>.getClipBufPre_clipContextDraw())&#123;a.useProgram(<span class="built_in">this</span>.shaderProgramOff),<span class="built_in">this</span>._$vS=mt(a,<span class="built_in">this</span>._$vS,r),<span class="built_in">this</span>._$no=Tt(a,<span class="built_in">this</span>._$no,i),a.enableVertexAttribArray(<span class="built_in">this</span>.a_position_Loc_Off),a.vertexAttribPointer(<span class="built_in">this</span>.a_position_Loc_Off,<span class="number">2</span>,a.FLOAT,!<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="built_in">this</span>._$NT=mt(a,<span class="built_in">this</span>._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,<span class="built_in">this</span>.textures[t]),a.uniform1i(<span class="built_in">this</span>.s_texture0_Loc_Off,<span class="number">1</span>),a.enableVertexAttribArray(<span class="built_in">this</span>.a_texCoord_Loc_Off),a.vertexAttribPointer(<span class="built_in">this</span>.a_texCoord_Loc_Off,<span class="number">2</span>,a.FLOAT,!<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>),a.uniformMatrix4fv(<span class="built_in">this</span>.u_clipMatrix_Loc_Off,!<span class="number">1</span>,<span class="built_in">this</span>.getClipBufPre_clipContextDraw().matrixForDraw),a.uniformMatrix4fv(<span class="built_in">this</span>.u_matrix_Loc_Off,!<span class="number">1</span>,<span class="built_in">this</span>.matrix4x4),a.activeTexture(a.TEXTURE2),a.bindTexture(a.TEXTURE_2D,_t.fTexture[<span class="built_in">this</span>.glno]),a.uniform1i(<span class="built_in">this</span>.s_texture1_Loc_Off,<span class="number">2</span>);y=<span class="built_in">this</span>.getClipBufPre_clipContextDraw().layoutChannelNo,d=<span class="built_in">this</span>.getChannelFlagAsColor(y);a.uniform4f(<span class="built_in">this</span>.u_channelFlag_Loc_Off,d.r,d.g,d.b,d.a),a.uniform4f(<span class="built_in">this</span>.u_baseColor_Loc_Off,p,c,f,g)&#125;<span class="keyword">else</span> a.useProgram(<span class="built_in">this</span>.shaderProgram),<span class="built_in">this</span>._$vS=mt(a,<span class="built_in">this</span>._$vS,r),<span class="built_in">this</span>._$no=Tt(a,<span class="built_in">this</span>._$no,i),a.enableVertexAttribArray(<span class="built_in">this</span>.a_position_Loc),a.vertexAttribPointer(<span class="built_in">this</span>.a_position_Loc,<span class="number">2</span>,a.FLOAT,!<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="built_in">this</span>._$NT=mt(a,<span class="built_in">this</span>._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,<span class="built_in">this</span>.textures[t]),a.uniform1i(<span class="built_in">this</span>.s_texture0_Loc,<span class="number">1</span>),a.enableVertexAttribArray(<span class="built_in">this</span>.a_texCoord_Loc),a.vertexAttribPointer(<span class="built_in">this</span>.a_texCoord_Loc,<span class="number">2</span>,a.FLOAT,!<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>),a.uniformMatrix4fv(<span class="built_in">this</span>.u_matrix_Loc,!<span class="number">1</span>,<span class="built_in">this</span>.matrix4x4),a.uniform4f(<span class="built_in">this</span>.u_baseColor_Loc,p,c,f,g),a.uniform1i(<span class="built_in">this</span>.u_maskFlag_Loc,!<span class="number">1</span>);<span class="keyword">if</span>(<span class="built_in">this</span>.culling?<span class="built_in">this</span>.gl.enable(a.CULL_FACE):<span class="built_in">this</span>.gl.disable(a.CULL_FACE),<span class="built_in">this</span>.gl.enable(a.BLEND),<span class="literal">null</span>!=<span class="built_in">this</span>.clipBufPre_clipContextMask)h=a.ONE,l=a.ONE_MINUS_SRC_ALPHA,$=a.ONE,u=a.ONE_MINUS_SRC_ALPHA;<span class="keyword">else</span> <span class="keyword">switch</span>(s)&#123;<span class="keyword">case</span> lt._$ms:h=a.ONE,l=a.ONE_MINUS_SRC_ALPHA,$=a.ONE,u=a.ONE_MINUS_SRC_ALPHA;<span class="keyword">break</span>;<span class="keyword">case</span> lt._$ns:h=a.ONE,l=a.ONE,$=a.ZERO,u=a.ONE;<span class="keyword">break</span>;<span class="keyword">case</span> lt._$_s:h=a.DST_COLOR,l=a.ONE_MINUS_SRC_ALPHA,$=a.ZERO,u=a.ONE&#125;a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(h,l,$,u),<span class="built_in">this</span>.anisotropyExt&amp;&amp;a.texParameteri(a.TEXTURE_2D,<span class="built_in">this</span>.anisotropyExt.TEXTURE_MAX_ANISOTROPY_EXT,<span class="built_in">this</span>.maxAnisotropy);<span class="keyword">var</span> T=i.length;a.drawElements(a.TRIANGLES,T,a.UNSIGNED_SHORT,<span class="number">0</span>),a.bindTexture(a.TEXTURE_2D,<span class="literal">null</span>)&#125;&#125;,dt.prototype._$Rs=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;_$Rs&quot;</span>)&#125;,dt.prototype._$Ds=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;_$Ds&quot;</span>)&#125;,dt.prototype._$K2=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;<span class="built_in">this</span>.textures.length;t++)&#123;<span class="number">0</span>!=<span class="built_in">this</span>.textures[t]&amp;&amp;(<span class="built_in">this</span>.gl._$K2(<span class="number">1</span>,<span class="built_in">this</span>.textures,t),<span class="built_in">this</span>.textures[t]=<span class="literal">null</span>)&#125;&#125;,dt.prototype.setTexture=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>.textures[t]=e&#125;,dt.prototype.initShader=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="built_in">this</span>.gl;<span class="built_in">this</span>.loadShaders2(),<span class="built_in">this</span>.a_position_Loc=t.getAttribLocation(<span class="built_in">this</span>.shaderProgram,<span class="string">&quot;a_position&quot;</span>),<span class="built_in">this</span>.a_texCoord_Loc=t.getAttribLocation(<span class="built_in">this</span>.shaderProgram,<span class="string">&quot;a_texCoord&quot;</span>),<span class="built_in">this</span>.u_matrix_Loc=t.getUniformLocation(<span class="built_in">this</span>.shaderProgram,<span class="string">&quot;u_mvpMatrix&quot;</span>),<span class="built_in">this</span>.s_texture0_Loc=t.getUniformLocation(<span class="built_in">this</span>.shaderProgram,<span class="string">&quot;s_texture0&quot;</span>),<span class="built_in">this</span>.u_channelFlag=t.getUniformLocation(<span class="built_in">this</span>.shaderProgram,<span class="string">&quot;u_channelFlag&quot;</span>),<span class="built_in">this</span>.u_baseColor_Loc=t.getUniformLocation(<span class="built_in">this</span>.shaderProgram,<span class="string">&quot;u_baseColor&quot;</span>),<span class="built_in">this</span>.u_maskFlag_Loc=t.getUniformLocation(<span class="built_in">this</span>.shaderProgram,<span class="string">&quot;u_maskFlag&quot;</span>),<span class="built_in">this</span>.a_position_Loc_Off=t.getAttribLocation(<span class="built_in">this</span>.shaderProgramOff,<span class="string">&quot;a_position&quot;</span>),<span class="built_in">this</span>.a_texCoord_Loc_Off=t.getAttribLocation(<span class="built_in">this</span>.shaderProgramOff,<span class="string">&quot;a_texCoord&quot;</span>),<span class="built_in">this</span>.u_matrix_Loc_Off=t.getUniformLocation(<span class="built_in">this</span>.shaderProgramOff,<span class="string">&quot;u_mvpMatrix&quot;</span>),<span class="built_in">this</span>.u_clipMatrix_Loc_Off=t.getUniformLocation(<span class="built_in">this</span>.shaderProgramOff,<span class="string">&quot;u_ClipMatrix&quot;</span>),<span class="built_in">this</span>.s_texture0_Loc_Off=t.getUniformLocation(<span class="built_in">this</span>.shaderProgramOff,<span class="string">&quot;s_texture0&quot;</span>),<span class="built_in">this</span>.s_texture1_Loc_Off=t.getUniformLocation(<span class="built_in">this</span>.shaderProgramOff,<span class="string">&quot;s_texture1&quot;</span>),<span class="built_in">this</span>.u_channelFlag_Loc_Off=t.getUniformLocation(<span class="built_in">this</span>.shaderProgramOff,<span class="string">&quot;u_channelFlag&quot;</span>),<span class="built_in">this</span>.u_baseColor_Loc_Off=t.getUniformLocation(<span class="built_in">this</span>.shaderProgramOff,<span class="string">&quot;u_baseColor&quot;</span>)&#125;,dt.prototype.disposeShader=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="built_in">this</span>.gl;<span class="built_in">this</span>.shaderProgram&amp;&amp;(t.deleteProgram(<span class="built_in">this</span>.shaderProgram),<span class="built_in">this</span>.shaderProgram=<span class="literal">null</span>),<span class="built_in">this</span>.shaderProgramOff&amp;&amp;(t.deleteProgram(<span class="built_in">this</span>.shaderProgramOff),<span class="built_in">this</span>.shaderProgramOff=<span class="literal">null</span>)&#125;,dt.prototype.compileShader=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=<span class="built_in">this</span>.gl,r=e,o=i.createShader(t);<span class="keyword">if</span>(<span class="literal">null</span>==o)<span class="keyword">return</span> _._$Ji(<span class="string">&quot;_$L0 to create shader&quot;</span>),<span class="literal">null</span>;<span class="keyword">if</span>(i.shaderSource(o,r),i.compileShader(o),!i.getShaderParameter(o,i.COMPILE_STATUS))&#123;<span class="keyword">var</span> n=i.getShaderInfoLog(o);<span class="keyword">return</span> _._$Ji(<span class="string">&quot;_$L0 to compile shader : &quot;</span>+n),i.deleteShader(o),<span class="literal">null</span>&#125;<span class="keyword">return</span> o&#125;,dt.prototype.loadShaders2=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="built_in">this</span>.gl;<span class="keyword">if</span>(<span class="built_in">this</span>.shaderProgram=t.createProgram(),!<span class="built_in">this</span>.shaderProgram)<span class="keyword">return</span>!<span class="number">1</span>;<span class="keyword">if</span>(<span class="built_in">this</span>.shaderProgramOff=t.createProgram(),!<span class="built_in">this</span>.shaderProgramOff)<span class="keyword">return</span>!<span class="number">1</span>;<span class="keyword">if</span>(<span class="built_in">this</span>.vertShader=<span class="built_in">this</span>.compileShader(t.VERTEX_SHADER,<span class="string">&quot;attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform mat4       u_mvpMatrix;void main()&#123;    gl_Position = u_mvpMatrix * a_position;    v_ClipPos = u_mvpMatrix * a_position;    v_texCoord = a_texCoord;&#125;&quot;</span>),!<span class="built_in">this</span>.vertShader)<span class="keyword">return</span> _._$Ji(<span class="string">&quot;Vertex shader compile _$li!&quot;</span>),!<span class="number">1</span>;<span class="keyword">if</span>(<span class="built_in">this</span>.vertShaderOff=<span class="built_in">this</span>.compileShader(t.VERTEX_SHADER,<span class="string">&quot;attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform mat4       u_mvpMatrix;uniform mat4       u_ClipMatrix;void main()&#123;    gl_Position = u_mvpMatrix * a_position;    v_ClipPos = u_ClipMatrix * a_position;    v_texCoord = a_texCoord ;&#125;&quot;</span>),!<span class="built_in">this</span>.vertShaderOff)<span class="keyword">return</span> _._$Ji(<span class="string">&quot;OffVertex shader compile _$li!&quot;</span>),!<span class="number">1</span>;<span class="keyword">if</span>(<span class="built_in">this</span>.fragShader=<span class="built_in">this</span>.compileShader(t.FRAGMENT_SHADER,<span class="string">&quot;precision mediump float;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform sampler2D  s_texture0;uniform vec4       u_channelFlag;uniform vec4       u_baseColor;uniform bool       u_maskFlag;void main()&#123;    vec4 smpColor;     if(u_maskFlag)&#123;        float isInside =             step(u_baseColor.x, v_ClipPos.x/v_ClipPos.w)          * step(u_baseColor.y, v_ClipPos.y/v_ClipPos.w)          * step(v_ClipPos.x/v_ClipPos.w, u_baseColor.z)          * step(v_ClipPos.y/v_ClipPos.w, u_baseColor.w);        smpColor = u_channelFlag * texture2D(s_texture0 , v_texCoord).a * isInside;    &#125;else&#123;        smpColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;    &#125;    gl_FragColor = smpColor;&#125;&quot;</span>),!<span class="built_in">this</span>.fragShader)<span class="keyword">return</span> _._$Ji(<span class="string">&quot;Fragment shader compile _$li!&quot;</span>),!<span class="number">1</span>;<span class="keyword">if</span>(<span class="built_in">this</span>.fragShaderOff=<span class="built_in">this</span>.compileShader(t.FRAGMENT_SHADER,<span class="string">&quot;precision mediump float ;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;uniform vec4       u_channelFlag;uniform vec4       u_baseColor ;void main()&#123;    vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;    vec4 clipMask = texture2D(s_texture1, v_ClipPos.xy / v_ClipPos.w) * u_channelFlag;    float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;    col_formask = col_formask * maskVal;    gl_FragColor = col_formask;&#125;&quot;</span>),!<span class="built_in">this</span>.fragShaderOff)<span class="keyword">return</span> _._$Ji(<span class="string">&quot;OffFragment shader compile _$li!&quot;</span>),!<span class="number">1</span>;<span class="keyword">if</span>(t.attachShader(<span class="built_in">this</span>.shaderProgram,<span class="built_in">this</span>.vertShader),t.attachShader(<span class="built_in">this</span>.shaderProgram,<span class="built_in">this</span>.fragShader),t.attachShader(<span class="built_in">this</span>.shaderProgramOff,<span class="built_in">this</span>.vertShaderOff),t.attachShader(<span class="built_in">this</span>.shaderProgramOff,<span class="built_in">this</span>.fragShaderOff),t.linkProgram(<span class="built_in">this</span>.shaderProgram),t.linkProgram(<span class="built_in">this</span>.shaderProgramOff),!t.getProgramParameter(<span class="built_in">this</span>.shaderProgram,t.LINK_STATUS))&#123;<span class="keyword">var</span> e=t.getProgramInfoLog(<span class="built_in">this</span>.shaderProgram);<span class="keyword">return</span> _._$Ji(<span class="string">&quot;_$L0 to link program: &quot;</span>+e),<span class="built_in">this</span>.vertShader&amp;&amp;(t.deleteShader(<span class="built_in">this</span>.vertShader),<span class="built_in">this</span>.vertShader=<span class="number">0</span>),<span class="built_in">this</span>.fragShader&amp;&amp;(t.deleteShader(<span class="built_in">this</span>.fragShader),<span class="built_in">this</span>.fragShader=<span class="number">0</span>),<span class="built_in">this</span>.shaderProgram&amp;&amp;(t.deleteProgram(<span class="built_in">this</span>.shaderProgram),<span class="built_in">this</span>.shaderProgram=<span class="number">0</span>),<span class="built_in">this</span>.vertShaderOff&amp;&amp;(t.deleteShader(<span class="built_in">this</span>.vertShaderOff),<span class="built_in">this</span>.vertShaderOff=<span class="number">0</span>),<span class="built_in">this</span>.fragShaderOff&amp;&amp;(t.deleteShader(<span class="built_in">this</span>.fragShaderOff),<span class="built_in">this</span>.fragShaderOff=<span class="number">0</span>),<span class="built_in">this</span>.shaderProgramOff&amp;&amp;(t.deleteProgram(<span class="built_in">this</span>.shaderProgramOff),<span class="built_in">this</span>.shaderProgramOff=<span class="number">0</span>),!<span class="number">1</span>&#125;<span class="keyword">return</span>!<span class="number">0</span>&#125;,dt.prototype.createFramebuffer=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="built_in">this</span>.gl,e=_t.clippingMaskBufferSize,i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i);<span class="keyword">var</span> r=t.createRenderbuffer();t.bindRenderbuffer(t.RENDERBUFFER,r),t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,e,e),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,r);<span class="keyword">var</span> o=t.createTexture();<span class="keyword">return</span> t.bindTexture(t.TEXTURE_2D,o),t.texImage2D(t.TEXTURE_2D,<span class="number">0</span>,t.RGBA,e,e,<span class="number">0</span>,t.RGBA,t.UNSIGNED_BYTE,<span class="literal">null</span>),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,o,<span class="number">0</span>),t.bindTexture(t.TEXTURE_2D,<span class="literal">null</span>),t.bindRenderbuffer(t.RENDERBUFFER,<span class="literal">null</span>),t.bindFramebuffer(t.FRAMEBUFFER,<span class="literal">null</span>),_t.fTexture[<span class="built_in">this</span>.glno]=o,&#123;<span class="attr">framebuffer</span>:i,<span class="attr">renderbuffer</span>:r,<span class="attr">texture</span>:_t.fTexture[<span class="built_in">this</span>.glno]&#125;&#125;,Pt.prototype._$fP=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t,e,i,r=<span class="built_in">this</span>._$ST();<span class="keyword">if</span>(<span class="number">0</span>==(<span class="number">128</span>&amp;r))<span class="keyword">return</span> <span class="number">255</span>&amp;r;<span class="keyword">if</span>(<span class="number">0</span>==(<span class="number">128</span>&amp;(t=<span class="built_in">this</span>._$ST())))<span class="keyword">return</span>(<span class="number">127</span>&amp;r)&lt;&lt;<span class="number">7</span>|<span class="number">127</span>&amp;t;<span class="keyword">if</span>(<span class="number">0</span>==(<span class="number">128</span>&amp;(e=<span class="built_in">this</span>._$ST())))<span class="keyword">return</span>(<span class="number">127</span>&amp;r)&lt;&lt;<span class="number">14</span>|(<span class="number">127</span>&amp;t)&lt;&lt;<span class="number">7</span>|<span class="number">255</span>&amp;e;<span class="keyword">if</span>(<span class="number">0</span>==(<span class="number">128</span>&amp;(i=<span class="built_in">this</span>._$ST())))<span class="keyword">return</span>(<span class="number">127</span>&amp;r)&lt;&lt;<span class="number">21</span>|(<span class="number">127</span>&amp;t)&lt;&lt;<span class="number">14</span>|(<span class="number">127</span>&amp;e)&lt;&lt;<span class="number">7</span>|<span class="number">255</span>&amp;i;<span class="keyword">throw</span> <span class="keyword">new</span> ht(<span class="string">&quot;_$L _$0P  _&quot;</span>)&#125;,Pt.prototype.getFormatVersion=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$S2&#125;,Pt.prototype._$gr=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>._$S2=t&#125;,Pt.prototype._$3L=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$fP()&#125;,Pt.prototype._$mP=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$zT(),<span class="built_in">this</span>._$F+=<span class="number">8</span>,<span class="built_in">this</span>._$T.getFloat64(<span class="built_in">this</span>._$F-<span class="number">8</span>)&#125;,Pt.prototype._$_T=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$zT(),<span class="built_in">this</span>._$F+=<span class="number">4</span>,<span class="built_in">this</span>._$T.getFloat32(<span class="built_in">this</span>._$F-<span class="number">4</span>)&#125;,Pt.prototype._$6L=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$zT(),<span class="built_in">this</span>._$F+=<span class="number">4</span>,<span class="built_in">this</span>._$T.getInt32(<span class="built_in">this</span>._$F-<span class="number">4</span>)&#125;,Pt.prototype._$ST=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$zT(),<span class="built_in">this</span>._$T.getInt8(<span class="built_in">this</span>._$F++)&#125;,Pt.prototype._$9T=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$zT(),<span class="built_in">this</span>._$F+=<span class="number">2</span>,<span class="built_in">this</span>._$T.getInt16(<span class="built_in">this</span>._$F-<span class="number">2</span>)&#125;,Pt.prototype._$2T=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">throw</span> <span class="built_in">this</span>._$zT(),<span class="built_in">this</span>._$F+=<span class="number">8</span>,<span class="keyword">new</span> ht(<span class="string">&quot;_$L _$q read long&quot;</span>)&#125;,Pt.prototype._$po=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$zT(),<span class="number">0</span>!=<span class="built_in">this</span>._$T.getInt8(<span class="built_in">this</span>._$F++)&#125;;<span class="keyword">var</span> St=!<span class="number">0</span>;<span class="function"><span class="keyword">function</span> <span class="title">vt</span>(<span class="params"></span>)</span>&#123;&#125;<span class="function"><span class="keyword">function</span> <span class="title">Lt</span>(<span class="params">t</span>)</span>&#123;i||(<span class="built_in">this</span>._$e0=<span class="literal">null</span>,<span class="built_in">this</span>._$IP=<span class="literal">null</span>,<span class="built_in">this</span>._$Us=<span class="literal">null</span>,<span class="built_in">this</span>._$7s=<span class="literal">null</span>,<span class="built_in">this</span>._$IS=[!<span class="number">1</span>],<span class="built_in">this</span>._$VS=<span class="literal">null</span>,<span class="built_in">this</span>._$AT=!<span class="number">0</span>,<span class="built_in">this</span>.baseOpacity=<span class="number">1</span>,<span class="built_in">this</span>.clipBufPre_clipContext=<span class="literal">null</span>,<span class="built_in">this</span>._$e0=t)&#125;<span class="function"><span class="keyword">function</span> <span class="title">Mt</span>(<span class="params"></span>)</span>&#123;&#125;Pt.prototype._$bT=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$zT();<span class="keyword">var</span> t=<span class="built_in">this</span>._$3L(),e=<span class="literal">null</span>;<span class="keyword">if</span>(St)<span class="keyword">try</span>&#123;<span class="keyword">var</span> i=<span class="keyword">new</span> <span class="built_in">ArrayBuffer</span>(<span class="number">2</span>*t);e=<span class="keyword">new</span> <span class="built_in">Uint16Array</span>(i);<span class="keyword">for</span>(<span class="keyword">var</span> r=<span class="number">0</span>;r&lt;t;++r)e[r]=<span class="built_in">this</span>._$T.getUint8(<span class="built_in">this</span>._$F++);<span class="keyword">return</span> <span class="built_in">String</span>.fromCharCode.apply(<span class="literal">null</span>,e)&#125;<span class="keyword">catch</span>(t)&#123;St=!<span class="number">1</span>&#125;<span class="keyword">try</span>&#123;<span class="keyword">var</span> o=<span class="keyword">new</span> <span class="built_in">Array</span>;<span class="keyword">if</span>(<span class="literal">null</span>==e)<span class="keyword">for</span>(r=<span class="number">0</span>;r&lt;t;++r)o[r]=<span class="built_in">this</span>._$T.getUint8(<span class="built_in">this</span>._$F++);<span class="keyword">else</span> <span class="keyword">for</span>(r=<span class="number">0</span>;r&lt;t;++r)o[r]=e[r];<span class="keyword">return</span> <span class="built_in">String</span>.fromCharCode.apply(<span class="literal">null</span>,o)&#125;<span class="keyword">catch</span>(t)&#123;<span class="built_in">console</span>.log(<span class="string">&quot;read utf8 / _$rT _$L0 !! : &quot;</span>+t)&#125;&#125;,Pt.prototype._$cS=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$zT();<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="built_in">this</span>._$3L(),e=<span class="keyword">new</span> <span class="built_in">Int32Array</span>(t),i=<span class="number">0</span>;i&lt;t;i++)e[i]=<span class="built_in">this</span>._$T.getInt32(<span class="built_in">this</span>._$F),<span class="built_in">this</span>._$F+=<span class="number">4</span>;<span class="keyword">return</span> e&#125;,Pt.prototype._$Tb=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$zT();<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="built_in">this</span>._$3L(),e=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(t),i=<span class="number">0</span>;i&lt;t;i++)e[i]=<span class="built_in">this</span>._$T.getFloat32(<span class="built_in">this</span>._$F),<span class="built_in">this</span>._$F+=<span class="number">4</span>;<span class="keyword">return</span> e&#125;,Pt.prototype._$5b=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>._$zT();<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="built_in">this</span>._$3L(),e=<span class="keyword">new</span> <span class="built_in">Float64Array</span>(t),i=<span class="number">0</span>;i&lt;t;i++)e[i]=<span class="built_in">this</span>._$T.getFloat64(<span class="built_in">this</span>._$F),<span class="built_in">this</span>._$F+=<span class="number">8</span>;<span class="keyword">return</span> e&#125;,Pt.prototype._$nP=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$Jb(-<span class="number">1</span>)&#125;,Pt.prototype._$Jb=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(<span class="built_in">this</span>._$zT(),t&lt;<span class="number">0</span>&amp;&amp;(t=<span class="built_in">this</span>._$3L()),t==G._$7P)&#123;<span class="keyword">var</span> e=<span class="built_in">this</span>._$6L();<span class="keyword">if</span>(<span class="number">0</span>&lt;=e&amp;&amp;e&lt;<span class="built_in">this</span>._$Ko.length)<span class="keyword">return</span> <span class="built_in">this</span>._$Ko[e];<span class="keyword">throw</span> <span class="keyword">new</span> ht(<span class="string">&quot;_$sL _$4i @_$m0&quot;</span>)&#125;<span class="keyword">var</span> i=<span class="built_in">this</span>._$4b(t);<span class="keyword">return</span> <span class="built_in">this</span>._$Ko.push(i),i&#125;,Pt.prototype._$4b=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(<span class="number">0</span>==t)<span class="keyword">return</span> <span class="literal">null</span>;<span class="keyword">if</span>(<span class="number">50</span>==t)&#123;<span class="keyword">var</span> e=<span class="built_in">this</span>._$bT();<span class="keyword">return</span> n=R.getID(e)&#125;<span class="keyword">if</span>(<span class="number">51</span>==t)&#123;e=<span class="built_in">this</span>._$bT();<span class="keyword">return</span> n=yt.getID(e)&#125;<span class="keyword">if</span>(<span class="number">134</span>==t)&#123;e=<span class="built_in">this</span>._$bT();<span class="keyword">return</span> n=h.getID(e)&#125;<span class="keyword">if</span>(<span class="number">60</span>==t)&#123;e=<span class="built_in">this</span>._$bT();<span class="keyword">return</span> n=l.getID(e)&#125;<span class="keyword">if</span>(t&gt;=<span class="number">48</span>)&#123;<span class="keyword">var</span> r=G._$9o(t);<span class="keyword">return</span> <span class="literal">null</span>!=r?(r._$F0(<span class="built_in">this</span>),r):<span class="literal">null</span>&#125;<span class="keyword">switch</span>(t)&#123;<span class="keyword">case</span> <span class="number">1</span>:<span class="keyword">return</span> <span class="built_in">this</span>._$bT();<span class="keyword">case</span> <span class="number">10</span>:<span class="keyword">return</span> <span class="keyword">new</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;i||(<span class="built_in">this</span>.color=<span class="literal">null</span>)&#125;(<span class="built_in">this</span>._$6L(),!<span class="number">0</span>);<span class="keyword">case</span> <span class="number">11</span>:<span class="keyword">return</span> <span class="keyword">new</span> P(<span class="built_in">this</span>._$mP(),<span class="built_in">this</span>._$mP(),<span class="built_in">this</span>._$mP(),<span class="built_in">this</span>._$mP());<span class="keyword">case</span> <span class="number">12</span>:<span class="keyword">return</span> <span class="keyword">new</span> P(<span class="built_in">this</span>._$_T(),<span class="built_in">this</span>._$_T(),<span class="built_in">this</span>._$_T(),<span class="built_in">this</span>._$_T());<span class="keyword">case</span> <span class="number">13</span>:<span class="keyword">return</span> <span class="keyword">new</span> v(<span class="built_in">this</span>._$mP(),<span class="built_in">this</span>._$mP());<span class="keyword">case</span> <span class="number">14</span>:<span class="keyword">return</span> <span class="keyword">new</span> v(<span class="built_in">this</span>._$_T(),<span class="built_in">this</span>._$_T());<span class="keyword">case</span> <span class="number">15</span>:<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="built_in">this</span>._$3L(),n=<span class="keyword">new</span> <span class="built_in">Array</span>(o),s=<span class="number">0</span>;s&lt;o;s++)n[s]=<span class="built_in">this</span>._$nP();<span class="keyword">return</span> n;<span class="keyword">case</span> <span class="number">17</span>:<span class="keyword">return</span> n=<span class="keyword">new</span> b(<span class="built_in">this</span>._$mP(),<span class="built_in">this</span>._$mP(),<span class="built_in">this</span>._$mP(),<span class="built_in">this</span>._$mP(),<span class="built_in">this</span>._$mP(),<span class="built_in">this</span>._$mP());<span class="keyword">case</span> <span class="number">21</span>:<span class="keyword">return</span> <span class="keyword">new</span> a(<span class="built_in">this</span>._$6L(),<span class="built_in">this</span>._$6L(),<span class="built_in">this</span>._$6L(),<span class="built_in">this</span>._$6L());<span class="keyword">case</span> <span class="number">22</span>:<span class="keyword">return</span> <span class="keyword">new</span> ut(<span class="built_in">this</span>._$6L(),<span class="built_in">this</span>._$6L());<span class="keyword">case</span> <span class="number">23</span>:<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;_$L _$ro &quot;</span>);<span class="keyword">case</span> <span class="number">16</span>:<span class="keyword">case</span> <span class="number">25</span>:<span class="keyword">return</span> <span class="built_in">this</span>._$cS();<span class="keyword">case</span> <span class="number">26</span>:<span class="keyword">return</span> <span class="built_in">this</span>._$5b();<span class="keyword">case</span> <span class="number">27</span>:<span class="keyword">return</span> <span class="built_in">this</span>._$Tb();<span class="keyword">case</span> <span class="number">2</span>:<span class="keyword">case</span> <span class="number">3</span>:<span class="keyword">case</span> <span class="number">4</span>:<span class="keyword">case</span> <span class="number">5</span>:<span class="keyword">case</span> <span class="number">6</span>:<span class="keyword">case</span> <span class="number">7</span>:<span class="keyword">case</span> <span class="number">8</span>:<span class="keyword">case</span> <span class="number">9</span>:<span class="keyword">case</span> <span class="number">18</span>:<span class="keyword">case</span> <span class="number">19</span>:<span class="keyword">case</span> <span class="number">20</span>:<span class="keyword">case</span> <span class="number">24</span>:<span class="keyword">case</span> <span class="number">28</span>:<span class="keyword">throw</span> <span class="keyword">new</span> ht(<span class="string">&quot;_$6 _$q : _$nP() of 2-9 ,18,19,20,24,28 : &quot;</span>+t);<span class="keyword">default</span>:<span class="keyword">throw</span> <span class="keyword">new</span> ht(<span class="string">&quot;_$6 _$q : _$nP() NO _$i : &quot;</span>+t)&#125;&#125;,Pt.prototype._$8L=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="number">0</span>==<span class="built_in">this</span>._$hL?<span class="built_in">this</span>._$v0=<span class="built_in">this</span>._$ST():<span class="number">8</span>==<span class="built_in">this</span>._$hL&amp;&amp;(<span class="built_in">this</span>._$v0=<span class="built_in">this</span>._$ST(),<span class="built_in">this</span>._$hL=<span class="number">0</span>),<span class="number">1</span>==(<span class="built_in">this</span>._$v0&gt;&gt;<span class="number">7</span>-<span class="built_in">this</span>._$hL++&amp;<span class="number">1</span>)&#125;,Pt.prototype._$zT=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="number">0</span>!=<span class="built_in">this</span>._$hL&amp;&amp;(<span class="built_in">this</span>._$hL=<span class="number">0</span>)&#125;,vt._$2S=<span class="built_in">Math</span>.PI/<span class="number">180</span>,vt._$bS=<span class="built_in">Math</span>.PI/<span class="number">180</span>,vt._$wS=<span class="number">180</span>/<span class="built_in">Math</span>.PI,vt._$NS=<span class="number">180</span>/<span class="built_in">Math</span>.PI,vt.PI_F=<span class="built_in">Math</span>.PI,vt._$kT=[<span class="number">0</span>,<span class="number">.012368</span>,<span class="number">.024734</span>,<span class="number">.037097</span>,<span class="number">.049454</span>,<span class="number">.061803</span>,<span class="number">.074143</span>,<span class="number">.086471</span>,<span class="number">.098786</span>,<span class="number">.111087</span>,<span class="number">.12337</span>,<span class="number">.135634</span>,<span class="number">.147877</span>,<span class="number">.160098</span>,<span class="number">.172295</span>,<span class="number">.184465</span>,<span class="number">.196606</span>,<span class="number">.208718</span>,<span class="number">.220798</span>,<span class="number">.232844</span>,<span class="number">.244854</span>,<span class="number">.256827</span>,<span class="number">.268761</span>,<span class="number">.280654</span>,<span class="number">.292503</span>,<span class="number">.304308</span>,<span class="number">.316066</span>,<span class="number">.327776</span>,<span class="number">.339436</span>,<span class="number">.351044</span>,<span class="number">.362598</span>,<span class="number">.374097</span>,<span class="number">.385538</span>,<span class="number">.396921</span>,<span class="number">.408243</span>,<span class="number">.419502</span>,<span class="number">.430697</span>,<span class="number">.441826</span>,<span class="number">.452888</span>,<span class="number">.463881</span>,<span class="number">.474802</span>,<span class="number">.485651</span>,<span class="number">.496425</span>,<span class="number">.507124</span>,<span class="number">.517745</span>,<span class="number">.528287</span>,<span class="number">.538748</span>,<span class="number">.549126</span>,<span class="number">.559421</span>,<span class="number">.56963</span>,<span class="number">.579752</span>,<span class="number">.589785</span>,<span class="number">.599728</span>,<span class="number">.609579</span>,<span class="number">.619337</span>,<span class="number">.629</span>,<span class="number">.638567</span>,<span class="number">.648036</span>,<span class="number">.657406</span>,<span class="number">.666676</span>,<span class="number">.675843</span>,<span class="number">.684908</span>,<span class="number">.693867</span>,<span class="number">.70272</span>,<span class="number">.711466</span>,<span class="number">.720103</span>,<span class="number">.72863</span>,<span class="number">.737045</span>,<span class="number">.745348</span>,<span class="number">.753536</span>,<span class="number">.76161</span>,<span class="number">.769566</span>,<span class="number">.777405</span>,<span class="number">.785125</span>,<span class="number">.792725</span>,<span class="number">.800204</span>,<span class="number">.807561</span>,<span class="number">.814793</span>,<span class="number">.821901</span>,<span class="number">.828884</span>,<span class="number">.835739</span>,<span class="number">.842467</span>,<span class="number">.849066</span>,<span class="number">.855535</span>,<span class="number">.861873</span>,<span class="number">.868079</span>,<span class="number">.874153</span>,<span class="number">.880093</span>,<span class="number">.885898</span>,<span class="number">.891567</span>,<span class="number">.897101</span>,<span class="number">.902497</span>,<span class="number">.907754</span>,<span class="number">.912873</span>,<span class="number">.917853</span>,<span class="number">.922692</span>,<span class="number">.92739</span>,<span class="number">.931946</span>,<span class="number">.936359</span>,<span class="number">.940629</span>,<span class="number">.944755</span>,<span class="number">.948737</span>,<span class="number">.952574</span>,<span class="number">.956265</span>,<span class="number">.959809</span>,<span class="number">.963207</span>,<span class="number">.966457</span>,<span class="number">.96956</span>,<span class="number">.972514</span>,<span class="number">.97532</span>,<span class="number">.977976</span>,<span class="number">.980482</span>,<span class="number">.982839</span>,<span class="number">.985045</span>,<span class="number">.987101</span>,<span class="number">.989006</span>,<span class="number">.990759</span>,<span class="number">.992361</span>,<span class="number">.993811</span>,<span class="number">.995109</span>,<span class="number">.996254</span>,<span class="number">.997248</span>,<span class="number">.998088</span>,<span class="number">.998776</span>,<span class="number">.999312</span>,<span class="number">.999694</span>,<span class="number">.999924</span>,<span class="number">1</span>],vt._$92=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=<span class="built_in">Math</span>.atan2(t[<span class="number">1</span>],t[<span class="number">0</span>]),r=<span class="built_in">Math</span>.atan2(e[<span class="number">1</span>],e[<span class="number">0</span>]);<span class="keyword">return</span> vt._$tS(i,r)&#125;,vt._$tS=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> i=t-e;i&lt;-<span class="built_in">Math</span>.PI;)i+=<span class="number">2</span>*<span class="built_in">Math</span>.PI;<span class="keyword">for</span>(;i&gt;<span class="built_in">Math</span>.PI;)i-=<span class="number">2</span>*<span class="built_in">Math</span>.PI;<span class="keyword">return</span> i&#125;,vt._$9=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">Math</span>.sin(t)&#125;,vt.fcos=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">Math</span>.cos(t)&#125;,Lt.prototype._$u2=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$IS[<span class="number">0</span>]&#125;,Lt.prototype._$yo=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$AT&amp;&amp;!<span class="built_in">this</span>._$IS[<span class="number">0</span>]&#125;,Lt.prototype._$GT=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>._$e0&#125;,Mt._$W2=<span class="number">0</span>,Mt.SYSTEM_INFO=<span class="literal">null</span>,Mt.USER_AGENT=navigator.userAgent,Mt.isIPhone=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> Mt.SYSTEM_INFO||Mt.setup(),Mt.SYSTEM_INFO._isIPhone&#125;,Mt.isIOS=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> Mt.SYSTEM_INFO||Mt.setup(),Mt.SYSTEM_INFO._isIPhone||Mt.SYSTEM_INFO._isIPad&#125;,Mt.isAndroid=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> Mt.SYSTEM_INFO||Mt.setup(),Mt.SYSTEM_INFO._isAndroid&#125;,Mt.getOSVersion=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> Mt.SYSTEM_INFO||Mt.setup(),Mt.SYSTEM_INFO.version&#125;,Mt.getOS=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> Mt.SYSTEM_INFO||Mt.setup(),Mt.SYSTEM_INFO._isIPhone||Mt.SYSTEM_INFO._isIPad?<span class="string">&quot;iOS&quot;</span>:Mt.SYSTEM_INFO._isAndroid?<span class="string">&quot;Android&quot;</span>:<span class="string">&quot;_$Q0 OS&quot;</span>&#125;,Mt.setup=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t,e=Mt.USER_AGENT;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> i=t.substring(e).split(<span class="regexp">/[ _,;\.]/</span>),r=<span class="number">0</span>,o=<span class="number">0</span>;o&lt;=<span class="number">2</span>&amp;&amp;!<span class="built_in">isNaN</span>(i[o]);o++)&#123;<span class="keyword">var</span> n=<span class="built_in">parseInt</span>(i[o]);<span class="keyword">if</span>(n&lt;<span class="number">0</span>||n&gt;<span class="number">999</span>)&#123;_._$li(<span class="string">&quot;err : &quot;</span>+n+<span class="string">&quot; @UtHtml5.setup()&quot;</span>),r=<span class="number">0</span>;<span class="keyword">break</span>&#125;r+=n*<span class="built_in">Math</span>.pow(<span class="number">1e3</span>,<span class="number">2</span>-o)&#125;<span class="keyword">return</span> r&#125;<span class="keyword">var</span> r=Mt.SYSTEM_INFO=&#123;<span class="attr">userAgent</span>:e&#125;;<span class="keyword">if</span>((t=e.indexOf(<span class="string">&quot;iPhone OS &quot;</span>))&gt;=<span class="number">0</span>)r.os=<span class="string">&quot;iPhone&quot;</span>,r._isIPhone=!<span class="number">0</span>,r.version=i(e,t+<span class="string">&quot;iPhone OS &quot;</span>.length);<span class="keyword">else</span> <span class="keyword">if</span>((t=e.indexOf(<span class="string">&quot;iPad&quot;</span>))&gt;=<span class="number">0</span>)&#123;<span class="keyword">if</span>((t=e.indexOf(<span class="string">&quot;CPU OS&quot;</span>))&lt;<span class="number">0</span>)<span class="keyword">return</span> <span class="keyword">void</span> _._$li(<span class="string">&quot; err : &quot;</span>+e+<span class="string">&quot; @UtHtml5.setup()&quot;</span>);r.os=<span class="string">&quot;iPad&quot;</span>,r._isIPad=!<span class="number">0</span>,r.version=i(e,t+<span class="string">&quot;CPU OS &quot;</span>.length)&#125;<span class="keyword">else</span>(t=e.indexOf(<span class="string">&quot;Android&quot;</span>))&gt;=<span class="number">0</span>?(r.os=<span class="string">&quot;Android&quot;</span>,r._isAndroid=!<span class="number">0</span>,r.version=i(e,t+<span class="string">&quot;Android &quot;</span>.length)):(r.os=<span class="string">&quot;-&quot;</span>,r.version=-<span class="number">1</span>)&#125;,_t.init();i=!<span class="number">1</span>;e.UtSystem=x,e.UtDebug=_,e.LDTransform=gt,e.LDGL=ot,e.Live2D=_t,e.Live2DModelWebGL=pt,e.Live2DModelJS=q,e.Live2DMotion=J,e.MotionQueueManager=ct,e.PhysicsHair=u,e.AMotion=s,e.PartsDataID=h,e.DrawDataID=R,e.BaseDataID=yt,e.ParamID=l&#125;).call(e,i(<span class="number">85</span>))&#125;,<span class="number">81</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="string">&quot;use strict&quot;</span>;<span class="built_in">Object</span>.defineProperty(e,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),e.L2DBaseModel=e.L2DExpressionMotion=e.L2DExpressionParam=e.L2DEyeBlink=e.EYE_STATE=e.L2DMatrix44=e.L2DModelMatrix=e.L2DMotionManager=e.L2DPhysics=e.L2DPartsParam=e.L2DPose=e.L2DViewMatrix=e.Live2DFramework=e.L2DTargetPoint=<span class="keyword">void</span> <span class="number">0</span>;<span class="keyword">var</span> r=i(<span class="number">80</span>);<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.live2DModel=<span class="literal">null</span>,<span class="built_in">this</span>.modelMatrix=<span class="literal">null</span>,<span class="built_in">this</span>.eyeBlink=<span class="literal">null</span>,<span class="built_in">this</span>.physics=<span class="literal">null</span>,<span class="built_in">this</span>.pose=<span class="literal">null</span>,<span class="built_in">this</span>.debugMode=!<span class="number">1</span>,<span class="built_in">this</span>.initialized=!<span class="number">1</span>,<span class="built_in">this</span>.updating=!<span class="number">1</span>,<span class="built_in">this</span>.alpha=<span class="number">1</span>,<span class="built_in">this</span>.accAlpha=<span class="number">0</span>,<span class="built_in">this</span>.lipSync=!<span class="number">1</span>,<span class="built_in">this</span>.lipSyncValue=<span class="number">0</span>,<span class="built_in">this</span>.accelX=<span class="number">0</span>,<span class="built_in">this</span>.accelY=<span class="number">0</span>,<span class="built_in">this</span>.accelZ=<span class="number">0</span>,<span class="built_in">this</span>.dragX=<span class="number">0</span>,<span class="built_in">this</span>.dragY=<span class="number">0</span>,<span class="built_in">this</span>.startTimeMSec=<span class="literal">null</span>,<span class="built_in">this</span>.mainMotionManager=<span class="keyword">new</span> u,<span class="built_in">this</span>.expressionManager=<span class="keyword">new</span> u,<span class="built_in">this</span>.motions=&#123;&#125;,<span class="built_in">this</span>.expressions=&#123;&#125;,<span class="built_in">this</span>.isTexLoaded=!<span class="number">1</span>&#125;<span class="keyword">var</span> n=<span class="number">0</span>;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;r.AMotion.prototype.constructor.call(<span class="built_in">this</span>),<span class="built_in">this</span>.paramList=<span class="keyword">new</span> <span class="built_in">Array</span>&#125;<span class="function"><span class="keyword">function</span> <span class="title">_</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.id=<span class="string">&quot;&quot;</span>,<span class="built_in">this</span>.type=-<span class="number">1</span>,<span class="built_in">this</span>.value=<span class="literal">null</span>&#125;<span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.nextBlinkTime=<span class="literal">null</span>,<span class="built_in">this</span>.stateStartTime=<span class="literal">null</span>,<span class="built_in">this</span>.blinkIntervalMsec=<span class="literal">null</span>,<span class="built_in">this</span>.eyeState=h.STATE_FIRST,<span class="built_in">this</span>.blinkIntervalMsec=<span class="number">4e3</span>,<span class="built_in">this</span>.closingMotionMsec=<span class="number">100</span>,<span class="built_in">this</span>.closedMotionMsec=<span class="number">50</span>,<span class="built_in">this</span>.openingMotionMsec=<span class="number">150</span>,<span class="built_in">this</span>.closeIfZero=!<span class="number">0</span>,<span class="built_in">this</span>.eyeID_L=<span class="string">&quot;PARAM_EYE_L_OPEN&quot;</span>,<span class="built_in">this</span>.eyeID_R=<span class="string">&quot;PARAM_EYE_R_OPEN&quot;</span>&#125;o.prototype.getModelMatrix=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.modelMatrix&#125;,o.prototype.setAlpha=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;t&gt;<span class="number">.999</span>&amp;&amp;(t=<span class="number">1</span>),t&lt;<span class="number">.001</span>&amp;&amp;(t=<span class="number">0</span>),<span class="built_in">this</span>.alpha=t&#125;,o.prototype.getAlpha=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.alpha&#125;,o.prototype.isInitialized=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.initialized&#125;,o.prototype.setInitialized=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.initialized=t&#125;,o.prototype.isUpdating=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.updating&#125;,o.prototype.setUpdating=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.updating=t&#125;,o.prototype.getLive2DModel=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.live2DModel&#125;,o.prototype.setLipSync=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.lipSync=t&#125;,o.prototype.setLipSyncValue=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.lipSyncValue=t&#125;,o.prototype.setAccel=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="built_in">this</span>.accelX=t,<span class="built_in">this</span>.accelY=e,<span class="built_in">this</span>.accelZ=i&#125;,o.prototype.setDrag=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>.dragX=t,<span class="built_in">this</span>.dragY=e&#125;,o.prototype.getMainMotionManager=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.mainMotionManager&#125;,o.prototype.getExpressionManager=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.expressionManager&#125;,o.prototype.loadModelData=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=d.getPlatformManager();<span class="built_in">this</span>.debugMode&amp;&amp;i.log(<span class="string">&quot;Load model : &quot;</span>+t);<span class="keyword">var</span> o=<span class="built_in">this</span>;i.loadLive2DModel(t,<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;o.live2DModel=t,o.live2DModel.saveParam(),<span class="number">0</span>==r.Live2D.getError()?(o.modelMatrix=<span class="keyword">new</span> $(o.live2DModel.getCanvasWidth(),o.live2DModel.getCanvasHeight()),o.modelMatrix.setWidth(<span class="number">2</span>),o.modelMatrix.setCenterPosition(<span class="number">0</span>,<span class="number">0</span>),e(o.live2DModel)):<span class="built_in">console</span>.error(<span class="string">&quot;Error : Failed to loadModelData().&quot;</span>)&#125;)&#125;,o.prototype.loadTexture=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;n++;<span class="keyword">var</span> r=d.getPlatformManager();<span class="built_in">this</span>.debugMode&amp;&amp;r.log(<span class="string">&quot;Load Texture : &quot;</span>+e);<span class="keyword">var</span> o=<span class="built_in">this</span>;r.loadTexture(<span class="built_in">this</span>.live2DModel,t,e,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="number">0</span>==--n&amp;&amp;(o.isTexLoaded=!<span class="number">0</span>),<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> i&amp;&amp;i()&#125;)&#125;,o.prototype.loadMotion=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">var</span> o=d.getPlatformManager();<span class="built_in">this</span>.debugMode&amp;&amp;o.log(<span class="string">&quot;Load Motion : &quot;</span>+e);<span class="keyword">var</span> n=<span class="literal">null</span>,s=<span class="built_in">this</span>;o.loadBytes(e,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;n=r.Live2DMotion.loadMotion(e),<span class="literal">null</span>!=t&amp;&amp;(s.motions[t]=n),i(n)&#125;)&#125;,o.prototype.loadExpression=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">var</span> r=d.getPlatformManager();<span class="built_in">this</span>.debugMode&amp;&amp;r.log(<span class="string">&quot;Load Expression : &quot;</span>+e);<span class="keyword">var</span> o=<span class="built_in">this</span>;r.loadBytes(e,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="literal">null</span>!=t&amp;&amp;(o.expressions[t]=s.loadJson(e)),<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> i&amp;&amp;i()&#125;)&#125;,o.prototype.loadPose=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=d.getPlatformManager();<span class="built_in">this</span>.debugMode&amp;&amp;i.log(<span class="string">&quot;Load Pose : &quot;</span>+t);<span class="keyword">var</span> r=<span class="built_in">this</span>;<span class="keyword">try</span>&#123;i.loadBytes(t,<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;r.pose=c.load(t),<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> e&amp;&amp;e()&#125;)&#125;<span class="keyword">catch</span>(t)&#123;<span class="built_in">console</span>.warn(t)&#125;&#125;,o.prototype.loadPhysics=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=d.getPlatformManager();<span class="built_in">this</span>.debugMode&amp;&amp;e.log(<span class="string">&quot;Load Physics : &quot;</span>+t);<span class="keyword">var</span> i=<span class="built_in">this</span>;<span class="keyword">try</span>&#123;e.loadBytes(t,<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;i.physics=p.load(t)&#125;)&#125;<span class="keyword">catch</span>(t)&#123;<span class="built_in">console</span>.warn(t)&#125;&#125;,o.prototype.hitTestSimple=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">if</span>(<span class="literal">null</span>===<span class="built_in">this</span>.live2DModel)<span class="keyword">return</span>!<span class="number">1</span>;<span class="keyword">var</span> r=<span class="built_in">this</span>.live2DModel.getDrawDataIndex(t);<span class="keyword">if</span>(r&lt;<span class="number">0</span>)<span class="keyword">return</span>!<span class="number">1</span>;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="built_in">this</span>.live2DModel.getTransformedPoints(r),n=<span class="built_in">this</span>.live2DModel.getCanvasWidth(),s=<span class="number">0</span>,_=<span class="built_in">this</span>.live2DModel.getCanvasHeight(),a=<span class="number">0</span>,h=<span class="number">0</span>;h&lt;o.length;h+=<span class="number">2</span>)&#123;<span class="keyword">var</span> l=o[h],$=o[h+<span class="number">1</span>];l&lt;n&amp;&amp;(n=l),l&gt;s&amp;&amp;(s=l),$&lt;_&amp;&amp;(_=$),$&gt;a&amp;&amp;(a=$)&#125;<span class="keyword">var</span> u=<span class="built_in">this</span>.modelMatrix.invertTransformX(e),p=<span class="built_in">this</span>.modelMatrix.invertTransformY(i);<span class="keyword">return</span> n&lt;=u&amp;&amp;u&lt;=s&amp;&amp;_&lt;=p&amp;&amp;p&lt;=a&#125;,s.prototype=<span class="keyword">new</span> r.AMotion,s.EXPRESSION_DEFAULT=<span class="string">&quot;DEFAULT&quot;</span>,s.TYPE_SET=<span class="number">0</span>,s.TYPE_ADD=<span class="number">1</span>,s.TYPE_MULT=<span class="number">2</span>,s.loadJson=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="keyword">new</span> s,i=d.getPlatformManager().jsonParseFromBytes(t);<span class="keyword">if</span>(e.setFadeIn(<span class="built_in">parseInt</span>(i.fade_in)&gt;<span class="number">0</span>?<span class="built_in">parseInt</span>(i.fade_in):<span class="number">1e3</span>),e.setFadeOut(<span class="built_in">parseInt</span>(i.fade_out)&gt;<span class="number">0</span>?<span class="built_in">parseInt</span>(i.fade_out):<span class="number">1e3</span>),<span class="literal">null</span>==i.params)<span class="keyword">return</span> e;<span class="keyword">var</span> r=i.params,o=r.length;e.paramList=[];<span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="number">0</span>;n&lt;o;n++)&#123;<span class="keyword">var</span> a=r[n],h=a.id.toString(),l=<span class="built_in">parseFloat</span>(a.val),$=s.TYPE_ADD,u=<span class="literal">null</span>!=a.calc?a.calc.toString():<span class="string">&quot;add&quot;</span>;<span class="keyword">if</span>(($=<span class="string">&quot;add&quot;</span>===u?s.TYPE_ADD:<span class="string">&quot;mult&quot;</span>===u?s.TYPE_MULT:<span class="string">&quot;set&quot;</span>===u?s.TYPE_SET:s.TYPE_ADD)==s.TYPE_ADD)l-=p=<span class="literal">null</span>==a.def?<span class="number">0</span>:<span class="built_in">parseFloat</span>(a.def);<span class="keyword">else</span> <span class="keyword">if</span>($==s.TYPE_MULT)&#123;<span class="keyword">var</span> p;<span class="number">0</span>==(p=<span class="literal">null</span>==a.def?<span class="number">1</span>:<span class="built_in">parseFloat</span>(a.def))&amp;&amp;(p=<span class="number">1</span>),l/=p&#125;<span class="keyword">var</span> c=<span class="keyword">new</span> _;c.id=h,c.type=$,c.value=l,e.paramList.push(c)&#125;<span class="keyword">return</span> e&#125;,s.prototype.updateParamExe=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="built_in">this</span>.paramList.length-<span class="number">1</span>;o&gt;=<span class="number">0</span>;--o)&#123;<span class="keyword">var</span> n=<span class="built_in">this</span>.paramList[o];n.type==s.TYPE_ADD?t.addToParamFloat(n.id,n.value,i):n.type==s.TYPE_MULT?t.multParamFloat(n.id,n.value,i):n.type==s.TYPE_SET&amp;&amp;t.setParamFloat(n.id,n.value,i)&#125;&#125;,a.prototype.calcNextBlink=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> r.UtSystem.getUserTimeMSec()+<span class="built_in">Math</span>.random()*(<span class="number">2</span>*<span class="built_in">this</span>.blinkIntervalMsec-<span class="number">1</span>)&#125;,a.prototype.setInterval=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.blinkIntervalMsec=t&#125;,a.prototype.setEyeMotion=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="built_in">this</span>.closingMotionMsec=t,<span class="built_in">this</span>.closedMotionMsec=e,<span class="built_in">this</span>.openingMotionMsec=i&#125;,a.prototype.updateParam=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e,i=r.UtSystem.getUserTimeMSec(),o=<span class="number">0</span>;<span class="keyword">switch</span>(<span class="built_in">this</span>.eyeState)&#123;<span class="keyword">case</span> h.STATE_CLOSING:(o=(i-<span class="built_in">this</span>.stateStartTime)/<span class="built_in">this</span>.closingMotionMsec)&gt;=<span class="number">1</span>&amp;&amp;(o=<span class="number">1</span>,<span class="built_in">this</span>.eyeState=h.STATE_CLOSED,<span class="built_in">this</span>.stateStartTime=i),e=<span class="number">1</span>-o;<span class="keyword">break</span>;<span class="keyword">case</span> h.STATE_CLOSED:(o=(i-<span class="built_in">this</span>.stateStartTime)/<span class="built_in">this</span>.closedMotionMsec)&gt;=<span class="number">1</span>&amp;&amp;(<span class="built_in">this</span>.eyeState=h.STATE_OPENING,<span class="built_in">this</span>.stateStartTime=i),e=<span class="number">0</span>;<span class="keyword">break</span>;<span class="keyword">case</span> h.STATE_OPENING:(o=(i-<span class="built_in">this</span>.stateStartTime)/<span class="built_in">this</span>.openingMotionMsec)&gt;=<span class="number">1</span>&amp;&amp;(o=<span class="number">1</span>,<span class="built_in">this</span>.eyeState=h.STATE_INTERVAL,<span class="built_in">this</span>.nextBlinkTime=<span class="built_in">this</span>.calcNextBlink()),e=o;<span class="keyword">break</span>;<span class="keyword">case</span> h.STATE_INTERVAL:<span class="built_in">this</span>.nextBlinkTime&lt;i&amp;&amp;(<span class="built_in">this</span>.eyeState=h.STATE_CLOSING,<span class="built_in">this</span>.stateStartTime=i),e=<span class="number">1</span>;<span class="keyword">break</span>;<span class="keyword">case</span> h.STATE_FIRST:<span class="keyword">default</span>:<span class="built_in">this</span>.eyeState=h.STATE_INTERVAL,<span class="built_in">this</span>.nextBlinkTime=<span class="built_in">this</span>.calcNextBlink(),e=<span class="number">1</span>&#125;<span class="built_in">this</span>.closeIfZero||(e=-e),t.setParamFloat(<span class="built_in">this</span>.eyeID_L,e),t.setParamFloat(<span class="built_in">this</span>.eyeID_R,e)&#125;;<span class="keyword">var</span> h=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;<span class="function"><span class="keyword">function</span> <span class="title">l</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.tr=<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">16</span>),<span class="built_in">this</span>.identity()&#125;<span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">t,e</span>)</span>&#123;l.prototype.constructor.call(<span class="built_in">this</span>),<span class="built_in">this</span>.width=t,<span class="built_in">this</span>.height=e&#125;<span class="function"><span class="keyword">function</span> <span class="title">u</span>(<span class="params"></span>)</span>&#123;r.MotionQueueManager.prototype.constructor.call(<span class="built_in">this</span>),<span class="built_in">this</span>.currentPriority=<span class="literal">null</span>,<span class="built_in">this</span>.reservePriority=<span class="literal">null</span>,<span class="built_in">this</span>.super=r.MotionQueueManager.prototype&#125;<span class="function"><span class="keyword">function</span> <span class="title">p</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.physicsList=<span class="keyword">new</span> <span class="built_in">Array</span>,<span class="built_in">this</span>.startTimeMSec=r.UtSystem.getUserTimeMSec()&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.lastTime=<span class="number">0</span>,<span class="built_in">this</span>.lastModel=<span class="literal">null</span>,<span class="built_in">this</span>.partsGroups=<span class="keyword">new</span> <span class="built_in">Array</span>&#125;<span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.paramIndex=-<span class="number">1</span>,<span class="built_in">this</span>.partsIndex=-<span class="number">1</span>,<span class="built_in">this</span>.link=<span class="literal">null</span>,<span class="built_in">this</span>.id=t&#125;<span class="function"><span class="keyword">function</span> <span class="title">g</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.EPSILON=<span class="number">.01</span>,<span class="built_in">this</span>.faceTargetX=<span class="number">0</span>,<span class="built_in">this</span>.faceTargetY=<span class="number">0</span>,<span class="built_in">this</span>.faceX=<span class="number">0</span>,<span class="built_in">this</span>.faceY=<span class="number">0</span>,<span class="built_in">this</span>.faceVX=<span class="number">0</span>,<span class="built_in">this</span>.faceVY=<span class="number">0</span>,<span class="built_in">this</span>.lastTimeSec=<span class="number">0</span>&#125;<span class="function"><span class="keyword">function</span> <span class="title">y</span>(<span class="params"></span>)</span>&#123;l.prototype.constructor.call(<span class="built_in">this</span>),<span class="built_in">this</span>.screenLeft=<span class="literal">null</span>,<span class="built_in">this</span>.screenRight=<span class="literal">null</span>,<span class="built_in">this</span>.screenTop=<span class="literal">null</span>,<span class="built_in">this</span>.screenBottom=<span class="literal">null</span>,<span class="built_in">this</span>.maxLeft=<span class="literal">null</span>,<span class="built_in">this</span>.maxRight=<span class="literal">null</span>,<span class="built_in">this</span>.maxTop=<span class="literal">null</span>,<span class="built_in">this</span>.maxBottom=<span class="literal">null</span>&#125;<span class="function"><span class="keyword">function</span> <span class="title">d</span>(<span class="params"></span>)</span>&#123;&#125;h.STATE_FIRST=<span class="string">&quot;STATE_FIRST&quot;</span>,h.STATE_INTERVAL=<span class="string">&quot;STATE_INTERVAL&quot;</span>,h.STATE_CLOSING=<span class="string">&quot;STATE_CLOSING&quot;</span>,h.STATE_CLOSED=<span class="string">&quot;STATE_CLOSED&quot;</span>,h.STATE_OPENING=<span class="string">&quot;STATE_OPENING&quot;</span>,l.mul=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">var</span> r,o,n,s=[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>];<span class="keyword">for</span>(r=<span class="number">0</span>;r&lt;<span class="number">4</span>;r++)<span class="keyword">for</span>(o=<span class="number">0</span>;o&lt;<span class="number">4</span>;o++)<span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">4</span>;n++)s[r+<span class="number">4</span>*o]+=t[r+<span class="number">4</span>*n]*e[n+<span class="number">4</span>*o];<span class="keyword">for</span>(r=<span class="number">0</span>;r&lt;<span class="number">16</span>;r++)i[r]=s[r]&#125;,l.prototype.identity=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;<span class="number">16</span>;t++)<span class="built_in">this</span>.tr[t]=t%<span class="number">5</span>==<span class="number">0</span>?<span class="number">1</span>:<span class="number">0</span>&#125;,l.prototype.getArray=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.tr&#125;,l.prototype.getCopyMatrix=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="built_in">this</span>.tr)&#125;,l.prototype.setMatrix=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(<span class="literal">null</span>!=<span class="built_in">this</span>.tr&amp;&amp;<span class="built_in">this</span>.tr.length==<span class="built_in">this</span>.tr.length)<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;<span class="number">16</span>;e++)<span class="built_in">this</span>.tr[e]=t[e]&#125;,l.prototype.getScaleX=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.tr[<span class="number">0</span>]&#125;,l.prototype.getScaleY=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.tr[<span class="number">5</span>]&#125;,l.prototype.transformX=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.tr[<span class="number">0</span>]*t+<span class="built_in">this</span>.tr[<span class="number">12</span>]&#125;,l.prototype.transformY=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.tr[<span class="number">5</span>]*t+<span class="built_in">this</span>.tr[<span class="number">13</span>]&#125;,l.prototype.invertTransformX=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span>(t-<span class="built_in">this</span>.tr[<span class="number">12</span>])/<span class="built_in">this</span>.tr[<span class="number">0</span>]&#125;,l.prototype.invertTransformY=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span>(t-<span class="built_in">this</span>.tr[<span class="number">13</span>])/<span class="built_in">this</span>.tr[<span class="number">5</span>]&#125;,l.prototype.multTranslate=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,t,e,<span class="number">0</span>,<span class="number">1</span>];l.mul(i,<span class="built_in">this</span>.tr,<span class="built_in">this</span>.tr)&#125;,l.prototype.translate=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>.tr[<span class="number">12</span>]=t,<span class="built_in">this</span>.tr[<span class="number">13</span>]=e&#125;,l.prototype.translateX=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.tr[<span class="number">12</span>]=t&#125;,l.prototype.translateY=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.tr[<span class="number">13</span>]=t&#125;,l.prototype.multScale=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=[t,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,e,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>];l.mul(i,<span class="built_in">this</span>.tr,<span class="built_in">this</span>.tr)&#125;,l.prototype.scale=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>.tr[<span class="number">0</span>]=t,<span class="built_in">this</span>.tr[<span class="number">5</span>]=e&#125;,$.prototype=<span class="keyword">new</span> l,$.prototype.setPosition=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>.translate(t,e)&#125;,$.prototype.setCenterPosition=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=<span class="built_in">this</span>.width*<span class="built_in">this</span>.getScaleX(),r=<span class="built_in">this</span>.height*<span class="built_in">this</span>.getScaleY();<span class="built_in">this</span>.translate(t-i/<span class="number">2</span>,e-r/<span class="number">2</span>)&#125;,$.prototype.top=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.setY(t)&#125;,$.prototype.bottom=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="built_in">this</span>.height*<span class="built_in">this</span>.getScaleY();<span class="built_in">this</span>.translateY(t-e)&#125;,$.prototype.left=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.setX(t)&#125;,$.prototype.right=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="built_in">this</span>.width*<span class="built_in">this</span>.getScaleX();<span class="built_in">this</span>.translateX(t-e)&#125;,$.prototype.centerX=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="built_in">this</span>.width*<span class="built_in">this</span>.getScaleX();<span class="built_in">this</span>.translateX(t-e/<span class="number">2</span>)&#125;,$.prototype.centerY=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="built_in">this</span>.height*<span class="built_in">this</span>.getScaleY();<span class="built_in">this</span>.translateY(t-e/<span class="number">2</span>)&#125;,$.prototype.setX=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.translateX(t)&#125;,$.prototype.setY=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.translateY(t)&#125;,$.prototype.setHeight=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=t/<span class="built_in">this</span>.height,i=-e;<span class="built_in">this</span>.scale(e,i)&#125;,$.prototype.setWidth=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=t/<span class="built_in">this</span>.width,i=-e;<span class="built_in">this</span>.scale(e,i)&#125;,u.prototype=<span class="keyword">new</span> r.MotionQueueManager,u.prototype.getCurrentPriority=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.currentPriority&#125;,u.prototype.getReservePriority=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.reservePriority&#125;,u.prototype.reserveMotion=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span>!(<span class="built_in">this</span>.reservePriority&gt;=t)&amp;&amp;(!(<span class="built_in">this</span>.currentPriority&gt;=t)&amp;&amp;(<span class="built_in">this</span>.reservePriority=t,!<span class="number">0</span>))&#125;,u.prototype.setReservePriority=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.reservePriority=t&#125;,u.prototype.updateParam=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=r.MotionQueueManager.prototype.updateParam.call(<span class="built_in">this</span>,t);<span class="keyword">return</span> <span class="built_in">this</span>.isFinished()&amp;&amp;(<span class="built_in">this</span>.currentPriority=<span class="number">0</span>),e&#125;,u.prototype.startMotionPrio=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> e==<span class="built_in">this</span>.reservePriority&amp;&amp;(<span class="built_in">this</span>.reservePriority=<span class="number">0</span>),<span class="built_in">this</span>.currentPriority=e,<span class="built_in">this</span>.startMotion(t,!<span class="number">1</span>)&#125;,p.load=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="keyword">new</span> p,i=d.getPlatformManager().jsonParseFromBytes(t).physics_hair,o=i.length,n=<span class="number">0</span>;n&lt;o;n++)&#123;<span class="keyword">var</span> s=i[n],_=<span class="keyword">new</span> r.PhysicsHair,a=s.setup,h=<span class="built_in">parseFloat</span>(a.length),l=<span class="built_in">parseFloat</span>(a.regist),$=<span class="built_in">parseFloat</span>(a.mass);_.setup(h,l,$);<span class="keyword">for</span>(<span class="keyword">var</span> u=s.src,c=u.length,f=<span class="number">0</span>;f&lt;c;f++)&#123;<span class="keyword">var</span> g=u[f],y=g.id,m=r.PhysicsHair.Src.SRC_TO_X;<span class="string">&quot;x&quot;</span>===(L=g.ptype)?m=r.PhysicsHair.Src.SRC_TO_X:<span class="string">&quot;y&quot;</span>===L?m=r.PhysicsHair.Src.SRC_TO_Y:<span class="string">&quot;angle&quot;</span>===L?m=r.PhysicsHair.Src.SRC_TO_G_ANGLE:r.UtDebug.error(<span class="string">&quot;live2d&quot;</span>,<span class="string">&quot;Invalid parameter:PhysicsHair.Src&quot;</span>);<span class="keyword">var</span> T=<span class="built_in">parseFloat</span>(g.scale),P=<span class="built_in">parseFloat</span>(g.weight);_.addSrcParam(m,y,T,P)&#125;<span class="keyword">var</span> S=s.targets,v=S.length;<span class="keyword">for</span>(f=<span class="number">0</span>;f&lt;v;f++)&#123;<span class="keyword">var</span> L,M=S[f];y=M.id,m=r.PhysicsHair.Target.TARGET_FROM_ANGLE;<span class="string">&quot;angle&quot;</span>===(L=M.ptype)?m=r.PhysicsHair.Target.TARGET_FROM_ANGLE:<span class="string">&quot;angle_v&quot;</span>===L?m=r.PhysicsHair.Target.TARGET_FROM_ANGLE_V:r.UtDebug.error(<span class="string">&quot;live2d&quot;</span>,<span class="string">&quot;Invalid parameter:PhysicsHair.Target&quot;</span>);T=<span class="built_in">parseFloat</span>(M.scale),P=<span class="built_in">parseFloat</span>(M.weight);_.addTargetParam(m,y,T,P)&#125;e.physicsList.push(_)&#125;<span class="keyword">return</span> e&#125;,p.prototype.updateParam=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=r.UtSystem.getUserTimeMSec()-<span class="built_in">this</span>.startTimeMSec,i=<span class="number">0</span>;i&lt;<span class="built_in">this</span>.physicsList.length;i++)<span class="built_in">this</span>.physicsList[i].update(t,e)&#125;,c.load=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="keyword">new</span> c,i=d.getPlatformManager().jsonParseFromBytes(t).parts_visible,r=i.length,o=<span class="number">0</span>;o&lt;r;o++)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> n=i[o].group,s=n.length,_=<span class="keyword">new</span> <span class="built_in">Array</span>,a=<span class="number">0</span>;a&lt;s;a++)&#123;<span class="keyword">var</span> h=n[a],l=<span class="keyword">new</span> f(h.id);<span class="keyword">if</span>(_[a]=l,<span class="literal">null</span>!=h.link)&#123;<span class="keyword">var</span> $=h.link,u=$.length;l.link=<span class="keyword">new</span> <span class="built_in">Array</span>;<span class="keyword">for</span>(<span class="keyword">var</span> p=<span class="number">0</span>;p&lt;u;p++)&#123;<span class="keyword">var</span> g=<span class="keyword">new</span> f($[p]);l.link.push(g)&#125;&#125;&#125;e.partsGroups.push(_)&#125;<span class="keyword">return</span> e&#125;,c.prototype.updateParam=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(<span class="literal">null</span>!=t)&#123;t!=<span class="built_in">this</span>.lastModel&amp;&amp;<span class="built_in">this</span>.initParam(t),<span class="built_in">this</span>.lastModel=t;<span class="keyword">var</span> e=r.UtSystem.getUserTimeMSec(),i=<span class="number">0</span>==<span class="built_in">this</span>.lastTime?<span class="number">0</span>:(e-<span class="built_in">this</span>.lastTime)/<span class="number">1e3</span>;<span class="built_in">this</span>.lastTime=e,i&lt;<span class="number">0</span>&amp;&amp;(i=<span class="number">0</span>);<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;<span class="built_in">this</span>.partsGroups.length;o++)<span class="built_in">this</span>.normalizePartsOpacityGroup(t,<span class="built_in">this</span>.partsGroups[o],i),<span class="built_in">this</span>.copyOpacityOtherParts(t,<span class="built_in">this</span>.partsGroups[o])&#125;&#125;,c.prototype.initParam=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(<span class="literal">null</span>!=t)<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;<span class="built_in">this</span>.partsGroups.length;e++)<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="built_in">this</span>.partsGroups[e],r=<span class="number">0</span>;r&lt;i.length;r++)&#123;i[r].initIndex(t);<span class="keyword">var</span> o=i[r].partsIndex,n=i[r].paramIndex;<span class="keyword">if</span>(!(o&lt;<span class="number">0</span>))&#123;<span class="keyword">var</span> s=<span class="number">0</span>!=t.getParamFloat(n);<span class="keyword">if</span>(t.setPartsOpacity(o,s?<span class="number">1</span>:<span class="number">0</span>),t.setParamFloat(n,s?<span class="number">1</span>:<span class="number">0</span>),<span class="literal">null</span>!=i[r].link)<span class="keyword">for</span>(<span class="keyword">var</span> _=<span class="number">0</span>;_&lt;i[r].link.length;_++)i[r].link[_].initIndex(t)&#125;&#125;&#125;,c.prototype.normalizePartsOpacityGroup=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> r=-<span class="number">1</span>,o=<span class="number">1</span>,n=<span class="number">0</span>;n&lt;e.length;n++)&#123;<span class="keyword">var</span> s=e[n].partsIndex,_=e[n].paramIndex;<span class="keyword">if</span>(!(s&lt;<span class="number">0</span>)&amp;&amp;<span class="number">0</span>!=t.getParamFloat(_))&#123;<span class="keyword">if</span>(r&gt;=<span class="number">0</span>)<span class="keyword">break</span>;r=n,o=t.getPartsOpacity(s),(o+=i/<span class="number">.5</span>)&gt;<span class="number">1</span>&amp;&amp;(o=<span class="number">1</span>)&#125;&#125;r&lt;<span class="number">0</span>&amp;&amp;(r=<span class="number">0</span>,o=<span class="number">1</span>);<span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;e.length;n++)&#123;<span class="keyword">if</span>(!((s=e[n].partsIndex)&lt;<span class="number">0</span>))<span class="keyword">if</span>(r==n)t.setPartsOpacity(s,o);<span class="keyword">else</span>&#123;<span class="keyword">var</span> a,h=t.getPartsOpacity(s);(<span class="number">1</span>-(a=o&lt;<span class="number">.5</span>?-<span class="number">.5</span>*o/<span class="number">.5</span>+<span class="number">1</span>:<span class="number">.5</span>*(<span class="number">1</span>-o)/<span class="number">.5</span>))*(<span class="number">1</span>-o)&gt;<span class="number">.15</span>&amp;&amp;(a=<span class="number">1</span>-<span class="number">.15</span>/(<span class="number">1</span>-o)),h&gt;a&amp;&amp;(h=a),t.setPartsOpacity(s,h)&#125;&#125;&#125;,c.prototype.copyOpacityOtherParts=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;e.length;i++)&#123;<span class="keyword">var</span> r=e[i];<span class="keyword">if</span>(<span class="literal">null</span>!=r.link&amp;&amp;!(r.partsIndex&lt;<span class="number">0</span>))<span class="keyword">for</span>(<span class="keyword">var</span> o=t.getPartsOpacity(r.partsIndex),n=<span class="number">0</span>;n&lt;r.link.length;n++)&#123;<span class="keyword">var</span> s=r.link[n];s.partsIndex&lt;<span class="number">0</span>||t.setPartsOpacity(s.partsIndex,o)&#125;&#125;&#125;,f.prototype.initIndex=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.paramIndex=t.getParamIndex(<span class="string">&quot;VISIBLE:&quot;</span>+<span class="built_in">this</span>.id),<span class="built_in">this</span>.partsIndex=t.getPartsDataIndex(r.PartsDataID.getID(<span class="built_in">this</span>.id)),t.setParamFloat(<span class="built_in">this</span>.paramIndex,<span class="number">1</span>)&#125;,g.FRAME_RATE=<span class="number">60</span>,g.prototype.setPoint=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>.faceTargetX=t,<span class="built_in">this</span>.faceTargetY=e&#125;,g.prototype.getX=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.faceX&#125;,g.prototype.getY=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.faceY&#125;,g.prototype.update=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="number">40</span>/<span class="number">7.5</span>/g.FRAME_RATE;<span class="keyword">if</span>(<span class="number">0</span>!=<span class="built_in">this</span>.lastTimeSec)&#123;<span class="keyword">var</span> e=r.UtSystem.getUserTimeMSec(),i=(e-<span class="built_in">this</span>.lastTimeSec)*g.FRAME_RATE/<span class="number">1e3</span>;<span class="built_in">this</span>.lastTimeSec=e;<span class="keyword">var</span> o=i*t/(<span class="number">.15</span>*g.FRAME_RATE),n=<span class="built_in">this</span>.faceTargetX-<span class="built_in">this</span>.faceX,s=<span class="built_in">this</span>.faceTargetY-<span class="built_in">this</span>.faceY;<span class="keyword">if</span>(!(<span class="built_in">Math</span>.abs(n)&lt;=<span class="built_in">this</span>.EPSILON&amp;&amp;<span class="built_in">Math</span>.abs(s)&lt;=<span class="built_in">this</span>.EPSILON))&#123;<span class="keyword">var</span> _=<span class="built_in">Math</span>.sqrt(n*n+s*s),a=t*s/_,h=t*n/_-<span class="built_in">this</span>.faceVX,l=a-<span class="built_in">this</span>.faceVY,$=<span class="built_in">Math</span>.sqrt(h*h+l*l);($&lt;-o||$&gt;o)&amp;&amp;(h*=o/$,l*=o/$,$=o),<span class="built_in">this</span>.faceVX+=h,<span class="built_in">this</span>.faceVY+=l;<span class="keyword">var</span> u=<span class="number">.5</span>*(<span class="built_in">Math</span>.sqrt(o*o+<span class="number">16</span>*o*_-<span class="number">8</span>*o*_)-o),p=<span class="built_in">Math</span>.sqrt(<span class="built_in">this</span>.faceVX*<span class="built_in">this</span>.faceVX+<span class="built_in">this</span>.faceVY*<span class="built_in">this</span>.faceVY);p&gt;u&amp;&amp;(<span class="built_in">this</span>.faceVX*=u/p,<span class="built_in">this</span>.faceVY*=u/p),<span class="built_in">this</span>.faceX+=<span class="built_in">this</span>.faceVX,<span class="built_in">this</span>.faceY+=<span class="built_in">this</span>.faceVY&#125;&#125;<span class="keyword">else</span> <span class="built_in">this</span>.lastTimeSec=r.UtSystem.getUserTimeMSec()&#125;,y.prototype=<span class="keyword">new</span> l,y.prototype.adjustTranslate=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>.tr[<span class="number">0</span>]*<span class="built_in">this</span>.maxLeft+(<span class="built_in">this</span>.tr[<span class="number">12</span>]+t)&gt;<span class="built_in">this</span>.screenLeft&amp;&amp;(t=<span class="built_in">this</span>.screenLeft-<span class="built_in">this</span>.tr[<span class="number">0</span>]*<span class="built_in">this</span>.maxLeft-<span class="built_in">this</span>.tr[<span class="number">12</span>]),<span class="built_in">this</span>.tr[<span class="number">0</span>]*<span class="built_in">this</span>.maxRight+(<span class="built_in">this</span>.tr[<span class="number">12</span>]+t)&lt;<span class="built_in">this</span>.screenRight&amp;&amp;(t=<span class="built_in">this</span>.screenRight-<span class="built_in">this</span>.tr[<span class="number">0</span>]*<span class="built_in">this</span>.maxRight-<span class="built_in">this</span>.tr[<span class="number">12</span>]),<span class="built_in">this</span>.tr[<span class="number">5</span>]*<span class="built_in">this</span>.maxTop+(<span class="built_in">this</span>.tr[<span class="number">13</span>]+e)&lt;<span class="built_in">this</span>.screenTop&amp;&amp;(e=<span class="built_in">this</span>.screenTop-<span class="built_in">this</span>.tr[<span class="number">5</span>]*<span class="built_in">this</span>.maxTop-<span class="built_in">this</span>.tr[<span class="number">13</span>]),<span class="built_in">this</span>.tr[<span class="number">5</span>]*<span class="built_in">this</span>.maxBottom+(<span class="built_in">this</span>.tr[<span class="number">13</span>]+e)&gt;<span class="built_in">this</span>.screenBottom&amp;&amp;(e=<span class="built_in">this</span>.screenBottom-<span class="built_in">this</span>.tr[<span class="number">5</span>]*<span class="built_in">this</span>.maxBottom-<span class="built_in">this</span>.tr[<span class="number">13</span>]);<span class="keyword">var</span> i=[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,t,e,<span class="number">0</span>,<span class="number">1</span>];l.mul(i,<span class="built_in">this</span>.tr,<span class="built_in">this</span>.tr)&#125;,y.prototype.adjustScale=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="built_in">this</span>.tr[<span class="number">0</span>];<span class="keyword">var</span> r=[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,t,e,<span class="number">0</span>,<span class="number">1</span>],o=[i,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,i,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],n=[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,-t,-e,<span class="number">0</span>,<span class="number">1</span>];l.mul(n,<span class="built_in">this</span>.tr,<span class="built_in">this</span>.tr),l.mul(o,<span class="built_in">this</span>.tr,<span class="built_in">this</span>.tr),l.mul(r,<span class="built_in">this</span>.tr,<span class="built_in">this</span>.tr)&#125;,y.prototype.setScreenRect=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="built_in">this</span>.screenLeft=t,<span class="built_in">this</span>.screenRight=e,<span class="built_in">this</span>.screenTop=r,<span class="built_in">this</span>.screenBottom=i&#125;,y.prototype.setMaxScreenRect=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="built_in">this</span>.maxLeft=t,<span class="built_in">this</span>.maxRight=e,<span class="built_in">this</span>.maxTop=r,<span class="built_in">this</span>.maxBottom=i&#125;,y.prototype.getScreenLeft=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.screenLeft&#125;,y.prototype.getScreenRight=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.screenRight&#125;,y.prototype.getScreenBottom=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.screenBottom&#125;,y.prototype.getScreenTop=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.screenTop&#125;,y.prototype.getMaxLeft=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.maxLeft&#125;,y.prototype.getMaxRight=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.maxRight&#125;,y.prototype.getMaxBottom=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.maxBottom&#125;,y.prototype.getMaxTop=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.maxTop&#125;,d.platformManager=<span class="literal">null</span>,d.getPlatformManager=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> d.platformManager&#125;,d.setPlatformManager=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;d.platformManager=t&#125;,e.L2DTargetPoint=g,e.Live2DFramework=d,e.L2DViewMatrix=y,e.L2DPose=c,e.L2DPartsParam=f,e.L2DPhysics=p,e.L2DMotionManager=u,e.L2DModelMatrix=$,e.L2DMatrix44=l,e.EYE_STATE=h,e.L2DEyeBlink=a,e.L2DExpressionParam=_,e.L2DExpressionMotion=s,e.L2DBaseModel=o&#125;,<span class="number">82</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="string">&quot;use strict&quot;</span>;<span class="built_in">Object</span>.defineProperty(e,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;);e.cDefine=&#123;<span class="attr">VIEW_LOGICAL_LEFT</span>:-<span class="number">1</span>,<span class="attr">VIEW_LOGICAL_RIGHT</span>:<span class="number">1</span>,<span class="attr">VIEW_LOGICAL_MAX_LEFT</span>:-<span class="number">2</span>,<span class="attr">VIEW_LOGICAL_MAX_RIGHT</span>:<span class="number">2</span>,<span class="attr">VIEW_LOGICAL_MAX_BOTTOM</span>:-<span class="number">2</span>,<span class="attr">VIEW_LOGICAL_MAX_TOP</span>:<span class="number">2</span>,<span class="attr">PRIORITY_NONE</span>:<span class="number">0</span>,<span class="attr">PRIORITY_IDLE</span>:<span class="number">1</span>,<span class="attr">PRIORITY_NORMAL</span>:<span class="number">2</span>,<span class="attr">PRIORITY_FORCE</span>:<span class="number">3</span>,<span class="attr">MOTION_GROUP_IDLE</span>:<span class="string">&quot;idle&quot;</span>,<span class="attr">MOTION_GROUP_TAP_BODY</span>:<span class="string">&quot;tap_body&quot;</span>,<span class="attr">MOTION_GROUP_FLICK_HEAD</span>:<span class="string">&quot;flick_head&quot;</span>,<span class="attr">MOTION_GROUP_PINCH_IN</span>:<span class="string">&quot;pinch_in&quot;</span>,<span class="attr">MOTION_GROUP_PINCH_OUT</span>:<span class="string">&quot;pinch_out&quot;</span>,<span class="attr">MOTION_GROUP_SHAKE</span>:<span class="string">&quot;shake&quot;</span>,<span class="attr">HIT_AREA_HEAD</span>:<span class="string">&quot;head&quot;</span>,<span class="attr">HIT_AREA_BODY</span>:<span class="string">&quot;body&quot;</span>&#125;&#125;,<span class="number">83</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="string">&quot;use strict&quot;</span>;<span class="built_in">Object</span>.defineProperty(e,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),e.currCanvas=e.currWebGL=e.createElement=<span class="keyword">void</span> <span class="number">0</span>;<span class="keyword">var</span> r=i(<span class="number">26</span>),o=i(<span class="number">27</span>),n=i(<span class="number">40</span>),s=<span class="keyword">void</span> <span class="number">0</span>,_=<span class="keyword">void</span> <span class="number">0</span>;e.createElement=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="built_in">document</span>.getElementById(r.config.name.div);<span class="literal">null</span>!==t&amp;&amp;<span class="built_in">document</span>.body.removeChild(t);<span class="keyword">var</span> i=<span class="built_in">document</span>.createElement(<span class="string">&quot;div&quot;</span>);i.id=r.config.name.div,i.className=<span class="string">&quot;live2d-widget-container&quot;</span>,i.style.setProperty(<span class="string">&quot;position&quot;</span>,<span class="string">&quot;fixed&quot;</span>),i.style.setProperty(r.config.display.position,r.config.display.hOffset+<span class="string">&quot;px&quot;</span>),i.style.setProperty(<span class="string">&quot;bottom&quot;</span>,r.config.display.vOffset+<span class="string">&quot;px&quot;</span>),i.style.setProperty(<span class="string">&quot;width&quot;</span>,r.config.display.width+<span class="string">&quot;px&quot;</span>),i.style.setProperty(<span class="string">&quot;height&quot;</span>,r.config.display.height+<span class="string">&quot;px&quot;</span>),i.style.setProperty(<span class="string">&quot;z-index&quot;</span>,<span class="number">99999</span>),i.style.setProperty(<span class="string">&quot;opacity&quot;</span>,r.config.react.opacity),i.style.setProperty(<span class="string">&quot;pointer-events&quot;</span>,<span class="string">&quot;none&quot;</span>),<span class="built_in">document</span>.body.appendChild(i),o.L2Dwidget.emit(<span class="string">&quot;create-container&quot;</span>,i),r.config.dialog.enable&amp;&amp;(<span class="number">0</span>,n.createDialogElement)(i);<span class="keyword">var</span> a=<span class="built_in">document</span>.createElement(<span class="string">&quot;canvas&quot;</span>);a.setAttribute(<span class="string">&quot;id&quot;</span>,r.config.name.canvas),a.setAttribute(<span class="string">&quot;width&quot;</span>,r.config.display.width*r.config.display.superSample),a.setAttribute(<span class="string">&quot;height&quot;</span>,r.config.display.height*r.config.display.superSample),a.style.setProperty(<span class="string">&quot;position&quot;</span>,<span class="string">&quot;absolute&quot;</span>),a.style.setProperty(<span class="string">&quot;left&quot;</span>,<span class="string">&quot;0px&quot;</span>),a.style.setProperty(<span class="string">&quot;top&quot;</span>,<span class="string">&quot;0px&quot;</span>),a.style.setProperty(<span class="string">&quot;width&quot;</span>,r.config.display.width+<span class="string">&quot;px&quot;</span>),a.style.setProperty(<span class="string">&quot;height&quot;</span>,r.config.display.height+<span class="string">&quot;px&quot;</span>),r.config.dev.border&amp;&amp;a.style.setProperty(<span class="string">&quot;border&quot;</span>,<span class="string">&quot;dashed 1px #CCC&quot;</span>),i.appendChild(a),e.currCanvas=_=<span class="built_in">document</span>.getElementById(r.config.name.canvas),o.L2Dwidget.emit(<span class="string">&quot;create-canvas&quot;</span>,a),<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=[<span class="string">&quot;webgl2&quot;</span>,<span class="string">&quot;webgl&quot;</span>,<span class="string">&quot;experimental-webgl2&quot;</span>,<span class="string">&quot;experimental-webgl&quot;</span>,<span class="string">&quot;webkit-3d&quot;</span>,<span class="string">&quot;moz-webgl&quot;</span>],i=<span class="number">0</span>;i&lt;t.length;i++)<span class="keyword">try</span>&#123;<span class="keyword">var</span> r=_.getContext(t[i],&#123;<span class="attr">alpha</span>:!<span class="number">0</span>,<span class="attr">antialias</span>:!<span class="number">0</span>,<span class="attr">premultipliedAlpha</span>:!<span class="number">0</span>,<span class="attr">failIfMajorPerformanceCaveat</span>:!<span class="number">1</span>&#125;);r&amp;&amp;(e.currWebGL=s=r)&#125;<span class="keyword">catch</span>(t)&#123;&#125;s||(<span class="built_in">console</span>.error(<span class="string">&quot;Live2D widgets: Failed to create WebGL context.&quot;</span>),<span class="built_in">window</span>.WebGLRenderingContext||<span class="built_in">console</span>.error(<span class="string">&quot;Your browser may not support WebGL, check https://get.webgl.org/ for futher information.&quot;</span>))&#125;()&#125;,e.currWebGL=s,e.currCanvas=_&#125;,<span class="number">84</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="string">&quot;use strict&quot;</span>;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;&#125;<span class="built_in">Object</span>.defineProperty(e,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),e.MatrixStack=r,r.matrixStack=[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],r.depth=<span class="number">0</span>,r.currentMatrix=[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],r.tmp=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">16</span>),r.reset=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.depth=<span class="number">0</span>&#125;,r.loadIdentity=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;<span class="number">16</span>;t++)<span class="built_in">this</span>.currentMatrix[t]=t%<span class="number">5</span>==<span class="number">0</span>?<span class="number">1</span>:<span class="number">0</span>&#125;,r.push=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="number">16</span>*(<span class="built_in">this</span>.depth+<span class="number">1</span>);<span class="built_in">this</span>.matrixStack.length&lt;t+<span class="number">16</span>&amp;&amp;(<span class="built_in">this</span>.matrixStack.length=t+<span class="number">16</span>);<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;<span class="number">16</span>;e++)<span class="built_in">this</span>.matrixStack[t+e]=<span class="built_in">this</span>.currentMatrix[e];<span class="built_in">this</span>.depth++&#125;,r.pop=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.depth--,<span class="built_in">this</span>.depth&lt;<span class="number">0</span>&amp;&amp;(myError(<span class="string">&quot;Invalid matrix stack.&quot;</span>),<span class="built_in">this</span>.depth=<span class="number">0</span>);<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">16</span>*<span class="built_in">this</span>.depth,e=<span class="number">0</span>;e&lt;<span class="number">16</span>;e++)<span class="built_in">this</span>.currentMatrix[e]=<span class="built_in">this</span>.matrixStack[t+e]&#125;,r.getMatrix=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.currentMatrix&#125;,r.multMatrix=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e,i,r;<span class="keyword">for</span>(e=<span class="number">0</span>;e&lt;<span class="number">16</span>;e++)<span class="built_in">this</span>.tmp[e]=<span class="number">0</span>;<span class="keyword">for</span>(e=<span class="number">0</span>;e&lt;<span class="number">4</span>;e++)<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)<span class="keyword">for</span>(r=<span class="number">0</span>;r&lt;<span class="number">4</span>;r++)<span class="built_in">this</span>.tmp[e+<span class="number">4</span>*i]+=<span class="built_in">this</span>.currentMatrix[e+<span class="number">4</span>*r]*t[r+<span class="number">4</span>*i];<span class="keyword">for</span>(e=<span class="number">0</span>;e&lt;<span class="number">16</span>;e++)<span class="built_in">this</span>.currentMatrix[e]=<span class="built_in">this</span>.tmp[e]&#125;&#125;,<span class="number">85</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;t.exports=&#123;<span class="attr">import</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;System.import cannot be used indirectly&quot;</span>)&#125;&#125;&#125;,<span class="number">86</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="string">&quot;use strict&quot;</span>;<span class="built_in">Object</span>.defineProperty(e,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),e.cManager=<span class="keyword">void</span> <span class="number">0</span>;<span class="keyword">var</span> r=i(<span class="number">81</span>),o=i(<span class="number">87</span>),n=i(<span class="number">88</span>),s=i(<span class="number">82</span>);<span class="function"><span class="keyword">function</span> <span class="title">_</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.eventemitter=t,<span class="built_in">this</span>.models=[],<span class="built_in">this</span>.count=-<span class="number">1</span>,<span class="built_in">this</span>.reloadFlg=!<span class="number">1</span>,r.Live2DFramework.setPlatformManager(<span class="keyword">new</span> o.PlatformManager)&#125;_.prototype.createModel=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="keyword">new</span> n.cModel;<span class="keyword">return</span> <span class="built_in">this</span>.models.push(t),t&#125;,_.prototype.changeModel=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>.reloadFlg&amp;&amp;(<span class="built_in">this</span>.reloadFlg=!<span class="number">1</span>,<span class="built_in">this</span>.releaseModel(<span class="number">0</span>,t),<span class="built_in">this</span>.createModel(),<span class="built_in">this</span>.models[<span class="number">0</span>].load(t,e))&#125;,_.prototype.getModel=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> t&gt;=<span class="built_in">this</span>.models.length?<span class="literal">null</span>:<span class="built_in">this</span>.models[t]&#125;,_.prototype.releaseModel=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="built_in">this</span>.models.length&lt;=t||(<span class="built_in">this</span>.models[t].release(e),<span class="keyword">delete</span> <span class="built_in">this</span>.models[t],<span class="built_in">this</span>.models.splice(t,<span class="number">1</span>))&#125;,_.prototype.numModels=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.models.length&#125;,_.prototype.setDrag=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="built_in">this</span>.models.length;i++)<span class="built_in">this</span>.models[i].setDrag(t,e)&#125;,_.prototype.tapEvent=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;s.cDefine.DEBUG_LOG&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;tapEvent view x:&quot;</span>+t+<span class="string">&quot; y:&quot;</span>+e);<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="built_in">this</span>.models.length;i++)<span class="built_in">this</span>.models[i].hitTest(s.cDefine.HIT_AREA_HEAD,t,e)?(<span class="built_in">this</span>.eventemitter.emit(<span class="string">&quot;tapface&quot;</span>),s.cDefine.DEBUG_LOG&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;Tap face.&quot;</span>),<span class="built_in">this</span>.models[i].setRandomExpression()):<span class="built_in">this</span>.models[i].hitTest(s.cDefine.HIT_AREA_BODY,t,e)&amp;&amp;(<span class="built_in">this</span>.eventemitter.emit(<span class="string">&quot;tapbody&quot;</span>),s.cDefine.DEBUG_LOG&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;Tap body. models[&quot;</span>+i+<span class="string">&quot;]&quot;</span>),<span class="built_in">this</span>.models[i].startRandomMotion(s.cDefine.MOTION_GROUP_TAP_BODY,s.cDefine.PRIORITY_NORMAL));<span class="keyword">return</span>!<span class="number">0</span>&#125;,e.cManager=_&#125;,<span class="number">87</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="string">&quot;use strict&quot;</span>;<span class="built_in">Object</span>.defineProperty(e,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),e.PlatformManager=n;<span class="keyword">var</span> r=i(<span class="number">83</span>),o=i(<span class="number">80</span>);<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;&#125;n.prototype.loadBytes=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=<span class="keyword">new</span> XMLHttpRequest;i.open(<span class="string">&quot;GET&quot;</span>,t,!<span class="number">0</span>),i.responseType=<span class="string">&quot;arraybuffer&quot;</span>,i.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">switch</span>(i.status)&#123;<span class="keyword">case</span> <span class="number">200</span>:e(i.response);<span class="keyword">break</span>;<span class="keyword">default</span>:<span class="built_in">console</span>.error(<span class="string">&quot;Failed to load (&quot;</span>+i.status+<span class="string">&quot;) : &quot;</span>+t)&#125;&#125;,i.send(<span class="literal">null</span>)&#125;,n.prototype.loadString=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">this</span>.loadBytes(t,<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> t&#125;)&#125;,n.prototype.loadLive2DModel=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=<span class="literal">null</span>;<span class="built_in">this</span>.loadBytes(t,<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;i=o.Live2DModelWebGL.loadModel(t),e(i)&#125;)&#125;,n.prototype.loadTexture=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,o</span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">new</span> Image;n.crossOrigin=<span class="string">&quot;Anonymous&quot;</span>,n.src=i,n.onload=onload,n.onerror=onerror,n.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> i=r.currWebGL,s=i.createTexture();<span class="keyword">if</span>(!s)<span class="keyword">return</span> <span class="built_in">console</span>.error(<span class="string">&quot;Failed to generate gl texture name.&quot;</span>),-<span class="number">1</span>;t.isPremultipliedAlpha()||i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,<span class="number">1</span>),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,<span class="number">1</span>),i.activeTexture(i.TEXTURE0),i.bindTexture(i.TEXTURE_2D,s),i.texImage2D(i.TEXTURE_2D,<span class="number">0</span>,i.RGBA,i.RGBA,i.UNSIGNED_BYTE,n),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.LINEAR),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.LINEAR_MIPMAP_NEAREST),i.generateMipmap(i.TEXTURE_2D),t.setTexture(e,s),s=<span class="literal">null</span>,<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> o&amp;&amp;o()&#125;,n.onerror=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">console</span>.error(<span class="string">&quot;Failed to load image : &quot;</span>+i)&#125;&#125;,n.prototype.jsonParseFromBytes=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e,i=<span class="keyword">new</span> <span class="built_in">Uint8Array</span>(t,<span class="number">0</span>,<span class="number">3</span>);<span class="keyword">return</span> e=<span class="number">239</span>==i[<span class="number">0</span>]&amp;&amp;<span class="number">187</span>==i[<span class="number">1</span>]&amp;&amp;<span class="number">191</span>==i[<span class="number">2</span>]?<span class="built_in">String</span>.fromCharCode.apply(<span class="literal">null</span>,<span class="keyword">new</span> <span class="built_in">Uint8Array</span>(t,<span class="number">3</span>)):<span class="built_in">String</span>.fromCharCode.apply(<span class="literal">null</span>,<span class="keyword">new</span> <span class="built_in">Uint8Array</span>(t)),<span class="built_in">JSON</span>.parse(e)&#125;,n.prototype.log=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="built_in">console</span>.log(t)&#125;&#125;,<span class="number">88</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="string">&quot;use strict&quot;</span>;<span class="built_in">Object</span>.defineProperty(e,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),e.cModel=a;<span class="keyword">var</span> r=i(<span class="number">81</span>),o=i(<span class="number">89</span>),n=i(<span class="number">84</span>),s=i(<span class="number">82</span>),_=i(<span class="number">80</span>);<span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;r.L2DBaseModel.prototype.constructor.call(<span class="built_in">this</span>),<span class="built_in">this</span>.modelHomeDir=<span class="string">&quot;&quot;</span>,<span class="built_in">this</span>.modelSetting=<span class="literal">null</span>,<span class="built_in">this</span>.tmpMatrix=[]&#125;a.prototype=<span class="keyword">new</span> r.L2DBaseModel,a.prototype.load=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="built_in">this</span>.setUpdating(!<span class="number">0</span>),<span class="built_in">this</span>.setInitialized(!<span class="number">1</span>),<span class="built_in">this</span>.modelHomeDir=e.substring(<span class="number">0</span>,e.lastIndexOf(<span class="string">&quot;/&quot;</span>)+<span class="number">1</span>),<span class="built_in">this</span>.modelSetting=<span class="keyword">new</span> o.ModelSettingJson;<span class="keyword">var</span> n=<span class="built_in">this</span>;<span class="built_in">this</span>.modelSetting.loadModelSetting(e,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=n.modelHomeDir+n.modelSetting.getModelFile();n.loadModelData(t,<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;n.modelSetting.getTextureNum();e++)&#123;<span class="keyword">if</span>(<span class="regexp">/^https?:\/\/|^\/\//i</span>.test(n.modelSetting.getTextureFile(e)))<span class="keyword">var</span> o=n.modelSetting.getTextureFile(e);<span class="keyword">else</span> o=n.modelHomeDir+n.modelSetting.getTextureFile(e);n.loadTexture(e,o,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">if</span>(n.isTexLoaded)&#123;<span class="keyword">if</span>(n.modelSetting.getExpressionNum()&gt;<span class="number">0</span>)&#123;n.expressions=&#123;&#125;;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;n.modelSetting.getExpressionNum();t++)&#123;<span class="keyword">var</span> e=n.modelSetting.getExpressionName(t),o=n.modelHomeDir+n.modelSetting.getExpressionFile(t);n.loadExpression(e,o)&#125;&#125;<span class="keyword">else</span> n.expressionManager=<span class="literal">null</span>,n.expressions=&#123;&#125;;<span class="keyword">if</span>(<span class="literal">null</span>==n.eyeBlink&amp;&amp;(n.eyeBlink=<span class="keyword">new</span> r.L2DEyeBlink),<span class="literal">null</span>!=n.modelSetting.getPhysicsFile()?n.loadPhysics(n.modelHomeDir+n.modelSetting.getPhysicsFile()):n.physics=<span class="literal">null</span>,<span class="literal">null</span>!=n.modelSetting.getPoseFile()?n.loadPose(n.modelHomeDir+n.modelSetting.getPoseFile(),<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;n.pose.updateParam(n.live2DModel)&#125;):n.pose=<span class="literal">null</span>,<span class="literal">null</span>!=n.modelSetting.getLayout())&#123;<span class="keyword">var</span> _=n.modelSetting.getLayout();<span class="literal">null</span>!=_.width&amp;&amp;n.modelMatrix.setWidth(_.width),<span class="literal">null</span>!=_.height&amp;&amp;n.modelMatrix.setHeight(_.height),<span class="literal">null</span>!=_.x&amp;&amp;n.modelMatrix.setX(_.x),<span class="literal">null</span>!=_.y&amp;&amp;n.modelMatrix.setY(_.y),<span class="literal">null</span>!=_.center_x&amp;&amp;n.modelMatrix.centerX(_.center_x),<span class="literal">null</span>!=_.center_y&amp;&amp;n.modelMatrix.centerY(_.center_y),<span class="literal">null</span>!=_.top&amp;&amp;n.modelMatrix.top(_.top),<span class="literal">null</span>!=_.bottom&amp;&amp;n.modelMatrix.bottom(_.bottom),<span class="literal">null</span>!=_.left&amp;&amp;n.modelMatrix.left(_.left),<span class="literal">null</span>!=_.right&amp;&amp;n.modelMatrix.right(_.right)&#125;<span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;n.modelSetting.getInitParamNum();t++)n.live2DModel.setParamFloat(n.modelSetting.getInitParamID(t),n.modelSetting.getInitParamValue(t));<span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;n.modelSetting.getInitPartsVisibleNum();t++)n.live2DModel.setPartsOpacity(n.modelSetting.getInitPartsVisibleID(t),n.modelSetting.getInitPartsVisibleValue(t));n.live2DModel.saveParam(),n.preloadMotionGroup(s.cDefine.MOTION_GROUP_IDLE),n.mainMotionManager.stopAllMotions(),n.setUpdating(!<span class="number">1</span>),n.setInitialized(!<span class="number">0</span>),<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> i&amp;&amp;i()&#125;&#125;)&#125;&#125;)&#125;)&#125;,a.prototype.release=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=r.Live2DFramework.getPlatformManager();t.deleteTexture(e.texture)&#125;,a.prototype.preloadMotionGroup=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="built_in">this</span>,i=<span class="number">0</span>;i&lt;<span class="built_in">this</span>.modelSetting.getMotionNum(t);i++)&#123;<span class="keyword">var</span> r=<span class="built_in">this</span>.modelSetting.getMotionFile(t,i);<span class="built_in">this</span>.loadMotion(r,<span class="built_in">this</span>.modelHomeDir+r,<span class="function"><span class="keyword">function</span>(<span class="params">r</span>)</span>&#123;r.setFadeIn(e.modelSetting.getMotionFadeIn(t,i)),r.setFadeOut(e.modelSetting.getMotionFadeOut(t,i))&#125;)&#125;&#125;,a.prototype.update=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">if</span>(<span class="literal">null</span>!=<span class="built_in">this</span>.live2DModel)&#123;<span class="keyword">var</span> t=<span class="number">2</span>*((_.UtSystem.getUserTimeMSec()-<span class="built_in">this</span>.startTimeMSec)/<span class="number">1e3</span>)*<span class="built_in">Math</span>.PI;<span class="built_in">this</span>.mainMotionManager.isFinished()&amp;&amp;<span class="built_in">this</span>.startRandomMotion(s.cDefine.MOTION_GROUP_IDLE,s.cDefine.PRIORITY_IDLE),<span class="built_in">this</span>.live2DModel.loadParam(),<span class="built_in">this</span>.mainMotionManager.updateParam(<span class="built_in">this</span>.live2DModel)||<span class="literal">null</span>!=<span class="built_in">this</span>.eyeBlink&amp;&amp;<span class="built_in">this</span>.eyeBlink.updateParam(<span class="built_in">this</span>.live2DModel),<span class="built_in">this</span>.live2DModel.saveParam(),<span class="literal">null</span>==<span class="built_in">this</span>.expressionManager||<span class="literal">null</span>==<span class="built_in">this</span>.expressions||<span class="built_in">this</span>.expressionManager.isFinished()||<span class="built_in">this</span>.expressionManager.updateParam(<span class="built_in">this</span>.live2DModel),<span class="built_in">this</span>.live2DModel.addToParamFloat(<span class="string">&quot;PARAM_ANGLE_X&quot;</span>,<span class="number">30</span>*<span class="built_in">this</span>.dragX,<span class="number">1</span>),<span class="built_in">this</span>.live2DModel.addToParamFloat(<span class="string">&quot;PARAM_ANGLE_Y&quot;</span>,<span class="number">30</span>*<span class="built_in">this</span>.dragY,<span class="number">1</span>),<span class="built_in">this</span>.live2DModel.addToParamFloat(<span class="string">&quot;PARAM_ANGLE_Z&quot;</span>,<span class="built_in">this</span>.dragX*<span class="built_in">this</span>.dragY*-<span class="number">30</span>,<span class="number">1</span>),<span class="built_in">this</span>.live2DModel.addToParamFloat(<span class="string">&quot;PARAM_BODY_ANGLE_X&quot;</span>,<span class="number">10</span>*<span class="built_in">this</span>.dragX,<span class="number">1</span>),<span class="built_in">this</span>.live2DModel.addToParamFloat(<span class="string">&quot;PARAM_EYE_BALL_X&quot;</span>,<span class="built_in">this</span>.dragX,<span class="number">1</span>),<span class="built_in">this</span>.live2DModel.addToParamFloat(<span class="string">&quot;PARAM_EYE_BALL_Y&quot;</span>,<span class="built_in">this</span>.dragY,<span class="number">1</span>),<span class="built_in">this</span>.live2DModel.addToParamFloat(<span class="string">&quot;PARAM_ANGLE_X&quot;</span>,<span class="built_in">Number</span>(<span class="number">15</span>*<span class="built_in">Math</span>.sin(t/<span class="number">6.5345</span>)),<span class="number">.5</span>),<span class="built_in">this</span>.live2DModel.addToParamFloat(<span class="string">&quot;PARAM_ANGLE_Y&quot;</span>,<span class="built_in">Number</span>(<span class="number">8</span>*<span class="built_in">Math</span>.sin(t/<span class="number">3.5345</span>)),<span class="number">.5</span>),<span class="built_in">this</span>.live2DModel.addToParamFloat(<span class="string">&quot;PARAM_ANGLE_Z&quot;</span>,<span class="built_in">Number</span>(<span class="number">10</span>*<span class="built_in">Math</span>.sin(t/<span class="number">5.5345</span>)),<span class="number">.5</span>),<span class="built_in">this</span>.live2DModel.addToParamFloat(<span class="string">&quot;PARAM_BODY_ANGLE_X&quot;</span>,<span class="built_in">Number</span>(<span class="number">4</span>*<span class="built_in">Math</span>.sin(t/<span class="number">15.5345</span>)),<span class="number">.5</span>),<span class="built_in">this</span>.live2DModel.setParamFloat(<span class="string">&quot;PARAM_BREATH&quot;</span>,<span class="built_in">Number</span>(<span class="number">.5</span>+<span class="number">.5</span>*<span class="built_in">Math</span>.sin(t/<span class="number">3.2345</span>)),<span class="number">1</span>),<span class="literal">null</span>!=<span class="built_in">this</span>.physics&amp;&amp;<span class="built_in">this</span>.physics.updateParam(<span class="built_in">this</span>.live2DModel),<span class="literal">null</span>==<span class="built_in">this</span>.lipSync&amp;&amp;<span class="built_in">this</span>.live2DModel.setParamFloat(<span class="string">&quot;PARAM_MOUTH_OPEN_Y&quot;</span>,<span class="built_in">this</span>.lipSyncValue),<span class="literal">null</span>!=<span class="built_in">this</span>.pose&amp;&amp;<span class="built_in">this</span>.pose.updateParam(<span class="built_in">this</span>.live2DModel),<span class="built_in">this</span>.live2DModel.update()&#125;<span class="keyword">else</span> s.cDefine.DEBUG_LOG&amp;&amp;<span class="built_in">console</span>.error(<span class="string">&quot;Failed to update.&quot;</span>)&#125;,a.prototype.setRandomExpression=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=[];<span class="keyword">for</span>(<span class="keyword">var</span> e <span class="keyword">in</span> <span class="built_in">this</span>.expressions)t.push(e);<span class="keyword">var</span> i=<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*t.length);<span class="built_in">this</span>.setExpression(t[i])&#125;,a.prototype.startRandomMotion=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=<span class="built_in">this</span>.modelSetting.getMotionNum(t),r=<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*i);<span class="built_in">this</span>.startMotion(t,r,e)&#125;,a.prototype.startMotion=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">var</span> r=<span class="built_in">this</span>.modelSetting.getMotionFile(t,e);<span class="keyword">if</span>(<span class="literal">null</span>!=r&amp;&amp;<span class="string">&quot;&quot;</span>!=r)&#123;<span class="keyword">if</span>(i==s.cDefine.PRIORITY_FORCE)<span class="built_in">this</span>.mainMotionManager.setReservePriority(i);<span class="keyword">else</span> <span class="keyword">if</span>(!<span class="built_in">this</span>.mainMotionManager.reserveMotion(i))<span class="keyword">return</span> <span class="keyword">void</span>(s.cDefine.DEBUG_LOG&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;Motion is running.&quot;</span>));<span class="keyword">var</span> o,n=<span class="built_in">this</span>;<span class="literal">null</span>==<span class="built_in">this</span>.motions[t]?<span class="built_in">this</span>.loadMotion(t,<span class="built_in">this</span>.modelHomeDir+r,<span class="function"><span class="keyword">function</span>(<span class="params">r</span>)</span>&#123;o=r,n.setFadeInFadeOut(t,e,i,o)&#125;):(o=<span class="built_in">this</span>.motions[t],n.setFadeInFadeOut(t,e,i,o))&#125;<span class="keyword">else</span> s.cDefine.DEBUG_LOG&amp;&amp;<span class="built_in">console</span>.error(<span class="string">&quot;Failed to motion.&quot;</span>)&#125;,a.prototype.setFadeInFadeOut=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i,r</span>)</span>&#123;<span class="keyword">var</span> o=<span class="built_in">this</span>.modelSetting.getMotionFile(t,e);<span class="keyword">if</span>(r.setFadeIn(<span class="built_in">this</span>.modelSetting.getMotionFadeIn(t,e)),r.setFadeOut(<span class="built_in">this</span>.modelSetting.getMotionFadeOut(t,e)),s.cDefine.DEBUG_LOG&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;Start motion : &quot;</span>+o),<span class="literal">null</span>==<span class="built_in">this</span>.modelSetting.getMotionSound(t,e))<span class="built_in">this</span>.mainMotionManager.startMotionPrio(r,i);<span class="keyword">else</span>&#123;<span class="keyword">var</span> n=<span class="built_in">this</span>.modelSetting.getMotionSound(t,e),_=<span class="built_in">document</span>.createElement(<span class="string">&quot;audio&quot;</span>);_.src=<span class="built_in">this</span>.modelHomeDir+n,s.cDefine.DEBUG_LOG&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;Start sound : &quot;</span>+n),_.play(),<span class="built_in">this</span>.mainMotionManager.startMotionPrio(r,i)&#125;&#125;,a.prototype.setExpression=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="built_in">this</span>.expressions[t];s.cDefine.DEBUG_LOG&amp;&amp;<span class="built_in">console</span>.log(<span class="string">&quot;Expression : &quot;</span>+t),<span class="built_in">this</span>.expressionManager.startMotion(e,!<span class="number">1</span>)&#125;,a.prototype.draw=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;n.MatrixStack.push(),n.MatrixStack.multMatrix(<span class="built_in">this</span>.modelMatrix.getArray()),<span class="built_in">this</span>.tmpMatrix=n.MatrixStack.getMatrix(),<span class="built_in">this</span>.live2DModel.setMatrix(<span class="built_in">this</span>.tmpMatrix),<span class="built_in">this</span>.live2DModel.draw(),n.MatrixStack.pop()&#125;,a.prototype.hitTest=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> r=<span class="built_in">this</span>.modelSetting.getHitAreaNum(),o=<span class="number">0</span>;o&lt;r;o++)<span class="keyword">if</span>(t==<span class="built_in">this</span>.modelSetting.getHitAreaName(o))&#123;<span class="keyword">var</span> n=<span class="built_in">this</span>.modelSetting.getHitAreaID(o);<span class="keyword">return</span> <span class="built_in">this</span>.hitTestSimple(n,e,i)&#125;<span class="keyword">return</span>!<span class="number">1</span>&#125;&#125;,<span class="number">89</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t,e,i</span>)</span>&#123;<span class="string">&quot;use strict&quot;</span>;<span class="built_in">Object</span>.defineProperty(e,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),e.ModelSettingJson=o;<span class="keyword">var</span> r=i(<span class="number">81</span>);<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.NAME=<span class="string">&quot;name&quot;</span>,<span class="built_in">this</span>.ID=<span class="string">&quot;id&quot;</span>,<span class="built_in">this</span>.MODEL=<span class="string">&quot;model&quot;</span>,<span class="built_in">this</span>.TEXTURES=<span class="string">&quot;textures&quot;</span>,<span class="built_in">this</span>.HIT_AREAS=<span class="string">&quot;hit_areas&quot;</span>,<span class="built_in">this</span>.PHYSICS=<span class="string">&quot;physics&quot;</span>,<span class="built_in">this</span>.POSE=<span class="string">&quot;pose&quot;</span>,<span class="built_in">this</span>.EXPRESSIONS=<span class="string">&quot;expressions&quot;</span>,<span class="built_in">this</span>.MOTION_GROUPS=<span class="string">&quot;motions&quot;</span>,<span class="built_in">this</span>.SOUND=<span class="string">&quot;sound&quot;</span>,<span class="built_in">this</span>.FADE_IN=<span class="string">&quot;fade_in&quot;</span>,<span class="built_in">this</span>.FADE_OUT=<span class="string">&quot;fade_out&quot;</span>,<span class="built_in">this</span>.LAYOUT=<span class="string">&quot;layout&quot;</span>,<span class="built_in">this</span>.INIT_PARAM=<span class="string">&quot;init_param&quot;</span>,<span class="built_in">this</span>.INIT_PARTS_VISIBLE=<span class="string">&quot;init_parts_visible&quot;</span>,<span class="built_in">this</span>.VALUE=<span class="string">&quot;val&quot;</span>,<span class="built_in">this</span>.FILE=<span class="string">&quot;file&quot;</span>,<span class="built_in">this</span>.json=&#123;&#125;&#125;o.prototype.loadModelSetting=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> i=<span class="built_in">this</span>;r.Live2DFramework.getPlatformManager().loadBytes(t,<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> r=<span class="built_in">String</span>.fromCharCode.apply(<span class="literal">null</span>,<span class="keyword">new</span> <span class="built_in">Uint8Array</span>(t));i.json=<span class="built_in">JSON</span>.parse(r),e()&#125;)&#125;,o.prototype.getTextureFile=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.TEXTURES]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.TEXTURES][t]?<span class="literal">null</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.TEXTURES][t]&#125;,o.prototype.getModelFile=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.json[<span class="built_in">this</span>.MODEL]&#125;,o.prototype.getTextureNum=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.TEXTURES]?<span class="number">0</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.TEXTURES].length&#125;,o.prototype.getHitAreaNum=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.HIT_AREAS]?<span class="number">0</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.HIT_AREAS].length&#125;,o.prototype.getHitAreaID=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.HIT_AREAS]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.HIT_AREAS][t]?<span class="literal">null</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.HIT_AREAS][t][<span class="built_in">this</span>.ID]&#125;,o.prototype.getHitAreaName=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.HIT_AREAS]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.HIT_AREAS][t]?<span class="literal">null</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.HIT_AREAS][t][<span class="built_in">this</span>.NAME]&#125;,o.prototype.getPhysicsFile=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.json[<span class="built_in">this</span>.PHYSICS]&#125;,o.prototype.getPoseFile=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.json[<span class="built_in">this</span>.POSE]&#125;,o.prototype.getExpressionNum=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.EXPRESSIONS]?<span class="number">0</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.EXPRESSIONS].length&#125;,o.prototype.getExpressionFile=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.EXPRESSIONS]?<span class="literal">null</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.EXPRESSIONS][t][<span class="built_in">this</span>.FILE]&#125;,o.prototype.getExpressionName=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.EXPRESSIONS]?<span class="literal">null</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.EXPRESSIONS][t][<span class="built_in">this</span>.NAME]&#125;,o.prototype.getLayout=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">this</span>.json[<span class="built_in">this</span>.LAYOUT]&#125;,o.prototype.getInitParamNum=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.INIT_PARAM]?<span class="number">0</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.INIT_PARAM].length&#125;,o.prototype.getMotionNum=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS][t]?<span class="number">0</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS][t].length&#125;,o.prototype.getMotionFile=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS][t]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS][t][e]?<span class="literal">null</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS][t][e][<span class="built_in">this</span>.FILE]&#125;,o.prototype.getMotionSound=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS][t]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS][t][e]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS][t][e][<span class="built_in">this</span>.SOUND]?<span class="literal">null</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS][t][e][<span class="built_in">this</span>.SOUND]&#125;,o.prototype.getMotionFadeIn=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS][t]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS][t][e]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS][t][e][<span class="built_in">this</span>.FADE_IN]?<span class="number">1e3</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS][t][e][<span class="built_in">this</span>.FADE_IN]&#125;,o.prototype.getMotionFadeOut=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS][t]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS][t][e]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS][t][e][<span class="built_in">this</span>.FADE_OUT]?<span class="number">1e3</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.MOTION_GROUPS][t][e][<span class="built_in">this</span>.FADE_OUT]&#125;,o.prototype.getInitParamID=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.INIT_PARAM]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.INIT_PARAM][t]?<span class="literal">null</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.INIT_PARAM][t][<span class="built_in">this</span>.ID]&#125;,o.prototype.getInitParamValue=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.INIT_PARAM]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.INIT_PARAM][t]?<span class="literal">NaN</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.INIT_PARAM][t][<span class="built_in">this</span>.VALUE]&#125;,o.prototype.getInitPartsVisibleNum=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.INIT_PARTS_VISIBLE]?<span class="number">0</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.INIT_PARTS_VISIBLE].length&#125;,o.prototype.getInitPartsVisibleID=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.INIT_PARTS_VISIBLE]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.INIT_PARTS_VISIBLE][t]?<span class="literal">null</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.INIT_PARTS_VISIBLE][t][<span class="built_in">this</span>.ID]&#125;,o.prototype.getInitPartsVisibleValue=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.INIT_PARTS_VISIBLE]||<span class="literal">null</span>==<span class="built_in">this</span>.json[<span class="built_in">this</span>.INIT_PARTS_VISIBLE][t]?<span class="literal">NaN</span>:<span class="built_in">this</span>.json[<span class="built_in">this</span>.INIT_PARTS_VISIBLE][t][<span class="built_in">this</span>.VALUE]&#125;&#125;&#125;);</span><br><span class="line"><span class="comment">//# sourceMappingURL=L2Dwidget.0.min.js.map</span></span><br></pre></td></tr></table></figure>
<p>原链接</p>
]]></content>
      <tags>
        <tag>看板娘</tag>
      </tags>
  </entry>
</search>
